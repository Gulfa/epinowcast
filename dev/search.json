[{"path":[]},{"path":"epiforecasts.io/epinowcast/dev/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"epiforecasts.io/epinowcast/dev/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"epiforecasts.io/epinowcast/dev/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"epiforecasts.io/epinowcast/dev/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"epiforecasts.io/epinowcast/dev/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible enforcement [INSERT CONTACT METHOD]. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"epiforecasts.io/epinowcast/dev/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"epiforecasts.io/epinowcast/dev/CODE_OF_CONDUCT.html","id":"1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"epiforecasts.io/epinowcast/dev/CODE_OF_CONDUCT.html","id":"2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"epiforecasts.io/epinowcast/dev/CODE_OF_CONDUCT.html","id":"3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"epiforecasts.io/epinowcast/dev/CODE_OF_CONDUCT.html","id":"4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"epiforecasts.io/epinowcast/dev/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.0, available https://www.contributor-covenant.org/version/2/0/ code_of_conduct.html. Community Impact Guidelines inspired Mozilla’s code conduct enforcement ladder. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https:// www.contributor-covenant.org/translations.","code":""},{"path":"epiforecasts.io/epinowcast/dev/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contributing","title":"Contributing","text":"Development community effort, welcome participation.","code":""},{"path":"epiforecasts.io/epinowcast/dev/CONTRIBUTING.html","id":"community","dir":"","previous_headings":"","what":"Community","title":"Contributing","text":"hold monthly community call discuss package development, research questions, developments literature. also run slack community additional development discussion takes places. welcome new comers, please contact package author invite.","code":""},{"path":"epiforecasts.io/epinowcast/dev/CONTRIBUTING.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Contributing","text":"participating project, agree abide code conduct.","code":""},{"path":"epiforecasts.io/epinowcast/dev/CONTRIBUTING.html","id":"discussions","dir":"","previous_headings":"","what":"Discussions","title":"Contributing","text":"https://github.com/epiforecasts/epinowcast/discussions, can post general questions, brainstorm ideas, ask help.","code":""},{"path":"epiforecasts.io/epinowcast/dev/CONTRIBUTING.html","id":"issues","dir":"","previous_headings":"","what":"Issues","title":"Contributing","text":"https://github.com/epiforecasts/epinowcast/issues bug reports, performance issues, maintenance tasks, feature requests. post, please abide following guidelines. posting new issue, please take moment search existing similar issues order avoid duplication. bug reports: can, please install latest GitHub version epinowcast (.e. remotes::install_github(\"epiforecasts/epinowcast\")) verify issue still persists. Describe issue prose clearly concisely possible. Runnable: post enough R code data onlooker can create error computer. Minimal: reduce runtime wherever possible remove complicated details irrelevant issue hand. Readable: format code according tidyverse style guide.","code":""},{"path":"epiforecasts.io/epinowcast/dev/CONTRIBUTING.html","id":"development","dir":"","previous_headings":"","what":"Development","title":"Contributing","text":"External code contributions extremely helpful appreciated. recommended steps. Prior contribution, please propose idea new issue thread reviewer can define intent scope work. Fork repository. Follow GitHub flow create new branch, add commits, open pull request. Discuss code reviewer pull request thread. everything looks good, reviewer merge code project. Please also follow additional guidelines. use develop/ main workflow please target major changes develop branch minor changes main branch. unclear please ask opening initial issue proposing change. Respect architecture reasoning package. Depending scope work, may want read design documents (package vignettes). general aim use data.table manipulate data. However, barrier contributing please use tools familiar raise pull request. reviewer work refactor contribution appropriate add dependencies require. possible, keep contributions small enough easily review manually. okay split work multiple pull requests. Format code according tidyverse style guide check formatting lint_package() function lintr package. Check code coverage covr::package_coverage(). Automated tests cover new changed functionality pull request. Run overall package checks devtools::check() goodpractice::gp() Describe contribution project’s NEWS.md file. sure mention relevant GitHub issue numbers GitHub name done existing news entries. feel contribution substantial enough author contributor status, please add Authors@R field DESCRIPTION file. general, consider contribution sufficient contributor status several minor single major contributions sufficient author status. planning writing paper similar package extension please note contribution feel free suggest like managed.","code":""},{"path":"epiforecasts.io/epinowcast/dev/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2021 epinowcast authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"epiforecasts.io/epinowcast/dev/articles/germany-age-stratified-nowcasting.html","id":"packages","dir":"Articles","previous_headings":"","what":"Packages","title":"Hierarchical nowcasting of age stratified COVID-19 hospitalisations in Germany","text":"use epinowcast package, data.table purrr data manipulation, ggplot2 plotting, knitr produce tables output, loo approximately evaluate sample performance scoringutils evaluate sample forecast performance. vignette includes several models take upwards 10 minutes fit data moderately equipped laptop. speed model fitting CPUs available set number threads used per chain half number real cores available (2 using 2 MCMC chains 4 real cores). Note may cause conflicts processes running computer issue reduce number threads used.","code":"library(epinowcast) library(data.table) library(purrr) library(ggplot2) library(loo) library(scoringutils) library(knitr) threads <- 2"},{"path":"epiforecasts.io/epinowcast/dev/articles/germany-age-stratified-nowcasting.html","id":"data","dir":"Articles","previous_headings":"","what":"Data","title":"Hierarchical nowcasting of age stratified COVID-19 hospitalisations in Germany","text":"Nowcasting effectively estimation reporting patterns recently reported data. requires data patterns previous observations typically means time series data reported multiple consecutive days (theory non-consecutive days used yet supported epinowcast). use COVID-19 hospitalisations date positive test Germany stratified age group available 1st September 2020 (40 days data included prior ) example data available real-time hospitalisations date positive test available 20th October represent hospitalisations finally reported. data sourced Robert Koch Institute via Germany Nowcasting hub deconvolved weekly data days negative reported hospitalisations adjusted. first filter data available 1st September last 40 days. Similarly find data available 20th October dates serve target “true” data.","code":"nat_germany_hosp <- epinowcast::germany_covid19_hosp[location == \"DE\"]  retro_nat_germany <- enw_retrospective_data(   nat_germany_hosp,   rep_date = as.Date(\"2021-09-01\"), ref_date = as.Date(\"2021-09-01\") - 40 ) retro_nat_germany #>       reference_date location age_group confirm report_date #>    1:     2021-07-23       DE       00+      30  2021-07-23 #>    2:     2021-07-24       DE       00+      31  2021-07-24 #>    3:     2021-07-25       DE       00+       8  2021-07-25 #>    4:     2021-07-26       DE       00+       9  2021-07-26 #>    5:     2021-07-27       DE       00+      35  2021-07-27 #>   ---                                                       #> 6023:     2021-07-23       DE     05-14       1  2021-09-01 #> 6024:     2021-07-23       DE     15-34      21  2021-09-01 #> 6025:     2021-07-23       DE     35-59      39  2021-09-01 #> 6026:     2021-07-23       DE     60-79      21  2021-09-01 #> 6027:     2021-07-23       DE       80+       5  2021-09-01 latest_nat_germany <- enw_retrospective_data(   nat_germany_hosp,   rep_date = as.Date(\"2021-10-20\"), ref_date = as.Date(\"2021-09-01\") - 40 ) latest_nat_germany <- latest_nat_germany[   reference_date <= as.Date(\"2021-09-01\") ] latest_nat_germany <- enw_latest_data(latest_nat_germany)"},{"path":"epiforecasts.io/epinowcast/dev/articles/germany-age-stratified-nowcasting.html","id":"data-preprocessing","dir":"Articles","previous_headings":"","what":"Data preprocessing","title":"Hierarchical nowcasting of age stratified COVID-19 hospitalisations in Germany","text":"epinowcast works assuming data preprocessed reporting format requires coupled meta data reference report dates. enw_preprocess_data() can used though users can also use internal functions produce custom preprocessing steps. stage arbitrary groupings observations can defined propagated throughout subsequent modelling steps. data stratified age grouped age group principle grouping combination groups independent reference report date models. also assume maximum delay required make model identifiable. set 40 days due evidence long reporting delays example data note cases majority right censoring occurs first days increasing maximum delay non-linear effect run-time (.e 20 day delay much faster fit model 40 day delay). Note also current formulation delays longer maximum ignored adjusted estimate really data reported maximum delay rather finally reported data. Another key modelling choice make stage model overall hospitalisations jointly age groups rather aggregation age group estimates. implicitly assumes aggregated non-aggregated data comparable (may may case) reporting process shares mechanisms. Another way approach model age stratified hospitalisations aggregate nowcast estimates total counts fitting model.","code":"pobs <- enw_preprocess_data(retro_nat_germany, max_delay = 40, by = \"age_group\") pobs #>                     obs           new_confirm              latest #> 1: <data.table[6020x9]> <data.table[6020x11]> <data.table[287x8]> #>      reporting_triangle        metareference           metareport time #> 1: <data.table[287x42]> <data.table[287x10]> <data.table[560x11]>   41 #>    snapshots groups max_delay   max_date #> 1:       287      7        40 2021-09-01"},{"path":"epiforecasts.io/epinowcast/dev/articles/germany-age-stratified-nowcasting.html","id":"models","dir":"Articles","previous_headings":"","what":"Models","title":"Hierarchical nowcasting of age stratified COVID-19 hospitalisations in Germany","text":"explore range increasingly complex models using subject area knowledge posterior predictive checks motivate modelling choices.","code":""},{"path":"epiforecasts.io/epinowcast/dev/articles/germany-age-stratified-nowcasting.html","id":"shared-reporting-delay-distribution","dir":"Articles","previous_headings":"Models","what":"Shared reporting delay distribution","title":"Hierarchical nowcasting of age stratified COVID-19 hospitalisations in Germany","text":"first explore relatively simple model assumes reporting delays fixed across age groups time. model default simply call epinowcast. want make use CmdStan’s support within-chain parallelisation first compile default model enabled (also need pass threads_per_chain epinowcast). Note use two chains using 2 threads demonstration general using 4 chains recommended. Also note silenced fitting progress potential warning messages general done. first visualise observations available model, nowcast final reported hospitalisations actual reported observations.  order identify areas current model poorly reproducing data plot posterior predictions data. plot faceted age group reference data y axis showing number observations reported given day given reference day x axis showing report date. see fairly clearly oscillations reported cases every 7 days expressed plot oscillations facet appear move left right across facets. indicates kind week day adjustment may needed.","code":"multithread_model <- enw_model(threads = TRUE) options(mc.cores = 2) nowcast <- epinowcast(pobs,   model = multithread_model,   save_warmup = FALSE,   output_loglik = TRUE, pp = TRUE,   chains = 2, threads_per_chain = threads,   show_messages = FALSE, refresh = 0 ) #> Running MCMC with 2 parallel chains, with 2 thread(s) per chain... #>  #> Chain 2 finished in 247.5 seconds. #> Chain 1 finished in 324.4 seconds. #>  #> Both chains finished successfully. #> Mean chain execution time: 285.9 seconds. #> Total execution time: 324.3 seconds. plot(nowcast, latest_obs = latest_nat_germany) +   facet_wrap(vars(age_group), scales = \"free_y\") plot(nowcast, type = \"posterior\") +   facet_wrap(vars(age_group, reference_date), scales = \"free\")"},{"path":"epiforecasts.io/epinowcast/dev/articles/germany-age-stratified-nowcasting.html","id":"reporting-day-of-the-week-effect","dir":"Articles","previous_headings":"Models","what":"Reporting day of the week effect","title":"Hierarchical nowcasting of age stratified COVID-19 hospitalisations in Germany","text":"noted using posterior predictions simple model fit appears day week effect reported observations. adjust introduce random effect day week date report using following helper function uses metadata produced enw_preprocess_data(). Note epinowcast uses sparse design matrix reduce runtimes design matrix shows unique rows index containing mapping full design matrix. speed model fitting make use posterior information previous model (inflation) parameters. Note truly Bayesian approach situations may problematic. now repeat nowcasting step day week reporting model included. Nowcast performance looks visually improved notable variation across age groups 35-59 year old nowcast appearing quite poor (result aggregate nowcast also showing great performance). also plot posterior predictions model way previous model.","code":"dow_report_effects <- enw_formula(pobs$metareport, random = \"day_of_week\") dow_report_effects #> $fixed #> $fixed$formula #> ~1 + day_of_week #> <environment: 0x7f91936a3ee0> #>  #> $fixed$design #>   (Intercept) day_of_weekFriday day_of_weekMonday day_of_weekSaturday #> 1           1                 1                 0                   0 #> 2           1                 0                 0                   1 #> 3           1                 0                 0                   0 #> 4           1                 0                 1                   0 #> 5           1                 0                 0                   0 #> 6           1                 0                 0                   0 #> 7           1                 0                 0                   0 #>   day_of_weekSunday day_of_weekThursday day_of_weekTuesday #> 1                 0                   0                  0 #> 2                 0                   0                  0 #> 3                 1                   0                  0 #> 4                 0                   0                  0 #> 5                 0                   0                  1 #> 6                 0                   0                  0 #> 7                 0                   1                  0 #>   day_of_weekWednesday #> 1                    0 #> 2                    0 #> 3                    0 #> 4                    0 #> 5                    0 #> 6                    1 #> 7                    0 #>  #> $fixed$index #>   [1] 1 2 3 4 5 6 7 1 2 3 4 5 6 7 1 2 3 4 5 6 7 1 2 3 4 5 6 7 1 2 3 4 5 #>  [34] 6 7 1 2 3 4 5 6 7 1 2 3 4 5 6 7 1 2 3 4 5 6 7 1 2 3 4 5 6 7 1 2 3 #>  [67] 4 5 6 7 1 2 3 4 5 6 7 1 2 3 1 2 3 4 5 6 7 1 2 3 4 5 6 7 1 2 3 4 5 #> [100] 6 7 1 2 3 4 5 6 7 1 2 3 4 5 6 7 1 2 3 4 5 6 7 1 2 3 4 5 6 7 1 2 3 #> [133] 4 5 6 7 1 2 3 4 5 6 7 1 2 3 4 5 6 7 1 2 3 4 5 6 7 1 2 3 1 2 3 4 5 #> [166] 6 7 1 2 3 4 5 6 7 1 2 3 4 5 6 7 1 2 3 4 5 6 7 1 2 3 4 5 6 7 1 2 3 #> [199] 4 5 6 7 1 2 3 4 5 6 7 1 2 3 4 5 6 7 1 2 3 4 5 6 7 1 2 3 4 5 6 7 1 #> [232] 2 3 4 5 6 7 1 2 3 1 2 3 4 5 6 7 1 2 3 4 5 6 7 1 2 3 4 5 6 7 1 2 3 #> [265] 4 5 6 7 1 2 3 4 5 6 7 1 2 3 4 5 6 7 1 2 3 4 5 6 7 1 2 3 4 5 6 7 1 #> [298] 2 3 4 5 6 7 1 2 3 4 5 6 7 1 2 3 4 5 6 7 1 2 3 1 2 3 4 5 6 7 1 2 3 #> [331] 4 5 6 7 1 2 3 4 5 6 7 1 2 3 4 5 6 7 1 2 3 4 5 6 7 1 2 3 4 5 6 7 1 #> [364] 2 3 4 5 6 7 1 2 3 4 5 6 7 1 2 3 4 5 6 7 1 2 3 4 5 6 7 1 2 3 4 5 6 #> [397] 7 1 2 3 1 2 3 4 5 6 7 1 2 3 4 5 6 7 1 2 3 4 5 6 7 1 2 3 4 5 6 7 1 #> [430] 2 3 4 5 6 7 1 2 3 4 5 6 7 1 2 3 4 5 6 7 1 2 3 4 5 6 7 1 2 3 4 5 6 #> [463] 7 1 2 3 4 5 6 7 1 2 3 4 5 6 7 1 2 3 1 2 3 4 5 6 7 1 2 3 4 5 6 7 1 #> [496] 2 3 4 5 6 7 1 2 3 4 5 6 7 1 2 3 4 5 6 7 1 2 3 4 5 6 7 1 2 3 4 5 6 #> [529] 7 1 2 3 4 5 6 7 1 2 3 4 5 6 7 1 2 3 4 5 6 7 1 2 3 4 5 6 7 1 2 3 #>  #>  #> $random #> $random$formula #> ~0 + fixed + day_of_week #> <environment: 0x7f91936a3ee0> #>  #> $random$design #>   fixed day_of_week #> 1     0           1 #> 2     0           1 #> 3     0           1 #> 4     0           1 #> 5     0           1 #> 6     0           1 #> 7     0           1 #> attr(,\"assign\") #> [1] 1 2 #>  #> $random$index #> [1] 1 2 3 4 5 6 7 priors <- enw_posterior_as_prior(   nowcast, variables = c(\"logmean_int\", \"logsd_int\", \"sqrt_phi\"), scale = 5 ) priors #>       variable                                             description #> 1:    eobs_lsd      Standard deviation for expected final observations #> 2:  logmean_sd     Standard deviation of scaled pooled logmean effects #> 3:    logsd_sd       Standard deviation of scaled pooled logsd effects #> 4:   rd_eff_sd Standard deviation of scaled pooled report date effects #> 5: logmean_int                                                    <NA> #> 6:   logsd_int                                                    <NA> #> 7:    sqrt_phi                                                    <NA> #>             distribution      mean         sd #> 1: Zero truncated normal 0.0000000 1.00000000 #> 2: Zero truncated normal 0.0000000 1.00000000 #> 3: Zero truncated normal 0.0000000 1.00000000 #> 4: Zero truncated normal 0.0000000 1.00000000 #> 5:                  <NA> 1.1250479 0.22448086 #> 6:                  <NA> 1.7368577 0.24695414 #> 7:                  <NA> 0.5948443 0.09049526 options(mc.cores = 2) dow_nowcast <- epinowcast(pobs,   model = multithread_model,   report_effects = dow_report_effects,   priors = priors,   save_warmup = FALSE,   output_loglik = TRUE, pp = TRUE,   chains = 2, threads_per_chain = threads,   show_messages = FALSE, refresh = 0 ) #> Running MCMC with 2 parallel chains, with 2 thread(s) per chain... #>  #> Chain 2 finished in 589.6 seconds. #> Chain 1 finished in 595.5 seconds. #>  #> Both chains finished successfully. #> Mean chain execution time: 592.5 seconds. #> Total execution time: 595.6 seconds. plot(dow_nowcast, latest_obs = latest_nat_germany) +   facet_wrap(vars(age_group), scales = \"free_y\")"},{"path":"epiforecasts.io/epinowcast/dev/articles/germany-age-stratified-nowcasting.html","id":"age-group-variation","dir":"Articles","previous_headings":"Models","what":"Age group variation","title":"Hierarchical nowcasting of age stratified COVID-19 hospitalisations in Germany","text":"quite likely variation reporting delay age may driving variation nowcast performance noted last model. model using random effect 5 year age group (groups supplied data). nowcast time using age adjusted reference date model day week adjusted report date model. Fit looks slightly better adjustment though uncertainty also increased age groups performance final day data may reduced compared first model.","code":"age_reference_effects <- enw_formula(   pobs$metareference,   random = \"age_group\" ) age_reference_effects #> $fixed #> $fixed$formula #> ~1 + age_group #> <environment: 0x7f91907f7fc0> #>  #> $fixed$design #>     (Intercept) age_group00-04 age_group00+ age_group05-14 #> 1             1              1            0              0 #> 42            1              0            1              0 #> 83            1              0            0              1 #> 124           1              0            0              0 #> 165           1              0            0              0 #> 206           1              0            0              0 #> 247           1              0            0              0 #>     age_group15-34 age_group35-59 age_group60-79 age_group80+ #> 1                0              0              0            0 #> 42               0              0              0            0 #> 83               0              0              0            0 #> 124              1              0              0            0 #> 165              0              1              0            0 #> 206              0              0              1            0 #> 247              0              0              0            1 #>  #> $fixed$index #>   [1] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 #>  [34] 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 #>  [67] 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 #> [100] 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 4 4 4 4 4 4 4 4 4 #> [133] 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 5 #> [166] 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 #> [199] 5 5 5 5 5 5 5 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 #> [232] 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 #> [265] 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 #>  #>  #> $random #> $random$formula #> ~0 + fixed + age_group #> <environment: 0x7f91907f7fc0> #>  #> $random$design #>   fixed age_group #> 1     0         1 #> 2     0         1 #> 3     0         1 #> 4     0         1 #> 5     0         1 #> 6     0         1 #> 7     0         1 #> attr(,\"assign\") #> [1] 1 2 #>  #> $random$index #> [1] 1 2 3 4 5 6 7 options(mc.cores = 2) age_nowcast <- epinowcast(pobs,   model = multithread_model,   reference_effects = age_reference_effects,   report_effects = dow_report_effects,   priors = priors,   save_warmup = FALSE,   output_loglik = TRUE, pp = TRUE,   chains = 2, threads_per_chain = threads,   show_messages = FALSE, refresh = 0 ) #> Running MCMC with 2 parallel chains, with 2 thread(s) per chain... #>  #> Chain 1 finished in 643.6 seconds. #> Chain 2 finished in 660.0 seconds. #>  #> Both chains finished successfully. #> Mean chain execution time: 651.8 seconds. #> Total execution time: 660.1 seconds. plot(age_nowcast, latest_obs = latest_nat_germany) +   facet_wrap(vars(age_group), scales = \"free_y\")"},{"path":"epiforecasts.io/epinowcast/dev/articles/germany-age-stratified-nowcasting.html","id":"variation-based-on-reference-date","dir":"Articles","previous_headings":"Models","what":"Variation based on reference date","title":"Hierarchical nowcasting of age stratified COVID-19 hospitalisations in Germany","text":"case reporting delays change time well across age groups. One way modelling assume piecewise constant variation time modelled first order weekly random walk. attractive property approach limits number report date distributions need evaluated model number weeks data expensive computational step using approach introducing time-varying parameter limits additional computational overhead. define reference date model first need create new features metadata capture order weeks occur . can now define model formula previously time making use custom_random argument also creates random effect time using partial matching without creating new features automatically. fit nowcasting model, comparison previous model looks like introduction variation time introduce slight improvement capturing hospitalisations age groups.","code":"metareference <- enw_add_cumulative_membership(   pobs$metareference[[1]],   feature = \"week\" ) metareference #>            date group age_group location max_confirm cum_prop_reported #>   1: 2021-07-23     2     00-04       DE           0               NaN #>   2: 2021-07-24     2     00-04       DE           4         0.7500000 #>   3: 2021-07-25     2     00-04       DE           5         0.4000000 #>   4: 2021-07-26     2     00-04       DE           1         0.0000000 #>   5: 2021-07-27     2     00-04       DE           0               NaN #>  ---                                                                   #> 283: 2021-08-28     7       80+       DE          28         0.5000000 #> 284: 2021-08-29     7       80+       DE          16         0.2500000 #> 285: 2021-08-30     7       80+       DE          18         0.2777778 #> 286: 2021-08-31     7       80+       DE          33         0.5757576 #> 287: 2021-09-01     7       80+       DE          23         1.0000000 #>      delay day_of_week week month cweek1 cweek2 cweek3 cweek4 cweek5 #>   1:     0      Friday    0     0      0      0      0      0      0 #>   2:     0    Saturday    0     0      0      0      0      0      0 #>   3:     0      Sunday    0     0      0      0      0      0      0 #>   4:     0      Monday    0     0      0      0      0      0      0 #>   5:     0     Tuesday    0     0      0      0      0      0      0 #>  ---                                                                 #> 283:     0    Saturday    5     1      1      1      1      1      1 #> 284:     0      Sunday    5     1      1      1      1      1      1 #> 285:     0      Monday    5     1      1      1      1      1      1 #> 286:     0     Tuesday    5     1      1      1      1      1      1 #> 287:     0   Wednesday    5     2      1      1      1      1      1 week_age_reference_effects <- enw_formula(   metareference,   random = \"age_group\", custom_random = \"cweek\" ) week_age_reference_effects #> $fixed #> $fixed$formula #> ~1 + age_group + cweek1 + cweek2 + cweek3 + cweek4 + cweek5 #> <environment: 0x7f91467faf60> #>  #> $fixed$design #>     (Intercept) age_group00-04 age_group00+ age_group05-14 #> 1             1              1            0              0 #> 8             1              1            0              0 #> 15            1              1            0              0 #> 22            1              1            0              0 #> 29            1              1            0              0 #> 36            1              1            0              0 #> 42            1              0            1              0 #> 49            1              0            1              0 #> 56            1              0            1              0 #> 63            1              0            1              0 #> 70            1              0            1              0 #> 77            1              0            1              0 #> 83            1              0            0              1 #> 90            1              0            0              1 #> 97            1              0            0              1 #> 104           1              0            0              1 #> 111           1              0            0              1 #> 118           1              0            0              1 #> 124           1              0            0              0 #> 131           1              0            0              0 #> 138           1              0            0              0 #> 145           1              0            0              0 #> 152           1              0            0              0 #> 159           1              0            0              0 #> 165           1              0            0              0 #> 172           1              0            0              0 #> 179           1              0            0              0 #> 186           1              0            0              0 #> 193           1              0            0              0 #> 200           1              0            0              0 #> 206           1              0            0              0 #> 213           1              0            0              0 #> 220           1              0            0              0 #> 227           1              0            0              0 #> 234           1              0            0              0 #> 241           1              0            0              0 #> 247           1              0            0              0 #> 254           1              0            0              0 #> 261           1              0            0              0 #> 268           1              0            0              0 #> 275           1              0            0              0 #> 282           1              0            0              0 #>     age_group15-34 age_group35-59 age_group60-79 age_group80+ cweek1 #> 1                0              0              0            0      0 #> 8                0              0              0            0      1 #> 15               0              0              0            0      1 #> 22               0              0              0            0      1 #> 29               0              0              0            0      1 #> 36               0              0              0            0      1 #> 42               0              0              0            0      0 #> 49               0              0              0            0      1 #> 56               0              0              0            0      1 #> 63               0              0              0            0      1 #> 70               0              0              0            0      1 #> 77               0              0              0            0      1 #> 83               0              0              0            0      0 #> 90               0              0              0            0      1 #> 97               0              0              0            0      1 #> 104              0              0              0            0      1 #> 111              0              0              0            0      1 #> 118              0              0              0            0      1 #> 124              1              0              0            0      0 #> 131              1              0              0            0      1 #> 138              1              0              0            0      1 #> 145              1              0              0            0      1 #> 152              1              0              0            0      1 #> 159              1              0              0            0      1 #> 165              0              1              0            0      0 #> 172              0              1              0            0      1 #> 179              0              1              0            0      1 #> 186              0              1              0            0      1 #> 193              0              1              0            0      1 #> 200              0              1              0            0      1 #> 206              0              0              1            0      0 #> 213              0              0              1            0      1 #> 220              0              0              1            0      1 #> 227              0              0              1            0      1 #> 234              0              0              1            0      1 #> 241              0              0              1            0      1 #> 247              0              0              0            1      0 #> 254              0              0              0            1      1 #> 261              0              0              0            1      1 #> 268              0              0              0            1      1 #> 275              0              0              0            1      1 #> 282              0              0              0            1      1 #>     cweek2 cweek3 cweek4 cweek5 #> 1        0      0      0      0 #> 8        0      0      0      0 #> 15       1      0      0      0 #> 22       1      1      0      0 #> 29       1      1      1      0 #> 36       1      1      1      1 #> 42       0      0      0      0 #> 49       0      0      0      0 #> 56       1      0      0      0 #> 63       1      1      0      0 #> 70       1      1      1      0 #> 77       1      1      1      1 #> 83       0      0      0      0 #> 90       0      0      0      0 #> 97       1      0      0      0 #> 104      1      1      0      0 #> 111      1      1      1      0 #> 118      1      1      1      1 #> 124      0      0      0      0 #> 131      0      0      0      0 #> 138      1      0      0      0 #> 145      1      1      0      0 #> 152      1      1      1      0 #> 159      1      1      1      1 #> 165      0      0      0      0 #> 172      0      0      0      0 #> 179      1      0      0      0 #> 186      1      1      0      0 #> 193      1      1      1      0 #> 200      1      1      1      1 #> 206      0      0      0      0 #> 213      0      0      0      0 #> 220      1      0      0      0 #> 227      1      1      0      0 #> 234      1      1      1      0 #> 241      1      1      1      1 #> 247      0      0      0      0 #> 254      0      0      0      0 #> 261      1      0      0      0 #> 268      1      1      0      0 #> 275      1      1      1      0 #> 282      1      1      1      1 #>  #> $fixed$index #>   [1]  1  1  1  1  1  1  1  2  2  2  2  2  2  2  3  3  3  3  3  3  3  4 #>  [23]  4  4  4  4  4  4  5  5  5  5  5  5  5  6  6  6  6  6  6  7  7  7 #>  [45]  7  7  7  7  8  8  8  8  8  8  8  9  9  9  9  9  9  9 10 10 10 10 #>  [67] 10 10 10 11 11 11 11 11 11 11 12 12 12 12 12 12 13 13 13 13 13 13 #>  [89] 13 14 14 14 14 14 14 14 15 15 15 15 15 15 15 16 16 16 16 16 16 16 #> [111] 17 17 17 17 17 17 17 18 18 18 18 18 18 19 19 19 19 19 19 19 20 20 #> [133] 20 20 20 20 20 21 21 21 21 21 21 21 22 22 22 22 22 22 22 23 23 23 #> [155] 23 23 23 23 24 24 24 24 24 24 25 25 25 25 25 25 25 26 26 26 26 26 #> [177] 26 26 27 27 27 27 27 27 27 28 28 28 28 28 28 28 29 29 29 29 29 29 #> [199] 29 30 30 30 30 30 30 31 31 31 31 31 31 31 32 32 32 32 32 32 32 33 #> [221] 33 33 33 33 33 33 34 34 34 34 34 34 34 35 35 35 35 35 35 35 36 36 #> [243] 36 36 36 36 37 37 37 37 37 37 37 38 38 38 38 38 38 38 39 39 39 39 #> [265] 39 39 39 40 40 40 40 40 40 40 41 41 41 41 41 41 41 42 42 42 42 42 #> [287] 42 #>  #>  #> $random #> $random$formula #> ~0 + fixed + age_group + cweek #> <environment: 0x7f91467faf60> #>  #> $random$design #>    fixed age_group cweek #> 1      0         1     0 #> 2      0         1     0 #> 3      0         1     0 #> 4      0         1     0 #> 5      0         1     0 #> 6      0         1     0 #> 7      0         1     0 #> 8      0         0     1 #> 9      0         0     1 #> 10     0         0     1 #> 11     0         0     1 #> 12     0         0     1 #> attr(,\"assign\") #> [1] 1 2 3 #>  #> $random$index #>  [1]  1  2  3  4  5  6  7  8  9 10 11 12 options(mc.cores = 2) week_nowcast <- epinowcast(pobs,   model = multithread_model,   reference_effects = week_age_reference_effects,   report_effects = dow_report_effects,   priors = priors,   save_warmup = FALSE,   output_loglik = TRUE, pp = TRUE,   chains = 2, threads_per_chain = threads,   show_messages = FALSE, refresh = 0 ) #> Running MCMC with 2 parallel chains, with 2 thread(s) per chain... #>  #> Chain 1 finished in 1125.8 seconds. #> Chain 2 finished in 1133.4 seconds. #>  #> Both chains finished successfully. #> Mean chain execution time: 1129.6 seconds. #> Total execution time: 1133.5 seconds. plot(week_nowcast, latest_obs = latest_nat_germany) +   facet_wrap(vars(age_group), scales = \"free_y\")"},{"path":"epiforecasts.io/epinowcast/dev/articles/germany-age-stratified-nowcasting.html","id":"variation-based-on-reference-date-stratified-by-age","dir":"Articles","previous_headings":"Models","what":"Variation based on reference date stratified by age","title":"Hierarchical nowcasting of age stratified COVID-19 hospitalisations in Germany","text":"final hierarchical model makes sense explore whether evidence reporting delays vary week age group jointly. scenario assumption delays may evolve differently time age group reporting effects measurement error still shared across data sets. Models level flexibility currently supported enw_formula() (PR improving interface welcome) need interact lower level package functionality specify . first define fixed effects formula followed design matrix (note printed first 10 columns rows sparse design matrix save space). now need design random effects interact design matrix. first step extract fixed effects. can start building shared pooling standard deviations parameters global random walk age groups random walk residuals age group. Now can create pooling standard deviation design matrix create list describing model. can now fit model (note model quite complex may take time fit increase adapt_delta setting 0.95 mitigate divergent transitions). comparison previous model looks like introduction variation time introduce slight improvement capturing hospitalisations age groups.","code":"fixed_form <- as.formula(paste0(   \"~ 1 + age_group + \",   paste(paste0(     \"age_group:\",     grep(\"cweek\", colnames(metareference), value = TRUE),         collapse = \" + \")),   \" + \",   paste(grep(\"cweek\", colnames(metareference), value = TRUE),         collapse = \" + \") )) fixed <- enw_design(fixed_form, metareference, no_contrasts = TRUE,                     sparse = TRUE) fixed$formula #> ~1 + age_group + age_group:cweek1 + age_group:cweek2 + age_group:cweek3 +  #>     age_group:cweek4 + age_group:cweek5 + cweek1 + cweek2 + cweek3 +  #>     cweek4 + cweek5 fixed$design[1:10, 1:10] #>    (Intercept) age_group00-04 age_group00+ age_group05-14 #> 1            1              1            0              0 #> 8            1              1            0              0 #> 15           1              1            0              0 #> 22           1              1            0              0 #> 29           1              1            0              0 #> 36           1              1            0              0 #> 42           1              0            1              0 #> 49           1              0            1              0 #> 56           1              0            1              0 #> 63           1              0            1              0 #>    age_group15-34 age_group35-59 age_group60-79 age_group80+ cweek1 #> 1               0              0              0            0      0 #> 8               0              0              0            0      1 #> 15              0              0              0            0      1 #> 22              0              0              0            0      1 #> 29              0              0              0            0      1 #> 36              0              0              0            0      1 #> 42              0              0              0            0      0 #> 49              0              0              0            0      1 #> 56              0              0              0            0      1 #> 63              0              0              0            0      1 #>    cweek2 #> 1       0 #> 8       0 #> 15      1 #> 22      1 #> 29      1 #> 36      1 #> 42      0 #> 49      0 #> 56      1 #> 63      1 effects <- enw_effects_metadata(fixed$design) effects #>                   effects fixed #>  1:        age_group00-04     1 #>  2:          age_group00+     1 #>  3:        age_group05-14     1 #>  4:        age_group15-34     1 #>  5:        age_group35-59     1 #>  6:        age_group60-79     1 #>  7:          age_group80+     1 #>  8:                cweek1     1 #>  9:                cweek2     1 #> 10:                cweek3     1 #> 11:                cweek4     1 #> 12:                cweek5     1 #> 13: age_group00-04:cweek1     1 #> 14:   age_group00+:cweek1     1 #> 15: age_group05-14:cweek1     1 #> 16: age_group15-34:cweek1     1 #> 17: age_group35-59:cweek1     1 #> 18: age_group60-79:cweek1     1 #> 19:   age_group80+:cweek1     1 #> 20: age_group00-04:cweek2     1 #> 21:   age_group00+:cweek2     1 #> 22: age_group05-14:cweek2     1 #> 23: age_group15-34:cweek2     1 #> 24: age_group35-59:cweek2     1 #> 25: age_group60-79:cweek2     1 #> 26:   age_group80+:cweek2     1 #> 27: age_group00-04:cweek3     1 #> 28:   age_group00+:cweek3     1 #> 29: age_group05-14:cweek3     1 #> 30: age_group15-34:cweek3     1 #> 31: age_group35-59:cweek3     1 #> 32: age_group60-79:cweek3     1 #> 33:   age_group80+:cweek3     1 #> 34: age_group00-04:cweek4     1 #> 35:   age_group00+:cweek4     1 #> 36: age_group05-14:cweek4     1 #> 37: age_group15-34:cweek4     1 #> 38: age_group35-59:cweek4     1 #> 39: age_group60-79:cweek4     1 #> 40:   age_group80+:cweek4     1 #> 41: age_group00-04:cweek5     1 #> 42:   age_group00+:cweek5     1 #> 43: age_group05-14:cweek5     1 #> 44: age_group15-34:cweek5     1 #> 45: age_group35-59:cweek5     1 #> 46: age_group60-79:cweek5     1 #> 47:   age_group80+:cweek5     1 #>                   effects fixed effects <- enw_add_pooling_effect(effects, \"cweek\", \"cweek\") effects <- enw_add_pooling_effect(effects, \"age_group\", \"age_group\") for (i in  unique(metareference$age_group)) {   effects <- enw_add_pooling_effect(     effects, c(\"cweek\", paste0(\"age_group\", i)), paste0( i, \"_walk\"),       finder_fn = function(effect, pattern) {         grepl(pattern[1], effect) & startsWith(effect, pattern[2])     }) } effects[grepl(\":\", effects), age_group := 0] effects #>                   effects fixed cweek age_group 00-04_walk 00+_walk #>  1:        age_group00-04     0     0         1          0        0 #>  2:          age_group00+     0     0         1          0        0 #>  3:        age_group05-14     0     0         1          0        0 #>  4:        age_group15-34     0     0         1          0        0 #>  5:        age_group35-59     0     0         1          0        0 #>  6:        age_group60-79     0     0         1          0        0 #>  7:          age_group80+     0     0         1          0        0 #>  8:                cweek1     0     1         0          0        0 #>  9:                cweek2     0     1         0          0        0 #> 10:                cweek3     0     1         0          0        0 #> 11:                cweek4     0     1         0          0        0 #> 12:                cweek5     0     1         0          0        0 #> 13: age_group00-04:cweek1     0     0         0          1        0 #> 14:   age_group00+:cweek1     0     0         0          0        1 #> 15: age_group05-14:cweek1     0     0         0          0        0 #> 16: age_group15-34:cweek1     0     0         0          0        0 #> 17: age_group35-59:cweek1     0     0         0          0        0 #> 18: age_group60-79:cweek1     0     0         0          0        0 #> 19:   age_group80+:cweek1     0     0         0          0        0 #> 20: age_group00-04:cweek2     0     0         0          1        0 #> 21:   age_group00+:cweek2     0     0         0          0        1 #> 22: age_group05-14:cweek2     0     0         0          0        0 #> 23: age_group15-34:cweek2     0     0         0          0        0 #> 24: age_group35-59:cweek2     0     0         0          0        0 #> 25: age_group60-79:cweek2     0     0         0          0        0 #> 26:   age_group80+:cweek2     0     0         0          0        0 #> 27: age_group00-04:cweek3     0     0         0          1        0 #> 28:   age_group00+:cweek3     0     0         0          0        1 #> 29: age_group05-14:cweek3     0     0         0          0        0 #> 30: age_group15-34:cweek3     0     0         0          0        0 #> 31: age_group35-59:cweek3     0     0         0          0        0 #> 32: age_group60-79:cweek3     0     0         0          0        0 #> 33:   age_group80+:cweek3     0     0         0          0        0 #> 34: age_group00-04:cweek4     0     0         0          1        0 #> 35:   age_group00+:cweek4     0     0         0          0        1 #> 36: age_group05-14:cweek4     0     0         0          0        0 #> 37: age_group15-34:cweek4     0     0         0          0        0 #> 38: age_group35-59:cweek4     0     0         0          0        0 #> 39: age_group60-79:cweek4     0     0         0          0        0 #> 40:   age_group80+:cweek4     0     0         0          0        0 #> 41: age_group00-04:cweek5     0     0         0          1        0 #> 42:   age_group00+:cweek5     0     0         0          0        1 #> 43: age_group05-14:cweek5     0     0         0          0        0 #> 44: age_group15-34:cweek5     0     0         0          0        0 #> 45: age_group35-59:cweek5     0     0         0          0        0 #> 46: age_group60-79:cweek5     0     0         0          0        0 #> 47:   age_group80+:cweek5     0     0         0          0        0 #>                   effects fixed cweek age_group 00-04_walk 00+_walk #>     05-14_walk 15-34_walk 35-59_walk 60-79_walk 80+_walk #>  1:          0          0          0          0        0 #>  2:          0          0          0          0        0 #>  3:          0          0          0          0        0 #>  4:          0          0          0          0        0 #>  5:          0          0          0          0        0 #>  6:          0          0          0          0        0 #>  7:          0          0          0          0        0 #>  8:          0          0          0          0        0 #>  9:          0          0          0          0        0 #> 10:          0          0          0          0        0 #> 11:          0          0          0          0        0 #> 12:          0          0          0          0        0 #> 13:          0          0          0          0        0 #> 14:          0          0          0          0        0 #> 15:          1          0          0          0        0 #> 16:          0          1          0          0        0 #> 17:          0          0          1          0        0 #> 18:          0          0          0          1        0 #> 19:          0          0          0          0        1 #> 20:          0          0          0          0        0 #> 21:          0          0          0          0        0 #> 22:          1          0          0          0        0 #> 23:          0          1          0          0        0 #> 24:          0          0          1          0        0 #> 25:          0          0          0          1        0 #> 26:          0          0          0          0        1 #> 27:          0          0          0          0        0 #> 28:          0          0          0          0        0 #> 29:          1          0          0          0        0 #> 30:          0          1          0          0        0 #> 31:          0          0          1          0        0 #> 32:          0          0          0          1        0 #> 33:          0          0          0          0        1 #> 34:          0          0          0          0        0 #> 35:          0          0          0          0        0 #> 36:          1          0          0          0        0 #> 37:          0          1          0          0        0 #> 38:          0          0          1          0        0 #> 39:          0          0          0          1        0 #> 40:          0          0          0          0        1 #> 41:          0          0          0          0        0 #> 42:          0          0          0          0        0 #> 43:          1          0          0          0        0 #> 44:          0          1          0          0        0 #> 45:          0          0          1          0        0 #> 46:          0          0          0          1        0 #> 47:          0          0          0          0        1 #>     05-14_walk 15-34_walk 35-59_walk 60-79_walk 80+_walk form <- as.formula(   paste0(\"~ 0 + fixed + cweek + age_group + \",          paste(paste0(\"`\", unique(metareference$age_group), \"_walk`\"),                collapse = \" + \") )) random <- enw_design(form, effects, sparse = FALSE) random #> $formula #> ~0 + fixed + cweek + age_group + `00-04_walk` + `00+_walk` +  #>     `05-14_walk` + `15-34_walk` + `35-59_walk` + `60-79_walk` +  #>     `80+_walk` #>  #> $design #>    fixed cweek age_group `00-04_walk` `00+_walk` `05-14_walk` #> 1      0     0         1            0          0            0 #> 2      0     0         1            0          0            0 #> 3      0     0         1            0          0            0 #> 4      0     0         1            0          0            0 #> 5      0     0         1            0          0            0 #> 6      0     0         1            0          0            0 #> 7      0     0         1            0          0            0 #> 8      0     1         0            0          0            0 #> 9      0     1         0            0          0            0 #> 10     0     1         0            0          0            0 #> 11     0     1         0            0          0            0 #> 12     0     1         0            0          0            0 #> 13     0     0         0            1          0            0 #> 14     0     0         0            0          1            0 #> 15     0     0         0            0          0            1 #> 16     0     0         0            0          0            0 #> 17     0     0         0            0          0            0 #> 18     0     0         0            0          0            0 #> 19     0     0         0            0          0            0 #> 20     0     0         0            1          0            0 #> 21     0     0         0            0          1            0 #> 22     0     0         0            0          0            1 #> 23     0     0         0            0          0            0 #> 24     0     0         0            0          0            0 #> 25     0     0         0            0          0            0 #> 26     0     0         0            0          0            0 #> 27     0     0         0            1          0            0 #> 28     0     0         0            0          1            0 #> 29     0     0         0            0          0            1 #> 30     0     0         0            0          0            0 #> 31     0     0         0            0          0            0 #> 32     0     0         0            0          0            0 #> 33     0     0         0            0          0            0 #> 34     0     0         0            1          0            0 #> 35     0     0         0            0          1            0 #> 36     0     0         0            0          0            1 #> 37     0     0         0            0          0            0 #> 38     0     0         0            0          0            0 #> 39     0     0         0            0          0            0 #> 40     0     0         0            0          0            0 #> 41     0     0         0            1          0            0 #> 42     0     0         0            0          1            0 #> 43     0     0         0            0          0            1 #> 44     0     0         0            0          0            0 #> 45     0     0         0            0          0            0 #> 46     0     0         0            0          0            0 #> 47     0     0         0            0          0            0 #>    `15-34_walk` `35-59_walk` `60-79_walk` `80+_walk` #> 1             0            0            0          0 #> 2             0            0            0          0 #> 3             0            0            0          0 #> 4             0            0            0          0 #> 5             0            0            0          0 #> 6             0            0            0          0 #> 7             0            0            0          0 #> 8             0            0            0          0 #> 9             0            0            0          0 #> 10            0            0            0          0 #> 11            0            0            0          0 #> 12            0            0            0          0 #> 13            0            0            0          0 #> 14            0            0            0          0 #> 15            0            0            0          0 #> 16            1            0            0          0 #> 17            0            1            0          0 #> 18            0            0            1          0 #> 19            0            0            0          1 #> 20            0            0            0          0 #> 21            0            0            0          0 #> 22            0            0            0          0 #> 23            1            0            0          0 #> 24            0            1            0          0 #> 25            0            0            1          0 #> 26            0            0            0          1 #> 27            0            0            0          0 #> 28            0            0            0          0 #> 29            0            0            0          0 #> 30            1            0            0          0 #> 31            0            1            0          0 #> 32            0            0            1          0 #> 33            0            0            0          1 #> 34            0            0            0          0 #> 35            0            0            0          0 #> 36            0            0            0          0 #> 37            1            0            0          0 #> 38            0            1            0          0 #> 39            0            0            1          0 #> 40            0            0            0          1 #> 41            0            0            0          0 #> 42            0            0            0          0 #> 43            0            0            0          0 #> 44            1            0            0          0 #> 45            0            1            0          0 #> 46            0            0            1          0 #> 47            0            0            0          1 #> attr(,\"assign\") #>  [1]  1  2  3  4  5  6  7  8  9 10 #>  #> $index #>  [1]  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 #> [23] 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 #> [45] 45 46 47 custom_reference_effects <- list(fixed = fixed, random = random) options(mc.cores = 2) age_week_nowcast <- epinowcast(pobs,   model = multithread_model,   reference_effects = custom_reference_effects,   report_effects = dow_report_effects,   priors = priors,   save_warmup = FALSE,   output_loglik = TRUE, pp = TRUE,   chains = 2, threads_per_chain = threads,   adapt_delta = 0.95,   show_messages = FALSE, refresh = 0 ) #> Running MCMC with 2 parallel chains, with 2 thread(s) per chain... #>  #> Chain 1 finished in 1374.3 seconds. #> Chain 2 finished in 1391.5 seconds. #>  #> Both chains finished successfully. #> Mean chain execution time: 1382.9 seconds. #> Total execution time: 1391.4 seconds. plot(age_week_nowcast, latest_obs = latest_nat_germany) +   facet_wrap(vars(age_group), scales = \"free_y\")"},{"path":"epiforecasts.io/epinowcast/dev/articles/germany-age-stratified-nowcasting.html","id":"independent-models-for-each-age-group-","dir":"Articles","previous_headings":"Models","what":"Independent models for each age group.","title":"Hierarchical nowcasting of age stratified COVID-19 hospitalisations in Germany","text":"obvious question ask stage using model jointly fits age groups actually beneficial. explore fitting model previously (day week effect report date random walk week occurrence date stratified age) age group independently. define model single call epinowcast fitting dataset independently joint setting likely lead long fit times real benefit. Instead write small helper function preprocess input data, define report reference date models run nowcast. can now use wrapper function data available age group, summarise resulting nowcast, join single data frame. now summarised nowcasts rather object class epinowcast need make use underlying plot function . see performance generally quite good across board though width credible intervals also increased. Importantly 35-59 year old age group captured least well heirarchical models minor reductions performance age groups. suggests dataset nowcast date may relatively little benefit jointly modelling age groups.","code":"independent_epinowcast <- function(obs, max_delay = 40, ...) {   pobs_ind <- enw_preprocess_data(obs, max_delay = max_delay)    metareference <- enw_add_cumulative_membership(     pobs_ind$metareference[[1]],     feature = \"week\"   )    reference_effects <- enw_formula(metareference, custom_random = \"cweek\")   report_effects <- enw_formula(pobs_ind$metareport, random = \"day_of_week\")    nowcast <- epinowcast(     pobs_ind,     reference_effects = reference_effects,     report_effects = report_effects,      ...)    nowcast_summary <- summary(     nowcast,     probs = c(0.025, 0.05, seq(0.1, 0.9, by = 0.1), 0.95, 0.975)   )   return(nowcast_summary) } options(mc.cores = 2)  independent_nowcast <- map(   split(retro_nat_germany, by = \"age_group\"),   independent_epinowcast,   model = multithread_model,   priors = priors,   save_warmup = FALSE,   output_loglik = TRUE, pp = TRUE,   chains = 2, threads_per_chain = threads,   show_messages = FALSE, refresh = 0 ) #> Running MCMC with 2 parallel chains, with 2 thread(s) per chain... #>  #> Chain 2 finished in 89.0 seconds. #> Chain 1 finished in 97.9 seconds. #>  #> Both chains finished successfully. #> Mean chain execution time: 93.4 seconds. #> Total execution time: 97.9 seconds. #>  #> Running MCMC with 2 parallel chains, with 2 thread(s) per chain... #>  #> Chain 2 finished in 37.7 seconds. #> Chain 1 finished in 38.6 seconds. #>  #> Both chains finished successfully. #> Mean chain execution time: 38.1 seconds. #> Total execution time: 38.7 seconds. #>  #> Running MCMC with 2 parallel chains, with 2 thread(s) per chain... #>  #> Chain 1 finished in 35.7 seconds. #> Chain 2 finished in 36.5 seconds. #>  #> Both chains finished successfully. #> Mean chain execution time: 36.1 seconds. #> Total execution time: 36.6 seconds. #>  #> Running MCMC with 2 parallel chains, with 2 thread(s) per chain... #>  #> Chain 2 finished in 66.6 seconds. #> Chain 1 finished in 68.2 seconds. #>  #> Both chains finished successfully. #> Mean chain execution time: 67.4 seconds. #> Total execution time: 68.3 seconds. #>  #> Running MCMC with 2 parallel chains, with 2 thread(s) per chain... #>  #> Chain 2 finished in 84.4 seconds. #> Chain 1 finished in 85.7 seconds. #>  #> Both chains finished successfully. #> Mean chain execution time: 85.0 seconds. #> Total execution time: 85.8 seconds. #>  #> Running MCMC with 2 parallel chains, with 2 thread(s) per chain... #>  #> Chain 2 finished in 73.1 seconds. #> Chain 1 finished in 73.9 seconds. #>  #> Both chains finished successfully. #> Mean chain execution time: 73.5 seconds. #> Total execution time: 74.0 seconds. #>  #> Running MCMC with 2 parallel chains, with 2 thread(s) per chain... #>  #> Chain 1 finished in 70.2 seconds. #> Chain 2 finished in 73.3 seconds. #>  #> Both chains finished successfully. #> Mean chain execution time: 71.7 seconds. #> Total execution time: 73.4 seconds. independent_nowcast <- rbindlist(independent_nowcast) enw_plot_nowcast_quantiles(   independent_nowcast, latest_obs = latest_nat_germany) +   facet_wrap(vars(age_group), scales = \"free_y\")"},{"path":"epiforecasts.io/epinowcast/dev/articles/germany-age-stratified-nowcasting.html","id":"alternative-models","dir":"Articles","previous_headings":"Models","what":"Alternative models","title":"Hierarchical nowcasting of age stratified COVID-19 hospitalisations in Germany","text":"models defined assumed delay distribution, aside report day effects, parametric lognormal distribution. assumptions may less optimal. Alternatives include assuming different distributional form (gamma distribution also supported epinowcast) assuming report delay fully non-parametric yet supported future package versions. number additional models explore within framework supported epinowcast well large number alternative parameterisations yet supported. example, explore models complex reporting day effects, including holidays (supported epinowcast either separate effect assuming reporting hazard Sundays) variation time represent reporting delays changing independently reference date (similar time varying model defined effect occurring report date model rather reference date model). choices data dependent domain knowledge needs used assess likely censoring mechanisms. interested expanding functionality underlying model address issues note epinowcast allows users pass models meaning alternative parameterisations, example altering forecast model used inferring expected observations, may easily tested within package infrastructure. testing done alterations increase flexibility package model improves defaults welcome pull requests.","code":""},{"path":"epiforecasts.io/epinowcast/dev/articles/germany-age-stratified-nowcasting.html","id":"evaluation","dir":"Articles","previous_headings":"","what":"Evaluation","title":"Hierarchical nowcasting of age stratified COVID-19 hospitalisations in Germany","text":"nowcast single date, visualised performance went, evaluation anything complete rigorous can give examples might evaluate performance generally potentially draw useful initial conclusions. first list models give informative names, summarise nowcast posterior model join tidy data frame make analysis easier. allows us plot nowcasts model age group compared latest data. Looking plot shows small differences across models uncertainty generally decreasing model complexity increases. age groups clearly better nowcast others 35-59 year old age group particular poor nowcast coverage.  crude measure general sample performance can use leave one information criterion supplied loo package though note typically appropriate time series data (approximate LFO cross validation likely perform better), approximation used avoid refitting likely poor, accounting refitting model required. see model includes day week effects date report substantially outperformed baseline model adjustment complex models adjusted variation age week date test improved estimated sample performance uncertainty around estimates wide. rigorously, can evaluate nowcasts using proper scoring rules scoringutils package including weighted interval score. limit nowcasts scored last 7 days data make interpretation easier, transform nowcasts format required scoringutils, link latest available data, finally call scoringutils::eval_forecasts(). Note scoring single nowcasts difficult generalise findings one day reporting may unusual. informed view model pick ideally nowcast range dates evaluate . first step score overall performance. see baseline model variation actually performs well models include least day week, age groups variation week performing comparably. performance characteristics relatively similar across models (models biased towards underprediction example). Stratifying age group see trends performance fairly consistent small variation ordering model performs others. Stratifying date find interestingly complex models appear better earlier dates (data available) addition age group appearing factor drives increase performance. finding overall summary simple model performed comparably appears largely driven performance last nowcast target model significantly outperformed others (underlines need evaluate nowcasts different dates single data point may may anomalous may identified real trend). Finally can look across scores relative simple model variation. nicely captures role last data point performance also highlights variation across reference dates age groups models. difference performance hierarchical age models model treats age groups independently also clear model performing well days 35-59 year age group.","code":"nowcasts <- list(   \"Reference: Fixed, Report: Fixed\" = nowcast,   \"Reference: Fixed, Report: Day of week\" = dow_nowcast,   \"Reference: Age, Report: Day of week\" = age_nowcast,   \"Reference: Age and week, Report: Day of week\" = week_nowcast,   \"Reference: Age and week by age, Report: Day of week\" = age_week_nowcast ) summarised_nowcasts <- map(   nowcasts, summary,   probs = c(0.025, 0.05, seq(0.1, 0.9, by = 0.1), 0.95, 0.975) ) summarised_nowcasts$`Independent by age, Reference: Week, Report: Day of week` <- independent_nowcast # nolint  summarised_nowcasts <- rbindlist(summarised_nowcasts, idcol = \"model\",                                  use.names = TRUE) summarised_nowcasts[, `:=`(   model = factor(     model,     levels = c(\"Reference: Fixed, Report: Fixed\",                \"Reference: Fixed, Report: Day of week\",                \"Reference: Age, Report: Day of week\",                \"Reference: Age and week, Report: Day of week\",                \"Reference: Age and week by age, Report: Day of week\",                \"Independent by age, Reference: Week, Report: Day of week\")),   age_group = factor(     age_group,     levels = c(\"00+\", \"00-04\", \"05-14\", \"15-34\", \"35-59\", \"60-79\", \"80+\")) )] enw_plot_nowcast_quantiles(   summarised_nowcasts, latest_obs = latest_nat_germany) +   facet_grid(vars(age_group), vars(model), scales = \"free_y\") loos <- map(nowcasts, ~ .$fit[[1]]$loo()) loo_compare(loos) #>                                                     elpd_diff se_diff #> Reference: Age and week by age, Report: Day of week    0.0       0.0  #> Reference: Age and week, Report: Day of week         -15.7       8.0  #> Reference: Age, Report: Day of week                  -19.8       9.0  #> Reference: Fixed, Report: Day of week                -27.5      10.3  #> Reference: Fixed, Report: Fixed                     -602.3      46.9 score <- enw_score_nowcast(  summarised_nowcasts,  latest_nat_germany[reference_date > (max(reference_date) - 7)] )  overall_score <- score |>   summarise_scores(by = \"model\") |>   kable() age_score <- score |>   summarise_scores(by = c(\"model\", \"age_group\")) |>   kable() date_score <- score |>   summarise_scores(by = c(\"model\", \"reference_date\")) |>   kable() fixed_score <- score[model %in% \"Reference: Fixed, Report: Fixed\",                      .(reference_date, age_group, fixed_is = interval_score)] score <- merge(score, fixed_score, by = c(\"reference_date\", \"age_group\"))  score <- score[, interval_score := interval_score / fixed_is] score <- score[!model %in% \"Reference: Fixed, Report: Fixed\"] plot <- ggplot(score) +   aes(x = reference_date, y = interval_score, col = model) +   geom_hline(yintercept = 1, linetype = 2, size = 1.2, alpha = 0.5) +   geom_line(size = 1.1, alpha = 0.6) +   geom_point(size = 1.2) +   facet_wrap(vars(age_group)) +   scale_color_brewer(palette = \"Dark2\") +   scale_y_log10(labels = scales::percent)  plot <- enw_plot_theme(plot) +   labs(x = \"Reference date\",        y = \"Weighted interval score (relative to Reference: Fixed, Report: Fixed model)\") + # nolint   guides(col = guide_legend(title = \"Model\", ncol = 2)) plot"},{"path":"epiforecasts.io/epinowcast/dev/articles/germany-age-stratified-nowcasting.html","id":"summary","dir":"Articles","previous_headings":"","what":"Summary","title":"Hierarchical nowcasting of age stratified COVID-19 hospitalisations in Germany","text":"vignette showcased using epinowcast nowcast age stratified COVID-19 hospitalisations Germany date test series increasingly complex models motivated data. also showed simple methods exploring nowcasts evaluating . Using limited information available us (nowcast single date used performance date motivate new models) appears models performed acceptably , aside last data point, models age day week effects likely performed better. also fairly clear performance degrades amount reported data reduced intuitively makes sense performance particularly sensitive first day reported data available (.e “now”). apparent finding delays evolve fairly independently across age groups motivates choosing model flexible , least date reference model. Despite independent model fixed effect model well overall, applications choosing model based evaluation, likely select relatively flexible model (day week, age group, age stratified weekly variation) relying hierarchical structure limit overfitting, excepting small reduction performance edge cases (hope edge cases common feature data). However practice, want explore nowcasting evaluating dates possible greater range model structures (discussed alternative modelling section vignette). Note proper scoring approach taken understand model performance (commonly used literature) ranking models based absolute errors groups high counts (35-59 age group) important nowcast correctly groups smaller counts (aged 80+).","code":""},{"path":"epiforecasts.io/epinowcast/dev/articles/model.html","id":"decomposition-into-expected-final-notifications-and-report-delay-components","dir":"Articles","previous_headings":"","what":"Decomposition into expected final notifications and report delay components","title":"Model definition and implementation","text":"concerned outcomes occur time reference (e.g., date symptom onset test disease) reported delay, time report (e.g. date onsets entered central database become available analysis). assume times measured discrete time steps, usually day (case times dates). follow approach Höhle Heiden[2] consider distribution notifications (\\(n_{gtd}\\)) time reference (\\(t\\)) reporting delay (\\(d\\)) conditional final observed count \\(N_{gt}\\) dataset (\\(g\\)) , \\[\\begin{equation}   N_{gt} = \\sum_{d=0}^{D} n_{gtd} \\end{equation}\\] \\(D\\) represents maximum delay time reference time report theory infinite practice set finite value order make model identifiable computationally feasible. \\(t\\) \\(g\\) notifications assumed drawn multinomial distribution \\(N_{gt}\\) trials probability vector (\\(p_{gtd}\\)) length \\(D\\). aim nowcasting predict final observed counts \\(N_{gt}\\) given information available time \\(t\\). estimating components probability vector jointly expected number final notifications (\\(\\lambda_{gt} = \\mathbb{E}[N_{gt}]\\)) dataset \\(g\\) time \\(t\\). alternative approach, explored , consider \\(n_{gtd}\\) independently point model can defined regression can fit using standard software appropriate observation model adjustment reporting delay (.e becomes Poisson Negative Binomial regression). implementation approach available Bastos et al.[6]. downside simplified approach reporting conditionally dependent may make specifying models complex reporting distributions difficult.","code":""},{"path":"epiforecasts.io/epinowcast/dev/articles/model.html","id":"expected-final-notifications","dir":"Articles","previous_headings":"","what":"Expected final notifications","title":"Model definition and implementation","text":"follow approach Günther et al.[1] specify model expected final notifications first order random walk. model can principle model complex time-series approach, Gaussian process, mechanistic semi-mechanistic compartmental model. Extending flexibility model area work evaluating benefits tradeoffs complex approaches. \\[\\begin{align}   \\log (\\lambda_{gt}) &\\sim \\text{Normal}\\left(\\log (\\lambda_{gt-1}) , \\sigma^{\\lambda}_{g} \\right) \\\\   \\log (\\lambda_{g0}) &\\sim \\text{Normal}\\left(\\log (N_{g0} + 1), 1 \\right) \\\\ \\sigma^{\\lambda}_{g} &\\sim \\text{Half-Normal}\\left(0, 1\\right) \\end{align}\\] \\(N_{g0}\\), first time point expected observations dataset \\(d\\), assumed completely observed.","code":""},{"path":"epiforecasts.io/epinowcast/dev/articles/model.html","id":"delay-distribution","dir":"Articles","previous_headings":"","what":"Delay distribution","title":"Model definition and implementation","text":"following approach Günther et al.[1] estimate delay distribution (\\(p_{gtd}\\)) using discrete-time logistic hazard model \\[ h_{gtd} =\\text{P} \\left(\\text{delay}=d|\\text{delay} \\geq d, W_{gtd}\\right) \\] extend model decompose \\(W_{gtd}\\) 3 components: hazard derived parametric delay distribution (\\(\\gamma_{gtd}\\)) dependent covariates time reference, hazard derived parametric distribution (\\(\\delta_{gtd}\\)) dependent covariates time reference, hazard dependent covariates referenced time report (\\(\\epsilon_{gtd}\\)). first component (\\(\\gamma_{gtd}\\)) estimate probability reporting \\(p^{\\prime}_{gtd}\\) given time followed parametric distribution, implemented using discretised log normal (distributions available) log mean log standard deviation defined using intercept arbitrary shared, reference time indexed, covariates fixed (\\(\\alpha_{}\\)) random (\\(\\beta_{}\\)) coefficients (note can include auto-regressive terms), \\[\\begin{align}   p^{\\prime}_{gtd} &\\sim \\text{LogNormal} \\left(\\mu_{gt}, \\upsilon_{gt} \\right) \\\\   \\mu_{gt} &= \\mu_0 + \\alpha_{\\mu} X_{\\gamma} + \\beta_{\\mu} Z_{\\gamma} \\\\   \\upsilon_{gt} &= \\text{exp} \\left( \\upsilon_0 + \\alpha_{\\upsilon} X_{\\gamma} + \\beta_{\\upsilon} Z_{\\gamma} \\right) \\end{align}\\] Note normalise distribution assuming probability mass maximum delay shifted last permissible delay. parametric logit hazard (.e. probability report given time conditional already reported) component model , \\[\\begin{equation}   \\gamma_{gtd} = \\text{logit} \\left(\\frac{p^{\\prime}_{gtd}}{\\left(1 -\\sum^{d-1}_{d^{\\prime}=0} p^{\\prime}_{gtd^{\\prime}} \\right)} \\right) \\end{equation}\\] addition parametric reporting effects may also non-parametric effects referenced reference report dates. represented non-distributional logit hazard components time reference report, defined using intercept arbitrary shared covariates fixed (\\(\\alpha_{}\\)) random (\\(\\beta_{}\\)) coefficients (note can include auto-regressive terms). \\[\\begin{align}   \\delta_{gtd} &= \\mu_0 + \\alpha_{\\delta} X_{\\delta} + \\beta_{\\delta} Z_{\\delta} \\\\   \\epsilon_{gtd} &= \\alpha_{\\epsilon} X_{\\epsilon} + \\beta_{\\epsilon} Z_{\\epsilon} \\end{align}\\] overall hazard group, reference time, delay , \\[\\begin{equation}   \\text{logit} (h_{gtd}) = \\gamma_{gtd} + \\delta_{gtd} +  \\epsilon_{gtd},\\ h_{gtD} = 1 \\end{equation}\\] hazard final day assumed 1 order enforce constraint reported observations reported within specified maximum delay. probability report given delay, reference time, group follows, \\[\\begin{equation}   p_{gt0} = h_{gt0},\\ p_{gtd} = \\left(1 -\\sum^{d-1}_{d^{\\prime}=0} p_{gtd^{\\prime}} \\right) \\times h_{gtd} \\end{equation}\\] (\\(\\alpha_{}\\)) random (\\(\\beta_{}\\)) coefficients standard normal priors default standard half-normal priors pooled standard deviations.","code":""},{"path":"epiforecasts.io/epinowcast/dev/articles/model.html","id":"observation-model-and-nowcast","dir":"Articles","previous_headings":"","what":"Observation model and nowcast","title":"Model definition and implementation","text":"Expected notifications time reference (\\(t\\)) reporting delay can now found multiplying expected final notifications \\(t\\) probability reporting day delay (\\(p_{gtd}\\)). assume negative binomial observation model joint overdispersion parameter (standard half normal prior 1 square root overdispersion[7]) produce nowcast final observed notifications reference time summing posterior estimates unobserved notification observed notifications reference time. \\[\\begin{align}   n_{gtd} \\mid \\lambda_{gt},p_{gtd}  &\\sim \\text{NB}(\\lambda_{gt} \\times p_{gtd}, \\phi),\\ t=1,...,T. \\\\     \\frac{1}{\\sqrt{\\phi}} &\\sim \\text{Half-Normal}(0, 1) \\\\   N_{gt} &= \\sum_{d=0}^{D} n_{gtd} \\end{align}\\]","code":""},{"path":"epiforecasts.io/epinowcast/dev/articles/model.html","id":"implementation","dir":"Articles","previous_headings":"","what":"Implementation","title":"Model definition and implementation","text":"model implemented stan using cmdstanr defaults altered[4,5]. Optional within chain parallelisation available across times reference reduce runtimes. Sparse design matrices used covariates limit number probability mass functions need calculated. epinowcast incorporates additional functionality written R[8] enable plotting nowcasts posterior predictions, summarising nowcasts, scoring using scoringutils[9]. flexible formula interface provided enable easier implementation complex user specified models without interacting underlying code base. functionality modular allowing users extend alter underlying model whilst continuing use package framework.","code":""},{"path":"epiforecasts.io/epinowcast/dev/articles/model.html","id":"references","dir":"Articles","previous_headings":"","what":"References","title":"Model definition and implementation","text":"1. Günther, F., Bender, ., Katz, K., Küchenhoff, H., & Höhle, M. (2021). Nowcasting COVID-19 pandemic Bavaria. Biometrical Journal, 63(3), 490–502. https://doi.org/10.1002/bimj.202000112 2. Höhle, M., & Heiden, M. der. (2014). Bayesian nowcasting STEC O104:H4 outbreak Germany, 2011. Biometrics, 70(4), 993–1002. https://doi.org/10.1111/biom.12194 3. Meyer, S., Held, L., & Höhle, M. (2017). Spatio-temporal analysis epidemic phenomena using R package surveillance. Journal Statistical Software, 77(11), 1–55. https://doi.org/10.18637/jss.v077.i11 4. Team, S. D. (2021). Stan modeling language users guide reference manual, 2.28.1. 5. Gabry, J., & Češnovar, R. (2021). Cmdstanr: R interface ’cmdstan’. 6. Bastos, L. S., Economou, T., Gomes, M. F. C., Villela, D. . M., Coelho, F. C., Cruz, O. G., Stoner, O., Bailey, T., & Codeço, C. T. (2019). modelling approach correcting reporting delays disease surveillance data. Statistics Medicine, 38(22), 4363–4377. https://doi.org/10.1002/sim.8303 7. Team, S. D. (2020). Prior choice recommendations. 8. R Core Team. (2019). R: language environment statistical computing. R Foundation Statistical Computing. https://www.R-project.org/ 9. Bosse, N. (2020). Scoringutils: collection proper scoring rules metrics assess predictions. https://github.com/epiforecasts/scoringutils","code":""},{"path":"epiforecasts.io/epinowcast/dev/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Sam Abbott. Author, maintainer. Adrian Lison. Author. Sebastian Funk. Author. Michael DeWitt. Contributor.","code":""},{"path":"epiforecasts.io/epinowcast/dev/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Sam Abbott, Adrian Lison, Sebastian Funk (2021). epinowcast: Flexible hierarchical nowcasting,  DOI: 10.5281/zenodo.5637165","code":"@Article{,   title = {epinowcast: Flexible hierarchical nowcasting},   author = {Sam Abbott and Adrian Lison and Sebastian Funk},   journal = {Zenodo},   year = {2021},   doi = {10.5281/zenodo.5637165}, }"},{"path":"epiforecasts.io/epinowcast/dev/index.html","id":"flexible-hierarchical-nowcasting-","dir":"","previous_headings":"","what":"Flexible Hierarchical Nowcasting","title":"Flexible Hierarchical Nowcasting","text":"Tools enable flexible efficient hierarchical nowcasting right-truncated epidemiological time-series using semi-mechanistic Bayesian model support range reporting generative processes. Nowcasting, context, gaining situational awareness using currently available observations reporting patterns historical observations. can useful tracking spread infectious disease real-time: without nowcasting, changes trends can obfuscated partial reporting detection may delayed due use simpler methods like truncation. package designed epidemiological applications mind, applied set right-truncated time-series count data.","code":""},{"path":[]},{"path":"epiforecasts.io/epinowcast/dev/index.html","id":"installing-the-package","dir":"","previous_headings":"Installation","what":"Installing the package","title":"Flexible Hierarchical Nowcasting","text":"Install stable development version package : Alternatively, install stable development GitHub using following, unstable development version can also installed GitHub using following,","code":"install.packages(\"epinowcast\", repos = \"https://epiforecasts.r-universe.dev\") remotes::install_github(\"epiforecasts/epinowcast\", dependencies = TRUE) remotes::install_github(\"epiforecasts/epinowcast@develop\", dependencies = TRUE)"},{"path":"epiforecasts.io/epinowcast/dev/index.html","id":"installing-cmdstan","dir":"","previous_headings":"Installation","what":"Installing CmdStan","title":"Flexible Hierarchical Nowcasting","text":"don’t already CmdStan installed , addition installing epinowcast, also necessary install CmdStan using CmdStanR’s install_cmdstan() function enable model fitting epinowcast. suitable C++ toolchain also required. Instructions provided Getting started CmdStanR vignette. See CmdStanR documentation details support.","code":"cmdstanr::install_cmdstan()"},{"path":"epiforecasts.io/epinowcast/dev/index.html","id":"quick-start","dir":"","previous_headings":"","what":"Quick start","title":"Flexible Hierarchical Nowcasting","text":"quick start use COVID-19 hospitalisations date positive test Germany available 1st October 2021 demonstrate specification fitting simple nowcasting model using epinowcast. Examples using complex models available package vignettes papers linked literature vignette.","code":""},{"path":"epiforecasts.io/epinowcast/dev/index.html","id":"package","dir":"","previous_headings":"Quick start","what":"Package","title":"Flexible Hierarchical Nowcasting","text":"well epinowcast quick start makes use data.table ggplot2 installed epinowcast installed.","code":"library(epinowcast) library(data.table) library(ggplot2)"},{"path":"epiforecasts.io/epinowcast/dev/index.html","id":"data","dir":"","previous_headings":"Quick start","what":"Data","title":"Flexible Hierarchical Nowcasting","text":"Nowcasting effectively estimation reporting patterns recently reported data. requires data patterns previous observations typically means time series data reported multiple consecutive days (theory non-consecutive days used yet supported epinowcast). quick start data sourced Robert Koch Institute via Germany Nowcasting hub deconvolved weekly data days negative reported hospitalisations adjusted. first filter snapshot retrospective data available 40 days 1st October contains 40 days data produce nowcast target based latest available hospitalisations date positive test.","code":"nat_germany_hosp <-   germany_covid19_hosp[location == \"DE\"][age_group %in% \"00+\"] |>   enw_filter_report_dates(latest_date = \"2021-10-01\")  retro_nat_germany <- nat_germany_hosp |>   enw_filter_report_dates(remove_days = 40) |>   enw_filter_reference_dates(include_days = 40) retro_nat_germany #>      reference_date location age_group confirm report_date #>   1:     2021-07-13       DE       00+      21  2021-07-13 #>   2:     2021-07-14       DE       00+      22  2021-07-14 #>   3:     2021-07-15       DE       00+      28  2021-07-15 #>   4:     2021-07-16       DE       00+      19  2021-07-16 #>   5:     2021-07-17       DE       00+      20  2021-07-17 #>  ---                                                       #> 857:     2021-07-14       DE       00+      72  2021-08-21 #> 858:     2021-07-15       DE       00+      69  2021-08-22 #> 859:     2021-07-13       DE       00+      59  2021-08-21 #> 860:     2021-07-14       DE       00+      72  2021-08-22 #> 861:     2021-07-13       DE       00+      59  2021-08-22 latest_germany_hosp <- nat_germany_hosp |>   enw_latest_data() |>   enw_filter_reference_dates(remove_days = 40, include_days = 40) head(latest_germany_hosp, n = 10) #>     reference_date location age_group confirm report_date #>  1:     2021-07-13       DE       00+      60  2021-10-01 #>  2:     2021-07-14       DE       00+      74  2021-10-01 #>  3:     2021-07-15       DE       00+      69  2021-10-01 #>  4:     2021-07-16       DE       00+      49  2021-10-01 #>  5:     2021-07-17       DE       00+      67  2021-10-01 #>  6:     2021-07-18       DE       00+      51  2021-10-01 #>  7:     2021-07-19       DE       00+      36  2021-10-01 #>  8:     2021-07-20       DE       00+      96  2021-10-01 #>  9:     2021-07-21       DE       00+      94  2021-10-01 #> 10:     2021-07-22       DE       00+      99  2021-10-01"},{"path":"epiforecasts.io/epinowcast/dev/index.html","id":"data-preprocessing-and-model-specification","dir":"","previous_headings":"Quick start","what":"Data preprocessing and model specification","title":"Flexible Hierarchical Nowcasting","text":"Process reported data format required epinowcast return data.table. stage specify grouping (.e age, location) . can useful check output beginning model make sure everything expected. Construct intercept model date reference using metadata produced enw_preprocess_data(). Note epinowcast uses sparse design matrix reduce runtimes design matrix shows unique rows index containing mapping full design matrix. Construct model random effect day report using metadata produced enw_preprocess_data().","code":"pobs <- enw_preprocess_data(retro_nat_germany, max_delay = 40) pobs #>                    obs          new_confirm              latest #> 1: <data.table[860x9]> <data.table[860x11]> <data.table[41x10]> #>    missing_reference  reporting_triangle      metareference          metareport #> 1: <data.table[0x6]> <data.table[41x42]> <data.table[41x8]> <data.table[80x11]> #>             metadelay time snapshots by groups max_delay   max_date #> 1: <data.table[40x4]>   41        41         1        40 2021-08-22 reference_effects <- enw_formula(~ 1, pobs$metareference[[1]]) report_effects <- enw_formula(~ (1 | day_of_week), pobs$metareport[[1]])"},{"path":"epiforecasts.io/epinowcast/dev/index.html","id":"model-fitting","dir":"","previous_headings":"Quick start","what":"Model fitting","title":"Flexible Hierarchical Nowcasting","text":"First compile model. step can left epinowcast want use multiple cores per chain speed model fitting need compile model feature turned . now fit model produce nowcast using fit. Note use two chains using two threads demonstration general using 4 chains recommended. Also note warm-sampling iterations set default values reduce compute requirements may sufficient many real world use cases. Finally, note silenced fitting progress potential warning messages purposes keeping quick start short general done.","code":"model <- enw_model(threads = TRUE) options(mc.cores = 2) nowcast <- epinowcast(pobs,   model = model,   report_effects = report_effects,   reference_effects = reference_effects,   save_warmup = FALSE, pp = TRUE,   chains = 2, threads_per_chain = 2,   iter_sampling = 500, iter_warmup = 500,   show_messages = FALSE, refresh = 0 ) #> Running MCMC with 2 parallel chains, with 2 thread(s) per chain... #>  #> Chain 2 finished in 50.2 seconds. #> Chain 1 finished in 51.8 seconds. #>  #> Both chains finished successfully. #> Mean chain execution time: 51.0 seconds. #> Total execution time: 52.0 seconds."},{"path":"epiforecasts.io/epinowcast/dev/index.html","id":"results","dir":"","previous_headings":"Quick start","what":"Results","title":"Flexible Hierarchical Nowcasting","text":"Print output epinowcast includes diagnostic information, data used fitting, cmdstanr object. Summarise nowcast latest snapshot data. Plot summarised nowcast currently observed data (optionally recent data comparison purposes).  Plot posterior predictions observed notifications date report check well model reproduces observed data.  Rather using methods supplied epinowcast directly, package functions can also used extract nowcast posterior samples, summarise , plot . demonstrated plotting 7 day incidence hospitalisations.","code":"nowcast #>                    obs          new_confirm              latest #> 1: <data.table[860x9]> <data.table[860x11]> <data.table[41x10]> #>    missing_reference  reporting_triangle      metareference          metareport #> 1: <data.table[0x6]> <data.table[41x42]> <data.table[41x8]> <data.table[80x11]> #>             metadelay time snapshots by groups max_delay   max_date #> 1: <data.table[40x4]>   41        41         1        40 2021-08-22 #>                  fit       data  fit_args samples max_rhat #> 1: <CmdStanMCMC[32]> <list[41]> <list[8]>    1000     1.02 #>    divergent_transitions per_divergent_transitions max_treedepth #> 1:                     0                         0             8 #>    no_at_max_treedepth per_at_max_treedepth run_time #> 1:                  10                 0.01       52 nowcast |>   summary(probs = c(0.05, 0.95)) |>   head(n = 10) #>     reference_date report_date .group max_confirm location age_group confirm #>  1:     2021-07-14  2021-08-22      1          72       DE       00+      72 #>  2:     2021-07-15  2021-08-22      1          69       DE       00+      69 #>  3:     2021-07-16  2021-08-22      1          47       DE       00+      47 #>  4:     2021-07-17  2021-08-22      1          65       DE       00+      65 #>  5:     2021-07-18  2021-08-22      1          50       DE       00+      50 #>  6:     2021-07-19  2021-08-22      1          36       DE       00+      36 #>  7:     2021-07-20  2021-08-22      1          94       DE       00+      94 #>  8:     2021-07-21  2021-08-22      1          91       DE       00+      91 #>  9:     2021-07-22  2021-08-22      1          99       DE       00+      99 #> 10:     2021-07-23  2021-08-22      1          86       DE       00+      86 #>     cum_prop_reported delay prop_reported    mean median        sd    mad q5 #>  1:                 1    39             0  72.000     72 0.0000000 0.0000 72 #>  2:                 1    38             0  69.046     69 0.2189336 0.0000 69 #>  3:                 1    37             0  47.096     47 0.3144565 0.0000 47 #>  4:                 1    36             0  65.176     65 0.4552266 0.0000 65 #>  5:                 1    35             0  50.271     50 0.5251998 0.0000 50 #>  6:                 1    34             0  36.242     36 0.5096035 0.0000 36 #>  7:                 1    33             0  94.457     94 0.6637707 0.0000 94 #>  8:                 1    32             0  91.738     92 0.8945145 1.4826 91 #>  9:                 1    31             0 100.032    100 1.0545559 1.4826 99 #> 10:                 1    30             0  87.159     87 1.1344629 1.4826 86 #>     q95      rhat  ess_bulk  ess_tail #>  1:  72        NA        NA        NA #>  2:  69 1.0007765 1006.9282 1002.6983 #>  3:  48 1.0000955  786.6752  783.7836 #>  4:  66 0.9993755  940.8320  855.6696 #>  5:  51 1.0023047 1000.5282  955.8951 #>  6:  37 1.0006436  989.9089  867.0135 #>  7:  96 0.9982502 1042.2918  882.8528 #>  8:  94 1.0013474  919.6210  759.2589 #>  9: 102 0.9993403  983.8782  930.9138 #> 10:  89 1.0013534  861.8767  886.7324 plot(nowcast, latest_obs = latest_germany_hosp) plot(nowcast, type = \"posterior\") +   facet_wrap(vars(reference_date), scale = \"free\") # extract samples samples <- summary(nowcast, type = \"nowcast_samples\")  # Take a 7 day rolling sum of both samples and observations cols <- c(\"confirm\", \"sample\") samples[, (cols) := lapply(.SD, frollsum, n = 7),   .SDcols = cols, by = \".draw\" ][!is.na(sample)] #>        reference_date report_date .group max_confirm location age_group confirm #>     1:     2021-07-20  2021-08-22      1          94       DE       00+     433 #>     2:     2021-07-20  2021-08-22      1          94       DE       00+     433 #>     3:     2021-07-20  2021-08-22      1          94       DE       00+     433 #>     4:     2021-07-20  2021-08-22      1          94       DE       00+     433 #>     5:     2021-07-20  2021-08-22      1          94       DE       00+     433 #>    ---                                                                          #> 33996:     2021-08-22  2021-08-22      1          45       DE       00+    1093 #> 33997:     2021-08-22  2021-08-22      1          45       DE       00+    1093 #> 33998:     2021-08-22  2021-08-22      1          45       DE       00+    1093 #> 33999:     2021-08-22  2021-08-22      1          45       DE       00+    1093 #> 34000:     2021-08-22  2021-08-22      1          45       DE       00+    1093 #>        cum_prop_reported delay prop_reported .chain .iteration .draw sample #>     1:                 1    33             0      1          1     1    435 #>     2:                 1    33             0      1          2     2    435 #>     3:                 1    33             0      1          3     3    438 #>     4:                 1    33             0      1          4     4    436 #>     5:                 1    33             0      1          5     5    433 #>    ---                                                                      #> 33996:                 1     0             1      2        496   996   2107 #> 33997:                 1     0             1      2        497   997   2374 #> 33998:                 1     0             1      2        498   998   2089 #> 33999:                 1     0             1      2        499   999   1975 #> 34000:                 1     0             1      2        500  1000   2044 latest_germany_hosp_7day <- copy(latest_germany_hosp)[   ,   confirm := frollsum(confirm, n = 7) ][!is.na(confirm)]  # Summarise samples sum_across_last_7_days <- enw_summarise_samples(samples)  # Plot samples enw_plot_nowcast_quantiles(sum_across_last_7_days, latest_germany_hosp_7day)"},{"path":"epiforecasts.io/epinowcast/dev/index.html","id":"learning-more","dir":"","previous_headings":"","what":"Learning more","title":"Flexible Hierarchical Nowcasting","text":"package extensive documentation well vignettes describing underlying methodology, several case studies. Please see package site details. Note development version package also supporting documentation available .","code":""},{"path":"epiforecasts.io/epinowcast/dev/index.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Flexible Hierarchical Nowcasting","text":"using epinowcast work please consider citing using following,","code":"#>  #> To cite epinowcast in publications use: #>  #>   Sam Abbott, Adrian Lison, and Sebastian Funk (2021). epinowcast: Flexible #>   hierarchical nowcasting, DOI: 10.5281/zenodo.5637165 #>  #> A BibTeX entry for LaTeX users is #>  #>   @Article{, #>     title = {epinowcast: Flexible hierarchical nowcasting}, #>     author = {Sam Abbott and Adrian Lison and Sebastian Funk}, #>     journal = {Zenodo}, #>     year = {2021}, #>     doi = {10.5281/zenodo.5637165}, #>   }"},{"path":"epiforecasts.io/epinowcast/dev/index.html","id":"how-to-make-a-bug-report-or-feature-request","dir":"","previous_headings":"","what":"How to make a bug report or feature request","title":"Flexible Hierarchical Nowcasting","text":"Please briefly describe problem output expect issue. question, please don’t open issue. Instead, ask Q page. See contributing guide information.","code":""},{"path":"epiforecasts.io/epinowcast/dev/index.html","id":"contributing","dir":"","previous_headings":"","what":"Contributing","title":"Flexible Hierarchical Nowcasting","text":"welcome contributions new contributors! particularly appreciate help priority problems issues. Please check add issues, /add pull request. See contributing guide information. interested expanding functionality underlying model note epinowcast allows users pass models meaning alternative parameterisations, example altering forecast model used inferring expected observations, may easily tested within package infrastructure. testing done alterations increase flexibility package model improves defaults welcome via pull request communication package authors. Even wanting add updated model package please reach love hear use case.","code":""},{"path":"epiforecasts.io/epinowcast/dev/index.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Flexible Hierarchical Nowcasting","text":"Please note epinowcast project released Contributor Code Conduct. contributing project, agree abide terms.","code":""},{"path":"epiforecasts.io/epinowcast/dev/reference/as_string_formula.html","id":null,"dir":"Reference","previous_headings":"","what":"Converts formulas to strings — as_string_formula","title":"Converts formulas to strings — as_string_formula","text":"Converts formulas strings","code":""},{"path":"epiforecasts.io/epinowcast/dev/reference/as_string_formula.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Converts formulas to strings — as_string_formula","text":"","code":"as_string_formula(formula)"},{"path":"epiforecasts.io/epinowcast/dev/reference/as_string_formula.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Converts formulas to strings — as_string_formula","text":"formula model formula may use standard fixed effects, random effects using lme4 syntax (see re()), random walks defined using rw() helper function.","code":""},{"path":"epiforecasts.io/epinowcast/dev/reference/as_string_formula.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Converts formulas to strings — as_string_formula","text":"character string supplied formula","code":""},{"path":[]},{"path":"epiforecasts.io/epinowcast/dev/reference/as_string_formula.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Converts formulas to strings — as_string_formula","text":"","code":"epinowcast:::as_string_formula(~ 1 + age_group) #> [1] \"~1 + age_group\""},{"path":"epiforecasts.io/epinowcast/dev/reference/check_dates.html","id":null,"dir":"Reference","previous_headings":"","what":"Check Report and Reference Dates are present — check_dates","title":"Check Report and Reference Dates are present — check_dates","text":"Check Report Reference Dates present","code":""},{"path":"epiforecasts.io/epinowcast/dev/reference/check_dates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check Report and Reference Dates are present — check_dates","text":"","code":"check_dates(obs)"},{"path":"epiforecasts.io/epinowcast/dev/reference/check_dates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check Report and Reference Dates are present — check_dates","text":"obs observation data frame containing report_date reference_date columns.","code":""},{"path":"epiforecasts.io/epinowcast/dev/reference/check_dates.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check Report and Reference Dates are present — check_dates","text":"Returns input data.frame dates converted date format already.","code":""},{"path":[]},{"path":"epiforecasts.io/epinowcast/dev/reference/check_group.html","id":null,"dir":"Reference","previous_headings":"","what":"Check Observations for reserved grouping variables — check_group","title":"Check Observations for reserved grouping variables — check_group","text":"Check Observations reserved grouping variables","code":""},{"path":"epiforecasts.io/epinowcast/dev/reference/check_group.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check Observations for reserved grouping variables — check_group","text":"","code":"check_group(obs)"},{"path":"epiforecasts.io/epinowcast/dev/reference/check_group.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check Observations for reserved grouping variables — check_group","text":"obs observation data frame contain .group, .old_group, .new_group reserved variables.","code":""},{"path":[]},{"path":"epiforecasts.io/epinowcast/dev/reference/check_quantiles.html","id":null,"dir":"Reference","previous_headings":"","what":"Check Quantiles Required are Present — check_quantiles","title":"Check Quantiles Required are Present — check_quantiles","text":"Check Quantiles Required Present","code":""},{"path":"epiforecasts.io/epinowcast/dev/reference/check_quantiles.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check Quantiles Required are Present — check_quantiles","text":"","code":"check_quantiles(posterior, req_probs = c(0.5, 0.95, 0.2, 0.8))"},{"path":"epiforecasts.io/epinowcast/dev/reference/check_quantiles.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check Quantiles Required are Present — check_quantiles","text":"posterior dataframe containing quantiles identified using q5 naming scheme. Default: default. req_probs numeric vector required probabilities. Default: c(0.5, 0.95, 0.2, 0.8).","code":""},{"path":[]},{"path":"epiforecasts.io/epinowcast/dev/reference/construct_re.html","id":null,"dir":"Reference","previous_headings":"","what":"Constructs random effect terms — construct_re","title":"Constructs random effect terms — construct_re","text":"Constructs random effect terms","code":""},{"path":"epiforecasts.io/epinowcast/dev/reference/construct_re.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Constructs random effect terms — construct_re","text":"","code":"construct_re(re, data)"},{"path":"epiforecasts.io/epinowcast/dev/reference/construct_re.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Constructs random effect terms — construct_re","text":"re random effect defined using re() takes random effects specified model formula using lme4 syntax. data data.frame observations used define random effects. Must contain variables specified re() term.","code":""},{"path":"epiforecasts.io/epinowcast/dev/reference/construct_re.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Constructs random effect terms — construct_re","text":"list containing transformed data (\"data\"), fixed effects terms (\"terms\") data.frame specifying random effect structure terms (effects). Note specified random effect factor converted one.","code":""},{"path":[]},{"path":"epiforecasts.io/epinowcast/dev/reference/construct_re.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Constructs random effect terms — construct_re","text":"","code":"form <- epinowcast:::parse_formula(~ 1 + (1 | day_of_week)) data <- enw_example(\"prepr\")$metareference[[1]] random_effect <- re(form$random[[1]]) epinowcast:::construct_re(random_effect, data) #> $data #>           date .group location age_group delay day_of_week week month #>  1: 2021-07-13      1       DE       00+     0     Tuesday    0     0 #>  2: 2021-07-14      1       DE       00+     0   Wednesday    0     0 #>  3: 2021-07-15      1       DE       00+     0    Thursday    0     0 #>  4: 2021-07-16      1       DE       00+     0      Friday    1     0 #>  5: 2021-07-17      1       DE       00+     0    Saturday    1     0 #>  6: 2021-07-18      1       DE       00+     0      Sunday    1     0 #>  7: 2021-07-19      1       DE       00+     0      Monday    1     0 #>  8: 2021-07-20      1       DE       00+     0     Tuesday    1     0 #>  9: 2021-07-21      1       DE       00+     0   Wednesday    1     0 #> 10: 2021-07-22      1       DE       00+     0    Thursday    1     0 #> 11: 2021-07-23      1       DE       00+     0      Friday    2     0 #> 12: 2021-07-24      1       DE       00+     0    Saturday    2     0 #> 13: 2021-07-25      1       DE       00+     0      Sunday    2     0 #> 14: 2021-07-26      1       DE       00+     0      Monday    2     0 #> 15: 2021-07-27      1       DE       00+     0     Tuesday    2     0 #> 16: 2021-07-28      1       DE       00+     0   Wednesday    2     0 #> 17: 2021-07-29      1       DE       00+     0    Thursday    2     0 #> 18: 2021-07-30      1       DE       00+     0      Friday    3     0 #> 19: 2021-07-31      1       DE       00+     0    Saturday    3     0 #> 20: 2021-08-01      1       DE       00+     0      Sunday    3     1 #> 21: 2021-08-02      1       DE       00+     0      Monday    3     1 #> 22: 2021-08-03      1       DE       00+     0     Tuesday    3     1 #> 23: 2021-08-04      1       DE       00+     0   Wednesday    3     1 #> 24: 2021-08-05      1       DE       00+     0    Thursday    3     1 #> 25: 2021-08-06      1       DE       00+     0      Friday    4     1 #> 26: 2021-08-07      1       DE       00+     0    Saturday    4     1 #> 27: 2021-08-08      1       DE       00+     0      Sunday    4     1 #> 28: 2021-08-09      1       DE       00+     0      Monday    4     1 #> 29: 2021-08-10      1       DE       00+     0     Tuesday    4     1 #> 30: 2021-08-11      1       DE       00+     0   Wednesday    4     1 #> 31: 2021-08-12      1       DE       00+     0    Thursday    4     1 #> 32: 2021-08-13      1       DE       00+     0      Friday    5     1 #> 33: 2021-08-14      1       DE       00+     0    Saturday    5     1 #> 34: 2021-08-15      1       DE       00+     0      Sunday    5     1 #> 35: 2021-08-16      1       DE       00+     0      Monday    5     1 #> 36: 2021-08-17      1       DE       00+     0     Tuesday    5     1 #> 37: 2021-08-18      1       DE       00+     0   Wednesday    5     1 #> 38: 2021-08-19      1       DE       00+     0    Thursday    5     1 #> 39: 2021-08-20      1       DE       00+     0      Friday    6     1 #> 40: 2021-08-21      1       DE       00+     0    Saturday    6     1 #> 41: 2021-08-22      1       DE       00+     0      Sunday    6     1 #>           date .group location age_group delay day_of_week week month #>  #> $terms #> [1] \"day_of_week\" #>  #> $effects #>                 effects fixed day_of_week #> 1:    day_of_weekFriday     0           1 #> 2:    day_of_weekMonday     0           1 #> 3:  day_of_weekSaturday     0           1 #> 4:    day_of_weekSunday     0           1 #> 5:  day_of_weekThursday     0           1 #> 6:   day_of_weekTuesday     0           1 #> 7: day_of_weekWednesday     0           1 #>"},{"path":"epiforecasts.io/epinowcast/dev/reference/construct_rw.html","id":null,"dir":"Reference","previous_headings":"","what":"Constructs random walk terms — construct_rw","title":"Constructs random walk terms — construct_rw","text":"function takes random walks defined rw(), produces required additional variables (denoted using \"c\" prefix constructed using enw_add_cumulative_membership()), returns extended data.frame along new fixed effects random effect structure.","code":""},{"path":"epiforecasts.io/epinowcast/dev/reference/construct_rw.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Constructs random walk terms — construct_rw","text":"","code":"construct_rw(rw, data)"},{"path":"epiforecasts.io/epinowcast/dev/reference/construct_rw.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Constructs random walk terms — construct_rw","text":"rw random walk term defined rw(). data data.frame observations used define random walk term. Must contain time grouping variables defined rw() term specified.","code":""},{"path":"epiforecasts.io/epinowcast/dev/reference/construct_rw.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Constructs random walk terms — construct_rw","text":"list containing following: data: input data.frame addition new variables required specified random walk. added using enw_add_cumulative_membership(). -terms: character vector new fixed effects terms add model formula. effects: data.frame describing random effect structure new effects.","code":""},{"path":[]},{"path":"epiforecasts.io/epinowcast/dev/reference/construct_rw.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Constructs random walk terms — construct_rw","text":"","code":"data <- enw_example(\"preproc\")$metareference[[1]]  epinowcast:::construct_rw(rw(week), data) #> $data #>           date .group location age_group delay day_of_week week month cweek1 #>  1: 2021-07-13      1       DE       00+     0     Tuesday    0     0      0 #>  2: 2021-07-14      1       DE       00+     0   Wednesday    0     0      0 #>  3: 2021-07-15      1       DE       00+     0    Thursday    0     0      0 #>  4: 2021-07-16      1       DE       00+     0      Friday    1     0      1 #>  5: 2021-07-17      1       DE       00+     0    Saturday    1     0      1 #>  6: 2021-07-18      1       DE       00+     0      Sunday    1     0      1 #>  7: 2021-07-19      1       DE       00+     0      Monday    1     0      1 #>  8: 2021-07-20      1       DE       00+     0     Tuesday    1     0      1 #>  9: 2021-07-21      1       DE       00+     0   Wednesday    1     0      1 #> 10: 2021-07-22      1       DE       00+     0    Thursday    1     0      1 #> 11: 2021-07-23      1       DE       00+     0      Friday    2     0      1 #> 12: 2021-07-24      1       DE       00+     0    Saturday    2     0      1 #> 13: 2021-07-25      1       DE       00+     0      Sunday    2     0      1 #> 14: 2021-07-26      1       DE       00+     0      Monday    2     0      1 #> 15: 2021-07-27      1       DE       00+     0     Tuesday    2     0      1 #> 16: 2021-07-28      1       DE       00+     0   Wednesday    2     0      1 #> 17: 2021-07-29      1       DE       00+     0    Thursday    2     0      1 #> 18: 2021-07-30      1       DE       00+     0      Friday    3     0      1 #> 19: 2021-07-31      1       DE       00+     0    Saturday    3     0      1 #> 20: 2021-08-01      1       DE       00+     0      Sunday    3     1      1 #> 21: 2021-08-02      1       DE       00+     0      Monday    3     1      1 #> 22: 2021-08-03      1       DE       00+     0     Tuesday    3     1      1 #> 23: 2021-08-04      1       DE       00+     0   Wednesday    3     1      1 #> 24: 2021-08-05      1       DE       00+     0    Thursday    3     1      1 #> 25: 2021-08-06      1       DE       00+     0      Friday    4     1      1 #> 26: 2021-08-07      1       DE       00+     0    Saturday    4     1      1 #> 27: 2021-08-08      1       DE       00+     0      Sunday    4     1      1 #> 28: 2021-08-09      1       DE       00+     0      Monday    4     1      1 #> 29: 2021-08-10      1       DE       00+     0     Tuesday    4     1      1 #> 30: 2021-08-11      1       DE       00+     0   Wednesday    4     1      1 #> 31: 2021-08-12      1       DE       00+     0    Thursday    4     1      1 #> 32: 2021-08-13      1       DE       00+     0      Friday    5     1      1 #> 33: 2021-08-14      1       DE       00+     0    Saturday    5     1      1 #> 34: 2021-08-15      1       DE       00+     0      Sunday    5     1      1 #> 35: 2021-08-16      1       DE       00+     0      Monday    5     1      1 #> 36: 2021-08-17      1       DE       00+     0     Tuesday    5     1      1 #> 37: 2021-08-18      1       DE       00+     0   Wednesday    5     1      1 #> 38: 2021-08-19      1       DE       00+     0    Thursday    5     1      1 #> 39: 2021-08-20      1       DE       00+     0      Friday    6     1      1 #> 40: 2021-08-21      1       DE       00+     0    Saturday    6     1      1 #> 41: 2021-08-22      1       DE       00+     0      Sunday    6     1      1 #>           date .group location age_group delay day_of_week week month cweek1 #>     cweek2 cweek3 cweek4 cweek5 cweek6 #>  1:      0      0      0      0      0 #>  2:      0      0      0      0      0 #>  3:      0      0      0      0      0 #>  4:      0      0      0      0      0 #>  5:      0      0      0      0      0 #>  6:      0      0      0      0      0 #>  7:      0      0      0      0      0 #>  8:      0      0      0      0      0 #>  9:      0      0      0      0      0 #> 10:      0      0      0      0      0 #> 11:      1      0      0      0      0 #> 12:      1      0      0      0      0 #> 13:      1      0      0      0      0 #> 14:      1      0      0      0      0 #> 15:      1      0      0      0      0 #> 16:      1      0      0      0      0 #> 17:      1      0      0      0      0 #> 18:      1      1      0      0      0 #> 19:      1      1      0      0      0 #> 20:      1      1      0      0      0 #> 21:      1      1      0      0      0 #> 22:      1      1      0      0      0 #> 23:      1      1      0      0      0 #> 24:      1      1      0      0      0 #> 25:      1      1      1      0      0 #> 26:      1      1      1      0      0 #> 27:      1      1      1      0      0 #> 28:      1      1      1      0      0 #> 29:      1      1      1      0      0 #> 30:      1      1      1      0      0 #> 31:      1      1      1      0      0 #> 32:      1      1      1      1      0 #> 33:      1      1      1      1      0 #> 34:      1      1      1      1      0 #> 35:      1      1      1      1      0 #> 36:      1      1      1      1      0 #> 37:      1      1      1      1      0 #> 38:      1      1      1      1      0 #> 39:      1      1      1      1      1 #> 40:      1      1      1      1      1 #> 41:      1      1      1      1      1 #>     cweek2 cweek3 cweek4 cweek5 cweek6 #>  #> $terms #> [1] \"cweek1\" \"cweek2\" \"cweek3\" \"cweek4\" \"cweek5\" \"cweek6\" #>  #> $effects #>    effects fixed week #> 1:  cweek1     0    1 #> 2:  cweek2     0    1 #> 3:  cweek3     0    1 #> 4:  cweek4     0    1 #> 5:  cweek5     0    1 #> 6:  cweek6     0    1 #>   epinowcast:::construct_rw(rw(week, day_of_week), data) #> $data #>           date .group location age_group delay day_of_week week month cweek1 #>  1: 2021-07-13      1       DE       00+     0     Tuesday    0     0      0 #>  2: 2021-07-14      1       DE       00+     0   Wednesday    0     0      0 #>  3: 2021-07-15      1       DE       00+     0    Thursday    0     0      0 #>  4: 2021-07-16      1       DE       00+     0      Friday    1     0      1 #>  5: 2021-07-17      1       DE       00+     0    Saturday    1     0      1 #>  6: 2021-07-18      1       DE       00+     0      Sunday    1     0      1 #>  7: 2021-07-19      1       DE       00+     0      Monday    1     0      1 #>  8: 2021-07-20      1       DE       00+     0     Tuesday    1     0      1 #>  9: 2021-07-21      1       DE       00+     0   Wednesday    1     0      1 #> 10: 2021-07-22      1       DE       00+     0    Thursday    1     0      1 #> 11: 2021-07-23      1       DE       00+     0      Friday    2     0      1 #> 12: 2021-07-24      1       DE       00+     0    Saturday    2     0      1 #> 13: 2021-07-25      1       DE       00+     0      Sunday    2     0      1 #> 14: 2021-07-26      1       DE       00+     0      Monday    2     0      1 #> 15: 2021-07-27      1       DE       00+     0     Tuesday    2     0      1 #> 16: 2021-07-28      1       DE       00+     0   Wednesday    2     0      1 #> 17: 2021-07-29      1       DE       00+     0    Thursday    2     0      1 #> 18: 2021-07-30      1       DE       00+     0      Friday    3     0      1 #> 19: 2021-07-31      1       DE       00+     0    Saturday    3     0      1 #> 20: 2021-08-01      1       DE       00+     0      Sunday    3     1      1 #> 21: 2021-08-02      1       DE       00+     0      Monday    3     1      1 #> 22: 2021-08-03      1       DE       00+     0     Tuesday    3     1      1 #> 23: 2021-08-04      1       DE       00+     0   Wednesday    3     1      1 #> 24: 2021-08-05      1       DE       00+     0    Thursday    3     1      1 #> 25: 2021-08-06      1       DE       00+     0      Friday    4     1      1 #> 26: 2021-08-07      1       DE       00+     0    Saturday    4     1      1 #> 27: 2021-08-08      1       DE       00+     0      Sunday    4     1      1 #> 28: 2021-08-09      1       DE       00+     0      Monday    4     1      1 #> 29: 2021-08-10      1       DE       00+     0     Tuesday    4     1      1 #> 30: 2021-08-11      1       DE       00+     0   Wednesday    4     1      1 #> 31: 2021-08-12      1       DE       00+     0    Thursday    4     1      1 #> 32: 2021-08-13      1       DE       00+     0      Friday    5     1      1 #> 33: 2021-08-14      1       DE       00+     0    Saturday    5     1      1 #> 34: 2021-08-15      1       DE       00+     0      Sunday    5     1      1 #> 35: 2021-08-16      1       DE       00+     0      Monday    5     1      1 #> 36: 2021-08-17      1       DE       00+     0     Tuesday    5     1      1 #> 37: 2021-08-18      1       DE       00+     0   Wednesday    5     1      1 #> 38: 2021-08-19      1       DE       00+     0    Thursday    5     1      1 #> 39: 2021-08-20      1       DE       00+     0      Friday    6     1      1 #> 40: 2021-08-21      1       DE       00+     0    Saturday    6     1      1 #> 41: 2021-08-22      1       DE       00+     0      Sunday    6     1      1 #>           date .group location age_group delay day_of_week week month cweek1 #>     cweek2 cweek3 cweek4 cweek5 cweek6 #>  1:      0      0      0      0      0 #>  2:      0      0      0      0      0 #>  3:      0      0      0      0      0 #>  4:      0      0      0      0      0 #>  5:      0      0      0      0      0 #>  6:      0      0      0      0      0 #>  7:      0      0      0      0      0 #>  8:      0      0      0      0      0 #>  9:      0      0      0      0      0 #> 10:      0      0      0      0      0 #> 11:      1      0      0      0      0 #> 12:      1      0      0      0      0 #> 13:      1      0      0      0      0 #> 14:      1      0      0      0      0 #> 15:      1      0      0      0      0 #> 16:      1      0      0      0      0 #> 17:      1      0      0      0      0 #> 18:      1      1      0      0      0 #> 19:      1      1      0      0      0 #> 20:      1      1      0      0      0 #> 21:      1      1      0      0      0 #> 22:      1      1      0      0      0 #> 23:      1      1      0      0      0 #> 24:      1      1      0      0      0 #> 25:      1      1      1      0      0 #> 26:      1      1      1      0      0 #> 27:      1      1      1      0      0 #> 28:      1      1      1      0      0 #> 29:      1      1      1      0      0 #> 30:      1      1      1      0      0 #> 31:      1      1      1      0      0 #> 32:      1      1      1      1      0 #> 33:      1      1      1      1      0 #> 34:      1      1      1      1      0 #> 35:      1      1      1      1      0 #> 36:      1      1      1      1      0 #> 37:      1      1      1      1      0 #> 38:      1      1      1      1      0 #> 39:      1      1      1      1      1 #> 40:      1      1      1      1      1 #> 41:      1      1      1      1      1 #>     cweek2 cweek3 cweek4 cweek5 cweek6 #>  #> $terms #> [1] \"day_of_week:cweek1\" \"day_of_week:cweek2\" \"day_of_week:cweek3\" #> [4] \"day_of_week:cweek4\" \"day_of_week:cweek5\" \"day_of_week:cweek6\" #>  #> $effects #>                         effects fixed day_of_weekTuesday__week #>  1:    day_of_weekFriday:cweek1     0                        0 #>  2:    day_of_weekMonday:cweek1     0                        0 #>  3:  day_of_weekSaturday:cweek1     0                        0 #>  4:    day_of_weekSunday:cweek1     0                        0 #>  5:  day_of_weekThursday:cweek1     0                        0 #>  6:   day_of_weekTuesday:cweek1     0                        1 #>  7: day_of_weekWednesday:cweek1     0                        0 #>  8:    day_of_weekFriday:cweek2     0                        0 #>  9:    day_of_weekMonday:cweek2     0                        0 #> 10:  day_of_weekSaturday:cweek2     0                        0 #> 11:    day_of_weekSunday:cweek2     0                        0 #> 12:  day_of_weekThursday:cweek2     0                        0 #> 13:   day_of_weekTuesday:cweek2     0                        1 #> 14: day_of_weekWednesday:cweek2     0                        0 #> 15:    day_of_weekFriday:cweek3     0                        0 #> 16:    day_of_weekMonday:cweek3     0                        0 #> 17:  day_of_weekSaturday:cweek3     0                        0 #> 18:    day_of_weekSunday:cweek3     0                        0 #> 19:  day_of_weekThursday:cweek3     0                        0 #> 20:   day_of_weekTuesday:cweek3     0                        1 #> 21: day_of_weekWednesday:cweek3     0                        0 #> 22:    day_of_weekFriday:cweek4     0                        0 #> 23:    day_of_weekMonday:cweek4     0                        0 #> 24:  day_of_weekSaturday:cweek4     0                        0 #> 25:    day_of_weekSunday:cweek4     0                        0 #> 26:  day_of_weekThursday:cweek4     0                        0 #> 27:   day_of_weekTuesday:cweek4     0                        1 #> 28: day_of_weekWednesday:cweek4     0                        0 #> 29:    day_of_weekFriday:cweek5     0                        0 #> 30:    day_of_weekMonday:cweek5     0                        0 #> 31:  day_of_weekSaturday:cweek5     0                        0 #> 32:    day_of_weekSunday:cweek5     0                        0 #> 33:  day_of_weekThursday:cweek5     0                        0 #> 34:   day_of_weekTuesday:cweek5     0                        1 #> 35: day_of_weekWednesday:cweek5     0                        0 #> 36:    day_of_weekFriday:cweek6     0                        0 #> 37:    day_of_weekMonday:cweek6     0                        0 #> 38:  day_of_weekSaturday:cweek6     0                        0 #> 39:    day_of_weekSunday:cweek6     0                        0 #> 40:  day_of_weekThursday:cweek6     0                        0 #> 41:   day_of_weekTuesday:cweek6     0                        1 #> 42: day_of_weekWednesday:cweek6     0                        0 #>                         effects fixed day_of_weekTuesday__week #>     day_of_weekWednesday__week day_of_weekThursday__week #>  1:                          0                         0 #>  2:                          0                         0 #>  3:                          0                         0 #>  4:                          0                         0 #>  5:                          0                         1 #>  6:                          0                         0 #>  7:                          1                         0 #>  8:                          0                         0 #>  9:                          0                         0 #> 10:                          0                         0 #> 11:                          0                         0 #> 12:                          0                         1 #> 13:                          0                         0 #> 14:                          1                         0 #> 15:                          0                         0 #> 16:                          0                         0 #> 17:                          0                         0 #> 18:                          0                         0 #> 19:                          0                         1 #> 20:                          0                         0 #> 21:                          1                         0 #> 22:                          0                         0 #> 23:                          0                         0 #> 24:                          0                         0 #> 25:                          0                         0 #> 26:                          0                         1 #> 27:                          0                         0 #> 28:                          1                         0 #> 29:                          0                         0 #> 30:                          0                         0 #> 31:                          0                         0 #> 32:                          0                         0 #> 33:                          0                         1 #> 34:                          0                         0 #> 35:                          1                         0 #> 36:                          0                         0 #> 37:                          0                         0 #> 38:                          0                         0 #> 39:                          0                         0 #> 40:                          0                         1 #> 41:                          0                         0 #> 42:                          1                         0 #>     day_of_weekWednesday__week day_of_weekThursday__week #>     day_of_weekFriday__week day_of_weekSaturday__week day_of_weekSunday__week #>  1:                       1                         0                       0 #>  2:                       0                         0                       0 #>  3:                       0                         1                       0 #>  4:                       0                         0                       1 #>  5:                       0                         0                       0 #>  6:                       0                         0                       0 #>  7:                       0                         0                       0 #>  8:                       1                         0                       0 #>  9:                       0                         0                       0 #> 10:                       0                         1                       0 #> 11:                       0                         0                       1 #> 12:                       0                         0                       0 #> 13:                       0                         0                       0 #> 14:                       0                         0                       0 #> 15:                       1                         0                       0 #> 16:                       0                         0                       0 #> 17:                       0                         1                       0 #> 18:                       0                         0                       1 #> 19:                       0                         0                       0 #> 20:                       0                         0                       0 #> 21:                       0                         0                       0 #> 22:                       1                         0                       0 #> 23:                       0                         0                       0 #> 24:                       0                         1                       0 #> 25:                       0                         0                       1 #> 26:                       0                         0                       0 #> 27:                       0                         0                       0 #> 28:                       0                         0                       0 #> 29:                       1                         0                       0 #> 30:                       0                         0                       0 #> 31:                       0                         1                       0 #> 32:                       0                         0                       1 #> 33:                       0                         0                       0 #> 34:                       0                         0                       0 #> 35:                       0                         0                       0 #> 36:                       1                         0                       0 #> 37:                       0                         0                       0 #> 38:                       0                         1                       0 #> 39:                       0                         0                       1 #> 40:                       0                         0                       0 #> 41:                       0                         0                       0 #> 42:                       0                         0                       0 #>     day_of_weekFriday__week day_of_weekSaturday__week day_of_weekSunday__week #>     day_of_weekMonday__week #>  1:                       0 #>  2:                       1 #>  3:                       0 #>  4:                       0 #>  5:                       0 #>  6:                       0 #>  7:                       0 #>  8:                       0 #>  9:                       1 #> 10:                       0 #> 11:                       0 #> 12:                       0 #> 13:                       0 #> 14:                       0 #> 15:                       0 #> 16:                       1 #> 17:                       0 #> 18:                       0 #> 19:                       0 #> 20:                       0 #> 21:                       0 #> 22:                       0 #> 23:                       1 #> 24:                       0 #> 25:                       0 #> 26:                       0 #> 27:                       0 #> 28:                       0 #> 29:                       0 #> 30:                       1 #> 31:                       0 #> 32:                       0 #> 33:                       0 #> 34:                       0 #> 35:                       0 #> 36:                       0 #> 37:                       1 #> 38:                       0 #> 39:                       0 #> 40:                       0 #> 41:                       0 #> 42:                       0 #>     day_of_weekMonday__week #>"},{"path":"epiforecasts.io/epinowcast/dev/reference/convert_cmdstan_to_rstan.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert Cmdstan to Rstan — convert_cmdstan_to_rstan","title":"Convert Cmdstan to Rstan — convert_cmdstan_to_rstan","text":"Convert Cmdstan Rstan","code":""},{"path":"epiforecasts.io/epinowcast/dev/reference/convert_cmdstan_to_rstan.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert Cmdstan to Rstan — convert_cmdstan_to_rstan","text":"","code":"convert_cmdstan_to_rstan(functions)"},{"path":"epiforecasts.io/epinowcast/dev/reference/convert_cmdstan_to_rstan.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert Cmdstan to Rstan — convert_cmdstan_to_rstan","text":"functions character string stan functions produced using stan_fns_as_string().","code":""},{"path":"epiforecasts.io/epinowcast/dev/reference/convert_cmdstan_to_rstan.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert Cmdstan to Rstan — convert_cmdstan_to_rstan","text":"character string stan functions converted use rstan.","code":""},{"path":[]},{"path":"epiforecasts.io/epinowcast/dev/reference/enw_add_cumulative_membership.html","id":null,"dir":"Reference","previous_headings":"","what":"FUNCTION_TITLE — enw_add_cumulative_membership","title":"FUNCTION_TITLE — enw_add_cumulative_membership","text":"FUNCTION_DESCRIPTION","code":""},{"path":"epiforecasts.io/epinowcast/dev/reference/enw_add_cumulative_membership.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"FUNCTION_TITLE — enw_add_cumulative_membership","text":"","code":"enw_add_cumulative_membership(metaobs, feature)"},{"path":"epiforecasts.io/epinowcast/dev/reference/enw_add_cumulative_membership.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"FUNCTION_TITLE — enw_add_cumulative_membership","text":"metaobs PARAM_DESCRIPTION feature PARAM_DESCRIPTION","code":""},{"path":"epiforecasts.io/epinowcast/dev/reference/enw_add_cumulative_membership.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"FUNCTION_TITLE — enw_add_cumulative_membership","text":"OUTPUT_DESCRIPTION","code":""},{"path":[]},{"path":"epiforecasts.io/epinowcast/dev/reference/enw_add_delay.html","id":null,"dir":"Reference","previous_headings":"","what":"FUNCTION_TITLE — enw_add_delay","title":"FUNCTION_TITLE — enw_add_delay","text":"FUNCTION_DESCRIPTION","code":""},{"path":"epiforecasts.io/epinowcast/dev/reference/enw_add_delay.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"FUNCTION_TITLE — enw_add_delay","text":"","code":"enw_add_delay(obs)"},{"path":"epiforecasts.io/epinowcast/dev/reference/enw_add_delay.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"FUNCTION_TITLE — enw_add_delay","text":"obs PARAM_DESCRIPTION","code":""},{"path":"epiforecasts.io/epinowcast/dev/reference/enw_add_delay.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"FUNCTION_TITLE — enw_add_delay","text":"OUTPUT_DESCRIPTION","code":""},{"path":[]},{"path":"epiforecasts.io/epinowcast/dev/reference/enw_add_latest_obs_to_nowcast.html","id":null,"dir":"Reference","previous_headings":"","what":"FUNCTION_TITLE — enw_add_latest_obs_to_nowcast","title":"FUNCTION_TITLE — enw_add_latest_obs_to_nowcast","text":"FUNCTION_DESCRIPTION","code":""},{"path":"epiforecasts.io/epinowcast/dev/reference/enw_add_latest_obs_to_nowcast.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"FUNCTION_TITLE — enw_add_latest_obs_to_nowcast","text":"","code":"enw_add_latest_obs_to_nowcast(nowcast, obs)"},{"path":"epiforecasts.io/epinowcast/dev/reference/enw_add_latest_obs_to_nowcast.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"FUNCTION_TITLE — enw_add_latest_obs_to_nowcast","text":"nowcast PARAM_DESCRIPTION obs PARAM_DESCRIPTION","code":""},{"path":"epiforecasts.io/epinowcast/dev/reference/enw_add_latest_obs_to_nowcast.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"FUNCTION_TITLE — enw_add_latest_obs_to_nowcast","text":"OUTPUT_DESCRIPTION","code":""},{"path":[]},{"path":"epiforecasts.io/epinowcast/dev/reference/enw_add_max_reported.html","id":null,"dir":"Reference","previous_headings":"","what":"FUNCTION_TITLE — enw_add_max_reported","title":"FUNCTION_TITLE — enw_add_max_reported","text":"FUNCTION_DESCRIPTION","code":""},{"path":"epiforecasts.io/epinowcast/dev/reference/enw_add_max_reported.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"FUNCTION_TITLE — enw_add_max_reported","text":"","code":"enw_add_max_reported(obs)"},{"path":"epiforecasts.io/epinowcast/dev/reference/enw_add_max_reported.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"FUNCTION_TITLE — enw_add_max_reported","text":"obs PARAM_DESCRIPTION","code":""},{"path":"epiforecasts.io/epinowcast/dev/reference/enw_add_max_reported.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"FUNCTION_TITLE — enw_add_max_reported","text":"OUTPUT_DESCRIPTION","code":""},{"path":[]},{"path":"epiforecasts.io/epinowcast/dev/reference/enw_add_metaobs_features.html","id":null,"dir":"Reference","previous_headings":"","what":"FUNCTION_TITLE — enw_add_metaobs_features","title":"FUNCTION_TITLE — enw_add_metaobs_features","text":"FUNCTION_DESCRIPTION","code":""},{"path":"epiforecasts.io/epinowcast/dev/reference/enw_add_metaobs_features.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"FUNCTION_TITLE — enw_add_metaobs_features","text":"","code":"enw_add_metaobs_features(metaobs, holidays = c(), holidays_to = \"Sunday\")"},{"path":"epiforecasts.io/epinowcast/dev/reference/enw_add_metaobs_features.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"FUNCTION_TITLE — enw_add_metaobs_features","text":"metaobs PARAM_DESCRIPTION holidays PARAM_DESCRIPTION holidays_to character string assign holidays present. Replaces day week defaults Sunday.","code":""},{"path":"epiforecasts.io/epinowcast/dev/reference/enw_add_metaobs_features.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"FUNCTION_TITLE — enw_add_metaobs_features","text":"OUTPUT_DESCRIPTION","code":""},{"path":[]},{"path":"epiforecasts.io/epinowcast/dev/reference/enw_add_pooling_effect.html","id":null,"dir":"Reference","previous_headings":"","what":"FUNCTION_TITLE — enw_add_pooling_effect","title":"FUNCTION_TITLE — enw_add_pooling_effect","text":"FUNCTION_DESCRIPTION","code":""},{"path":"epiforecasts.io/epinowcast/dev/reference/enw_add_pooling_effect.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"FUNCTION_TITLE — enw_add_pooling_effect","text":"","code":"enw_add_pooling_effect(   effects,   string,   var_name = \"sd\",   finder_fn = startsWith )"},{"path":"epiforecasts.io/epinowcast/dev/reference/enw_add_pooling_effect.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"FUNCTION_TITLE — enw_add_pooling_effect","text":"effects PARAM_DESCRIPTION string PARAM_DESCRIPTION var_name PARAM_DESCRIPTION, Default: 'sd' finder_fn PARAM_DESCRIPTION, Default: startsWith","code":""},{"path":"epiforecasts.io/epinowcast/dev/reference/enw_add_pooling_effect.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"FUNCTION_TITLE — enw_add_pooling_effect","text":"OUTPUT_DESCRIPTION","code":""},{"path":[]},{"path":"epiforecasts.io/epinowcast/dev/reference/enw_as_data_list.html","id":null,"dir":"Reference","previous_headings":"","what":"Format data for use with stan — enw_as_data_list","title":"Format data for use with stan — enw_as_data_list","text":"Format data use stan","code":""},{"path":"epiforecasts.io/epinowcast/dev/reference/enw_as_data_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format data for use with stan — enw_as_data_list","text":"","code":"enw_as_data_list(   pobs,   reference_effects = epinowcast::enw_manual_formula(pobs$metareference[[1]]),   report_effects = epinowcast::enw_manual_formula(pobs$metareport[[1]]),   priors = epinowcast::enw_priors(),   distribution = \"lognormal\",   nowcast = TRUE,   pp = FALSE,   likelihood = TRUE,   debug = FALSE,   output_loglik = FALSE )"},{"path":"epiforecasts.io/epinowcast/dev/reference/enw_as_data_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format data for use with stan — enw_as_data_list","text":"pobs Output enw_preprocess_data(). reference_effects list fixed random design matrices defining date reference model. Defaults enw_manual_formula() intercept model. report_effects list fixed random design matrices defining date reports model. Defaults enw_manual_formula() intercept model. priors DESCRIPTION. distribution Character string indicating type distribution use reference date effects. default use lognormal options available include exponential gamma distributions. \"none\" specified parametric delay distribution used. nowcast Logical, defaults TRUE. nowcast made using posterior predictions unobserved future reported notifications. pp Logical, defaults FALSE. posterior predictions made observed data. Useful evaluating performance model. likelihood Logical, defaults TRUE. likelihood included model debug Logical, defaults FALSE. within model debug information returned. output_loglik Logical, defaults FALSE. log-likelihood output. Disabling speed fitting evaluating model fit required.","code":""},{"path":"epiforecasts.io/epinowcast/dev/reference/enw_as_data_list.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Format data for use with stan — enw_as_data_list","text":"list required stan.","code":""},{"path":[]},{"path":"epiforecasts.io/epinowcast/dev/reference/enw_assign_group.html","id":null,"dir":"Reference","previous_headings":"","what":"FUNCTION_TITLE — enw_assign_group","title":"FUNCTION_TITLE — enw_assign_group","text":"FUNCTION_DESCRIPTION","code":""},{"path":"epiforecasts.io/epinowcast/dev/reference/enw_assign_group.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"FUNCTION_TITLE — enw_assign_group","text":"","code":"enw_assign_group(obs, by = c())"},{"path":"epiforecasts.io/epinowcast/dev/reference/enw_assign_group.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"FUNCTION_TITLE — enw_assign_group","text":"obs PARAM_DESCRIPTION PARAM_DESCRIPTION, Default: c()","code":""},{"path":"epiforecasts.io/epinowcast/dev/reference/enw_assign_group.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"FUNCTION_TITLE — enw_assign_group","text":"OUTPUT_DESCRIPTION","code":""},{"path":[]},{"path":"epiforecasts.io/epinowcast/dev/reference/enw_complete_dates.html","id":null,"dir":"Reference","previous_headings":"","what":"Complete missing reference and report dates — enw_complete_dates","title":"Complete missing reference and report dates — enw_complete_dates","text":"Ensures reference report dates present groups based maximum minimum dates found data. function may use users preprocessing data. general features may consider using grouping variables covariates need included variable.","code":""},{"path":"epiforecasts.io/epinowcast/dev/reference/enw_complete_dates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Complete missing reference and report dates — enw_complete_dates","text":"","code":"enw_complete_dates(obs, by = c(), max_delay, missing_reference = TRUE)"},{"path":"epiforecasts.io/epinowcast/dev/reference/enw_complete_dates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Complete missing reference and report dates — enw_complete_dates","text":"obs data frame containing least following variables: reference date (index date interest), report_date (report date observations), confirm (cumulative observations reference report date). character vector describing stratification observations. defaults grouping. used modelling multiple time series order identify downstream modelling max_delay Numeric defaults 20. maximum number days include delay distribution. Computation scales non-linearly setting consider maximum makes sense data carefully. missing_reference entries cases missing reference date completed well?, Default: TRUE","code":""},{"path":"epiforecasts.io/epinowcast/dev/reference/enw_complete_dates.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Complete missing reference and report dates — enw_complete_dates","text":"data.table completed entries combinations reference dates, groups possible report dates.","code":""},{"path":[]},{"path":"epiforecasts.io/epinowcast/dev/reference/enw_complete_dates.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Complete missing reference and report dates — enw_complete_dates","text":"","code":"obs <- data.frame(   report_date = c(\"2021-10-01\", \"2021-10-03\"), reference_date = \"2021-10-01\",   confirm = 1 ) enw_complete_dates(obs) #>    report_date reference_date confirm #> 1:  2021-10-01     2021-10-01       1 #> 2:  2021-10-02     2021-10-01       1 #> 3:  2021-10-03     2021-10-01       1 #> 4:  2021-10-02     2021-10-02       0 #> 5:  2021-10-03     2021-10-02       0 #> 6:  2021-10-03     2021-10-03       0 #> 7:  2021-10-01           <NA>       0 #> 8:  2021-10-02           <NA>       0 #> 9:  2021-10-03           <NA>       0"},{"path":"epiforecasts.io/epinowcast/dev/reference/enw_construct_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Construct preprocessed data — enw_construct_data","title":"Construct preprocessed data — enw_construct_data","text":"function used internally enw_preprocess_data() combine various pieces processed observed data single object. exposed user order allow modular data preprocessing though currently recommended. See documentation code enw_preprocess_data() expected inputs.","code":""},{"path":"epiforecasts.io/epinowcast/dev/reference/enw_construct_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Construct preprocessed data — enw_construct_data","text":"","code":"enw_construct_data(   obs,   new_confirm,   latest,   missing_reference,   reporting_triangle,   metareport,   metareference,   metadelay,   by,   max_delay )"},{"path":"epiforecasts.io/epinowcast/dev/reference/enw_construct_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Construct preprocessed data — enw_construct_data","text":"obs Observations addition empirical reporting proportions restricted specified maximum delay. new_confirm Incidence notifications reference report date. Empirical reporting distributions also added. latest latest available observations. missing_reference data frame reported observations missing reference date. reporting_triangle Incident observations report reference date standard reporting triangle matrix format. metareport Metadata report dates. metareference Metadata reference dates derived observations. metadelay Metadata reporting delays produced using enw_delay_metadata(). character vector describing stratification observations. defaults grouping. used modelling multiple time series order identify downstream modelling max_delay Numeric defaults 20. maximum number days include delay distribution. Computation scales non-linearly setting consider maximum makes sense data carefully.","code":""},{"path":"epiforecasts.io/epinowcast/dev/reference/enw_construct_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Construct preprocessed data — enw_construct_data","text":"data.table containing processed observations series nested data frames well variables containing metadata. : obs: (observations addition empirical reporting proportions restricted specified maximum delay). new_confirm: Incidence notifications reference report date. Empirical reporting distributions also added. latest: latest available observations. missing_reference: Observations missing reference dates. reporting_triangle: Incident observations report reference date standard reporting triangle matrix format. metareference: Metadata reference dates derived observations. metrareport: Metadata report dates. metadelay: Metadata reporting delays produced using enw_delay_metadata(). time: Numeric, number timepoints data. snapshots: Numeric, number available data snapshots use nowcasting. groups: Numeric, Number groups/strata supplied observations (set using ). max_delay: Numeric, maximum delay processed data max_date: maximum available report date.","code":""},{"path":[]},{"path":"epiforecasts.io/epinowcast/dev/reference/enw_construct_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Construct preprocessed data — enw_construct_data","text":"","code":"pobs <- enw_example(\"preprocessed\") enw_construct_data(   obs = pobs$obs[[1]],   new_confirm = pobs$new_confirm[[1]],   latest = pobs$latest[[1]],   missing_reference = pobs$missing_reference[[1]],   reporting_triangle = pobs$reporting_triangle[[1]],   metareport = pobs$metareport[[1]],   metareference = pobs$metareference[[1]],   metadelay = enw_delay_metadata(max_delay = 20),   by = c(),   max_delay = pobs$max_delay[[1]] ) #>                    obs          new_confirm              latest #> 1: <data.table[671x9]> <data.table[630x11]> <data.table[41x10]> #>     missing_reference  reporting_triangle      metareference #> 1: <data.table[41x6]> <data.table[41x22]> <data.table[41x8]> #>             metareport          metadelay time snapshots by groups max_delay #> 1: <data.table[60x11]> <data.table[20x4]>   41        41         1        20 #>      max_date #> 1: 2021-08-22"},{"path":"epiforecasts.io/epinowcast/dev/reference/enw_dates_to_factors.html","id":null,"dir":"Reference","previous_headings":"","what":"FUNCTION_TITLE — enw_dates_to_factors","title":"FUNCTION_TITLE — enw_dates_to_factors","text":"FUNCTION_DESCRIPTION","code":""},{"path":"epiforecasts.io/epinowcast/dev/reference/enw_dates_to_factors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"FUNCTION_TITLE — enw_dates_to_factors","text":"","code":"enw_dates_to_factors(data)"},{"path":"epiforecasts.io/epinowcast/dev/reference/enw_dates_to_factors.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"FUNCTION_TITLE — enw_dates_to_factors","text":"data PARAM_DESCRIPTION","code":""},{"path":"epiforecasts.io/epinowcast/dev/reference/enw_dates_to_factors.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"FUNCTION_TITLE — enw_dates_to_factors","text":"OUTPUT_DESCRIPTION","code":""},{"path":[]},{"path":"epiforecasts.io/epinowcast/dev/reference/enw_delay_filter.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter observations to restrict the maximum reporting delay — enw_delay_filter","title":"Filter observations to restrict the maximum reporting delay — enw_delay_filter","text":"Filter observations restrict maximum reporting delay","code":""},{"path":"epiforecasts.io/epinowcast/dev/reference/enw_delay_filter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter observations to restrict the maximum reporting delay — enw_delay_filter","text":"","code":"enw_delay_filter(obs, max_delay)"},{"path":"epiforecasts.io/epinowcast/dev/reference/enw_delay_filter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter observations to restrict the maximum reporting delay — enw_delay_filter","text":"obs data frame containing least following variables: reference date (index date interest), report_date (report date observations), confirm (cumulative observations reference report date), .group (added enw_assign_group()). max_delay Numeric defaults 20. maximum number days include delay distribution. Computation scales non-linearly setting consider maximum makes sense data carefully.","code":""},{"path":"epiforecasts.io/epinowcast/dev/reference/enw_delay_filter.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter observations to restrict the maximum reporting delay — enw_delay_filter","text":"data frame filtered dates report less equal reference date plus maximum delay.","code":""},{"path":[]},{"path":"epiforecasts.io/epinowcast/dev/reference/enw_delay_filter.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Filter observations to restrict the maximum reporting delay — enw_delay_filter","text":"","code":"obs <- enw_example(\"preprocessed\")$obs[[1]] enw_delay_filter(obs, max_delay = 2) #>      reference_date .group report_date max_confirm location age_group confirm #>   1:           <NA>      1  2021-07-13           0       DE       00+       0 #>   2:           <NA>      1  2021-07-14           0       DE       00+       0 #>   3:           <NA>      1  2021-07-15           0       DE       00+       0 #>   4:           <NA>      1  2021-07-16           0       DE       00+       0 #>   5:           <NA>      1  2021-07-17           0       DE       00+       0 #>  ---                                                                          #> 118:     2021-08-20      1  2021-08-20         171       DE       00+      98 #> 119:     2021-08-20      1  2021-08-21         171       DE       00+     159 #> 120:     2021-08-21      1  2021-08-21         112       DE       00+      69 #> 121:     2021-08-21      1  2021-08-22         112       DE       00+     112 #> 122:     2021-08-22      1  2021-08-22          45       DE       00+      45 #>      cum_prop_reported delay #>   1:               NaN    NA #>   2:               NaN    NA #>   3:               NaN    NA #>   4:               NaN    NA #>   5:               NaN    NA #>  ---                         #> 118:         0.5730994     0 #> 119:         0.9298246     1 #> 120:         0.6160714     0 #> 121:         1.0000000     1 #> 122:         1.0000000     0"},{"path":"epiforecasts.io/epinowcast/dev/reference/enw_delay_metadata.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate reporting delay metadata — enw_delay_metadata","title":"Calculate reporting delay metadata — enw_delay_metadata","text":"Calculate delay metadata based supplied maximum delay independent metadata date indexing. data meant used conjunction metadata date reference. Users can build additional features data.frame regenerate using function output enw_preprocess_data().","code":""},{"path":"epiforecasts.io/epinowcast/dev/reference/enw_delay_metadata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate reporting delay metadata — enw_delay_metadata","text":"","code":"enw_delay_metadata(max_delay = 20, breaks = 4)"},{"path":"epiforecasts.io/epinowcast/dev/reference/enw_delay_metadata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate reporting delay metadata — enw_delay_metadata","text":"max_delay Numeric defaults 20. maximum number days include delay distribution. Computation scales non-linearly setting consider maximum makes sense data carefully. breaks Numeric, defaults 4. number breaks use constructing categorised version numeric delays.","code":""},{"path":"epiforecasts.io/epinowcast/dev/reference/enw_delay_metadata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate reporting delay metadata — enw_delay_metadata","text":"data.frame delay metadata. includes: delay: numeric delay reference date report. delay_cat: categorised delay. may useful model building. delay_week: numeric week since delay reported. may useful model building. delay_tail: logical variable defining delay upper 75% potential delays. may particularly useful building models assume parametric distribution order increase weight tail reporting distribution pragmatic way.","code":""},{"path":[]},{"path":"epiforecasts.io/epinowcast/dev/reference/enw_delay_metadata.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate reporting delay metadata — enw_delay_metadata","text":"","code":"enw_delay_metadata(20, breaks = 4) #>     delay delay_cat delay_week delay_tail #>  1:     0     [0,5)          0      FALSE #>  2:     1     [0,5)          0      FALSE #>  3:     2     [0,5)          0      FALSE #>  4:     3     [0,5)          0      FALSE #>  5:     4     [0,5)          0      FALSE #>  6:     5    [5,10)          0      FALSE #>  7:     6    [5,10)          0      FALSE #>  8:     7    [5,10)          1      FALSE #>  9:     8    [5,10)          1      FALSE #> 10:     9    [5,10)          1      FALSE #> 11:    10   [10,15)          1      FALSE #> 12:    11   [10,15)          1      FALSE #> 13:    12   [10,15)          1      FALSE #> 14:    13   [10,15)          1      FALSE #> 15:    14   [10,15)          2      FALSE #> 16:    15   [15,20)          2       TRUE #> 17:    16   [15,20)          2       TRUE #> 18:    17   [15,20)          2       TRUE #> 19:    18   [15,20)          2       TRUE #> 20:    19   [15,20)          2       TRUE"},{"path":"epiforecasts.io/epinowcast/dev/reference/enw_design.html","id":null,"dir":"Reference","previous_headings":"","what":"FUNCTION_TITLE — enw_design","title":"FUNCTION_TITLE — enw_design","text":"FUNCTION_DESCRIPTION","code":""},{"path":"epiforecasts.io/epinowcast/dev/reference/enw_design.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"FUNCTION_TITLE — enw_design","text":"","code":"enw_design(formula, data, no_contrasts = FALSE, sparse = TRUE, ...)"},{"path":"epiforecasts.io/epinowcast/dev/reference/enw_design.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"FUNCTION_TITLE — enw_design","text":"formula PARAM_DESCRIPTION data PARAM_DESCRIPTION no_contrasts PARAM_DESCRIPTION, Default: FALSE sparse PARAM_DESCRIPTION, Default: TRUE ... PARAM_DESCRIPTION","code":""},{"path":"epiforecasts.io/epinowcast/dev/reference/enw_design.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"FUNCTION_TITLE — enw_design","text":"OUTPUT_DESCRIPTION","code":""},{"path":[]},{"path":"epiforecasts.io/epinowcast/dev/reference/enw_effects_metadata.html","id":null,"dir":"Reference","previous_headings":"","what":"FUNCTION_TITLE — enw_effects_metadata","title":"FUNCTION_TITLE — enw_effects_metadata","text":"FUNCTION_DESCRIPTION","code":""},{"path":"epiforecasts.io/epinowcast/dev/reference/enw_effects_metadata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"FUNCTION_TITLE — enw_effects_metadata","text":"","code":"enw_effects_metadata(design)"},{"path":"epiforecasts.io/epinowcast/dev/reference/enw_effects_metadata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"FUNCTION_TITLE — enw_effects_metadata","text":"design PARAM_DESCRIPTION","code":""},{"path":"epiforecasts.io/epinowcast/dev/reference/enw_effects_metadata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"FUNCTION_TITLE — enw_effects_metadata","text":"OUTPUT_DESCRIPTION","code":""},{"path":[]},{"path":"epiforecasts.io/epinowcast/dev/reference/enw_example.html","id":null,"dir":"Reference","previous_headings":"","what":"Load a package example — enw_example","title":"Load a package example — enw_example","text":"Loads examples nowcasts produce using example scripts. Used streamline examples, package tests enable users explore package functionality without needing install cmdstanr.","code":""},{"path":"epiforecasts.io/epinowcast/dev/reference/enw_example.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load a package example — enw_example","text":"","code":"enw_example(type = \"nowcast\")"},{"path":"epiforecasts.io/epinowcast/dev/reference/enw_example.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load a package example — enw_example","text":"type character string indicating example load. Supported options \"nowcast, \"preprocessed_observations\", \"observations\", \"script\" output epinowcast()], enw_preprocess_data(), enw_latest_data() applied germany_covid19_hosp package dataset), script used generate examples respectively.","code":""},{"path":"epiforecasts.io/epinowcast/dev/reference/enw_example.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load a package example — enw_example","text":"data.table summarised output","code":""},{"path":[]},{"path":"epiforecasts.io/epinowcast/dev/reference/enw_example.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load a package example — enw_example","text":"","code":"# Load the nowcast enw_example(type = \"nowcast\") #>                    obs          new_confirm              latest #> 1: <data.table[671x9]> <data.table[630x11]> <data.table[41x10]> #>     missing_reference  reporting_triangle      metareference #> 1: <data.table[41x6]> <data.table[41x22]> <data.table[41x8]> #>             metareport          metadelay time snapshots by groups max_delay #> 1: <data.table[60x11]> <data.table[20x4]>   41        41         1        20 #>      max_date               fit       data  fit_args samples max_rhat #> 1: 2021-08-22 <CmdStanMCMC[32]> <list[42]> <list[6]>    1000     1.01 #>    divergent_transitions per_divergent_transitions max_treedepth #> 1:                     0                         0             8 #>    no_at_max_treedepth per_at_max_treedepth run_time #> 1:                  51                0.051      186  # Load the preprocessed observations enw_example(type = \"preprocessed_observations\") #>                    obs          new_confirm              latest #> 1: <data.table[671x9]> <data.table[630x11]> <data.table[41x10]> #>     missing_reference  reporting_triangle      metareference #> 1: <data.table[41x6]> <data.table[41x22]> <data.table[41x8]> #>             metareport          metadelay time snapshots by groups max_delay #> 1: <data.table[60x11]> <data.table[20x4]>   41        41         1        20 #>      max_date #> 1: 2021-08-22  # Load the latest observations enw_example(type = \"observations\") #>     reference_date location age_group confirm report_date #>  1:     2021-07-13       DE       00+      60  2021-10-01 #>  2:     2021-07-14       DE       00+      74  2021-10-01 #>  3:     2021-07-15       DE       00+      69  2021-10-01 #>  4:     2021-07-16       DE       00+      49  2021-10-01 #>  5:     2021-07-17       DE       00+      67  2021-10-01 #>  6:     2021-07-18       DE       00+      51  2021-10-01 #>  7:     2021-07-19       DE       00+      36  2021-10-01 #>  8:     2021-07-20       DE       00+      96  2021-10-01 #>  9:     2021-07-21       DE       00+      94  2021-10-01 #> 10:     2021-07-22       DE       00+      99  2021-10-01 #> 11:     2021-07-23       DE       00+      88  2021-10-01 #> 12:     2021-07-24       DE       00+      95  2021-10-01 #> 13:     2021-07-25       DE       00+      75  2021-10-01 #> 14:     2021-07-26       DE       00+      29  2021-10-01 #> 15:     2021-07-27       DE       00+      81  2021-10-01 #> 16:     2021-07-28       DE       00+     159  2021-10-01 #> 17:     2021-07-29       DE       00+     143  2021-10-01 #> 18:     2021-07-30       DE       00+     117  2021-10-01 #> 19:     2021-07-31       DE       00+     132  2021-10-01 #> 20:     2021-08-01       DE       00+      80  2021-10-01 #> 21:     2021-08-02       DE       00+      59  2021-10-01 #> 22:     2021-08-03       DE       00+     156  2021-10-01 #> 23:     2021-08-04       DE       00+     183  2021-10-01 #> 24:     2021-08-05       DE       00+     147  2021-10-01 #> 25:     2021-08-06       DE       00+     155  2021-10-01 #> 26:     2021-08-07       DE       00+     159  2021-10-01 #> 27:     2021-08-08       DE       00+     119  2021-10-01 #> 28:     2021-08-09       DE       00+      65  2021-10-01 #> 29:     2021-08-10       DE       00+     204  2021-10-01 #> 30:     2021-08-11       DE       00+     275  2021-10-01 #> 31:     2021-08-12       DE       00+     273  2021-10-01 #> 32:     2021-08-13       DE       00+     270  2021-10-01 #> 33:     2021-08-14       DE       00+     262  2021-10-01 #> 34:     2021-08-15       DE       00+     192  2021-10-01 #> 35:     2021-08-16       DE       00+     140  2021-10-01 #> 36:     2021-08-17       DE       00+     323  2021-10-01 #> 37:     2021-08-18       DE       00+     409  2021-10-01 #> 38:     2021-08-19       DE       00+     370  2021-10-01 #> 39:     2021-08-20       DE       00+     361  2021-10-01 #> 40:     2021-08-21       DE       00+     339  2021-10-01 #> 41:     2021-08-22       DE       00+     258  2021-10-01 #>     reference_date location age_group confirm report_date  # Load the script used to generate these examples # Optionally source this script to regenerate the example readLines(enw_example(type = \"script\")) #>  [1] \"# Load epinowcast and data.table\"                                                     #>  [2] \"library(epinowcast)\"                                                                  #>  [3] \"library(data.table)\"                                                                  #>  [4] \"\"                                                                                     #>  [5] \"# Load and filter germany hospitalisations\"                                           #>  [6] \"nat_germany_hosp <- germany_covid19_hosp[location == \\\"DE\\\"][age_group %in% \\\"00+\\\"]\" #>  [7] \"nat_germany_hosp <- enw_filter_report_dates(\"                                         #>  [8] \"  nat_germany_hosp, latest_date = \\\"2021-10-01\\\"\"                                     #>  [9] \")\"                                                                                    #> [10] \"\"                                                                                     #> [11] \"# Make sure observations are complete\"                                                #> [12] \"nat_germany_hosp <- enw_complete_dates(\"                                              #> [13] \"  nat_germany_hosp, by = c(\\\"location\\\", \\\"age_group\\\")\"                              #> [14] \")\"                                                                                    #> [15] \"# Make a retrospective dataset\"                                                       #> [16] \"retro_nat_germany <- enw_filter_report_dates(\"                                        #> [17] \"  nat_germany_hosp, remove_days = 40\"                                                 #> [18] \")\"                                                                                    #> [19] \"retro_nat_germany <- enw_filter_reference_dates(\"                                     #> [20] \"  retro_nat_germany, include_days = 40\"                                               #> [21] \")\"                                                                                    #> [22] \"\"                                                                                     #> [23] \"# Get latest observations for the same time period\"                                   #> [24] \"latest_obs <- enw_latest_data(nat_germany_hosp)\"                                      #> [25] \"latest_obs <- enw_filter_reference_dates(\"                                            #> [26] \"  latest_obs, remove_days = 40, include_days = 20\"                                    #> [27] \")\"                                                                                    #> [28] \"\"                                                                                     #> [29] \"# Preprocess observations\"                                                            #> [30] \"pobs <- enw_preprocess_data(retro_nat_germany, max_delay = 20)\"                       #> [31] \"\"                                                                                     #> [32] \"# Reference date model\"                                                               #> [33] \"reference_effects <- enw_formula(~ 1, pobs$metareference[[1]])\"                       #> [34] \"\"                                                                                     #> [35] \"# Report date model\"                                                                  #> [36] \"report_effects <- enw_formula(~ (1 | day_of_week), pobs$metareport[[1]])\"             #> [37] \"\"                                                                                     #> [38] \"# Compile nowcasting model\"                                                           #> [39] \"model <- enw_model(threads = TRUE)\"                                                   #> [40] \"\"                                                                                     #> [41] \"# Fit nowcast model and produce a nowcast\"                                            #> [42] \"# Note that we have reduced samples for this example to reduce runtimes\"              #> [43] \"nowcast <- epinowcast(pobs,\"                                                          #> [44] \"  model = model,\"                                                                     #> [45] \"  report_effects = report_effects,\"                                                   #> [46] \"  reference_effects = reference_effects,\"                                             #> [47] \"  save_warmup = FALSE, pp = TRUE,\"                                                    #> [48] \"  chains = 2, threads_per_chain = 1,\"                                                 #> [49] \"  iter_warmup = 500, iter_sampling = 500\"                                             #> [50] \")\""},{"path":"epiforecasts.io/epinowcast/dev/reference/enw_extend_date.html","id":null,"dir":"Reference","previous_headings":"","what":"FUNCTION_TITLE — enw_extend_date","title":"FUNCTION_TITLE — enw_extend_date","text":"FUNCTION_DESCRIPTION","code":""},{"path":"epiforecasts.io/epinowcast/dev/reference/enw_extend_date.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"FUNCTION_TITLE — enw_extend_date","text":"","code":"enw_extend_date(metaobs, max_delay = 20)"},{"path":"epiforecasts.io/epinowcast/dev/reference/enw_extend_date.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"FUNCTION_TITLE — enw_extend_date","text":"metaobs PARAM_DESCRIPTION max_delay PARAM_DESCRIPTION, Default: 20","code":""},{"path":"epiforecasts.io/epinowcast/dev/reference/enw_extend_date.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"FUNCTION_TITLE — enw_extend_date","text":"OUTPUT_DESCRIPTION","code":""},{"path":[]},{"path":"epiforecasts.io/epinowcast/dev/reference/enw_filter_reference_dates.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter by reference dates — enw_filter_reference_dates","title":"Filter by reference dates — enw_filter_reference_dates","text":"helper function allows users filter datasets reference date. useful, example, evaluating nowcast performance fully observed data. Users may wish combine function enw_filter_report_dates(). Note definition assumed report date given reference date must equal greater (.e report happen event reported occurs). means function also filter report dates earlier target reference dates.","code":""},{"path":"epiforecasts.io/epinowcast/dev/reference/enw_filter_reference_dates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter by reference dates — enw_filter_reference_dates","text":"","code":"enw_filter_reference_dates(   obs,   earliest_date,   include_days,   latest_date,   remove_days )"},{"path":"epiforecasts.io/epinowcast/dev/reference/enw_filter_reference_dates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter by reference dates — enw_filter_reference_dates","text":"obs observation data frame containing report_date reference_date columns. earliest_date earliest reference date include data set include_days earilest_date given, number reference dates include, ending latest reference date included reporting dates removed. specified indexed latest_date remove_days. latest_date Date, latest reference date include returned dataset. remove_days Integer, latest_date given, number reference dates remove, starting latest date included.","code":""},{"path":"epiforecasts.io/epinowcast/dev/reference/enw_filter_reference_dates.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter by reference dates — enw_filter_reference_dates","text":"data.table  filtered report date","code":""},{"path":[]},{"path":"epiforecasts.io/epinowcast/dev/reference/enw_filter_reference_dates.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Filter by reference dates — enw_filter_reference_dates","text":"","code":"# Filter by date enw_filter_reference_dates(   germany_covid19_hosp,   earliest_date = \"2021-09-01\",   latest_date = \"2021-10-01\" ) #>         reference_date location age_group confirm report_date #>      1:     2021-09-01       DE       00+     124  2021-09-01 #>      2:     2021-09-02       DE       00+      94  2021-09-02 #>      3:     2021-09-03       DE       00+     130  2021-09-03 #>      4:     2021-09-04       DE       00+      82  2021-09-04 #>      5:     2021-09-05       DE       00+      42  2021-09-05 #>     ---                                                       #> 129111:     2021-09-01    DE-TH     05-14       0  2021-10-20 #> 129112:     2021-09-01    DE-TH     15-34       0  2021-10-20 #> 129113:     2021-09-01    DE-TH     35-59       1  2021-10-20 #> 129114:     2021-09-01    DE-TH     60-79       2  2021-10-20 #> 129115:     2021-09-01    DE-TH       80+       2  2021-10-20 # # Filter by days enw_filter_reference_dates(   germany_covid19_hosp,   include_days = 10, remove_days = 10 ) #>        reference_date location age_group confirm report_date #>     1:     2021-09-30       DE       00+     110  2021-09-30 #>     2:     2021-10-01       DE       00+     105  2021-10-01 #>     3:     2021-10-02       DE       00+      97  2021-10-02 #>     4:     2021-10-03       DE       00+      41  2021-10-03 #>     5:     2021-10-04       DE       00+      23  2021-10-04 #>    ---                                                       #> 20940:     2021-09-30    DE-TH     05-14       1  2021-10-20 #> 20941:     2021-09-30    DE-TH     15-34       2  2021-10-20 #> 20942:     2021-09-30    DE-TH     35-59       6  2021-10-20 #> 20943:     2021-09-30    DE-TH     60-79       4  2021-10-20 #> 20944:     2021-09-30    DE-TH       80+      10  2021-10-20"},{"path":"epiforecasts.io/epinowcast/dev/reference/enw_filter_report_dates.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter by report dates — enw_filter_report_dates","title":"Filter by report dates — enw_filter_report_dates","text":"helper function allows users create truncated data sets past time points given larger data set. useful evaluating nowcast performance fully observed data. Users may wish combine function enw_filter_reference_dates().","code":""},{"path":"epiforecasts.io/epinowcast/dev/reference/enw_filter_report_dates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter by report dates — enw_filter_report_dates","text":"","code":"enw_filter_report_dates(obs, latest_date, remove_days)"},{"path":"epiforecasts.io/epinowcast/dev/reference/enw_filter_report_dates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter by report dates — enw_filter_report_dates","text":"obs observation data frame containing report_date reference_date columns. latest_date Date, latest report date include returned dataset. remove_days Integer, latest_date given, number report dates remove, starting latest date included.","code":""},{"path":"epiforecasts.io/epinowcast/dev/reference/enw_filter_report_dates.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter by report dates — enw_filter_report_dates","text":"data.table  filtered report date","code":""},{"path":[]},{"path":"epiforecasts.io/epinowcast/dev/reference/enw_filter_report_dates.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Filter by report dates — enw_filter_report_dates","text":"","code":"# Filter by date enw_filter_report_dates(germany_covid19_hosp, latest_date = \"2021-09-01\") #>          reference_date location age_group confirm report_date #>       1:     2021-04-06       DE       00+     149  2021-04-06 #>       2:     2021-04-07       DE       00+     312  2021-04-07 #>       3:     2021-04-08       DE       00+     424  2021-04-08 #>       4:     2021-04-09       DE       00+     288  2021-04-09 #>       5:     2021-04-10       DE       00+     273  2021-04-10 #>      ---                                                       #> 1058739:     2021-06-08    DE-TH       80+       4  2021-08-28 #> 1058740:     2021-06-09    DE-TH       80+       4  2021-08-29 #> 1058741:     2021-06-10    DE-TH       80+       1  2021-08-30 #> 1058742:     2021-06-11    DE-TH       80+       0  2021-08-31 #> 1058743:     2021-06-12    DE-TH       80+       2  2021-09-01 # # Filter by days enw_filter_report_dates(germany_covid19_hosp, remove_days = 10) #>          reference_date location age_group confirm report_date #>       1:     2021-04-06       DE       00+     149  2021-04-06 #>       2:     2021-04-07       DE       00+     312  2021-04-07 #>       3:     2021-04-08       DE       00+     424  2021-04-08 #>       4:     2021-04-09       DE       00+     288  2021-04-09 #>       5:     2021-04-10       DE       00+     273  2021-04-10 #>      ---                                                       #> 1439301:     2021-07-17    DE-TH       80+       1  2021-10-06 #> 1439302:     2021-07-18    DE-TH       80+       0  2021-10-07 #> 1439303:     2021-07-19    DE-TH       80+       0  2021-10-08 #> 1439304:     2021-07-20    DE-TH       80+       0  2021-10-09 #> 1439305:     2021-07-21    DE-TH       80+       0  2021-10-10"},{"path":"epiforecasts.io/epinowcast/dev/reference/enw_formula.html","id":null,"dir":"Reference","previous_headings":"","what":"Define a model using a formula interface — enw_formula","title":"Define a model using a formula interface — enw_formula","text":"function allows models defined using flexible formula interface supports fixed effects, random effects (using lme4 syntax). Note returned fixed effects design matrix sparse index supplied required link observations appropriate design matrix row.","code":""},{"path":"epiforecasts.io/epinowcast/dev/reference/enw_formula.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Define a model using a formula interface — enw_formula","text":"","code":"enw_formula(formula, data)"},{"path":"epiforecasts.io/epinowcast/dev/reference/enw_formula.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Define a model using a formula interface — enw_formula","text":"formula model formula may use standard fixed effects, random effects using lme4 syntax (see re()), random walks defined using rw() helper function. data data.frame observations. must include variables used supplied formula.","code":""},{"path":"epiforecasts.io/epinowcast/dev/reference/enw_formula.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Define a model using a formula interface — enw_formula","text":"list containing following: formula: user supplied formula parsed_formula: formula parsed parse_formula() extended_formula: flattened version formula user supplied terms terms added user supplied complex model components. fixed:  list containing fixed effect formula, sparse design matrix, index linking design matrix observations. random: list containing random effect formula, sparse design matrix, index linking design matrix random effects.","code":""},{"path":[]},{"path":"epiforecasts.io/epinowcast/dev/reference/enw_formula.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Define a model using a formula interface — enw_formula","text":"","code":"# Use meta data for references dates from the Germany COVID-19 # hospitalisation data. obs <- enw_filter_report_dates(   germany_covid19_hosp[location == \"DE\"],   remove_days = 40 ) obs <- enw_filter_reference_dates(obs, include_days = 40) pobs <- enw_preprocess_data(obs, by = c(\"age_group\", \"location\")) data <- pobs$metareference[[1]]  # Model with fixed effects for age group enw_formula(~ 1 + age_group, data) #> $formula #> [1] \"~1 + age_group\" #>  #> $parsed_formula #> $parsed_formula$fixed #> [1] \"1\"         \"age_group\" #>  #> $parsed_formula$random #> NULL #>  #> $parsed_formula$rw #> character(0) #>  #>  #> $expanded_formula #> [1] \"~1 + age_group\" #>  #> $fixed #> $fixed$formula #> [1] \"~1 + age_group\" #>  #> $fixed$design #>     (Intercept) age_group00+ age_group05-14 age_group15-34 age_group35-59 #> 1             1            0              0              0              0 #> 42            1            1              0              0              0 #> 83            1            0              1              0              0 #> 124           1            0              0              1              0 #> 165           1            0              0              0              1 #> 206           1            0              0              0              0 #> 247           1            0              0              0              0 #>     age_group60-79 age_group80+ #> 1                0            0 #> 42               0            0 #> 83               0            0 #> 124              0            0 #> 165              0            0 #> 206              1            0 #> 247              0            1 #>  #> $fixed$index #>   [1] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 #>  [38] 1 1 1 1 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 #>  [75] 2 2 2 2 2 2 2 2 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 #> [112] 3 3 3 3 3 3 3 3 3 3 3 3 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 #> [149] 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 #> [186] 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 #> [223] 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 7 7 7 7 7 7 7 7 7 7 7 7 7 #> [260] 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 #>  #>  #> $random #> $random$formula #> [1] \"~1\" #>  #> $random$design #>   (Intercept) #> 1           1 #> 2           1 #> 3           1 #> 4           1 #> 5           1 #> 6           1 #> attr(,\"assign\") #> [1] 0 #>  #> $random$index #> [1] 1 2 3 4 5 6 #>  #>  #> attr(,\"class\") #> [1] \"enw_formula\" \"list\"         # Model with random effects for age group enw_formula(~ 1 + (1 | age_group), data) #> $formula #> [1] \"~1 + (1 | age_group)\" #>  #> $parsed_formula #> $parsed_formula$fixed #> [1] \"1\" #>  #> $parsed_formula$random #> $parsed_formula$random[[1]] #> 1 | age_group #>  #>  #> $parsed_formula$rw #> character(0) #>  #>  #> $expanded_formula #> [1] \"~1 + age_group\" #>  #> $fixed #> $fixed$formula #> [1] \"~1 + age_group\" #>  #> $fixed$design #>     (Intercept) age_group00-04 age_group00+ age_group05-14 age_group15-34 #> 1             1              1            0              0              0 #> 42            1              0            1              0              0 #> 83            1              0            0              1              0 #> 124           1              0            0              0              1 #> 165           1              0            0              0              0 #> 206           1              0            0              0              0 #> 247           1              0            0              0              0 #>     age_group35-59 age_group60-79 age_group80+ #> 1                0              0            0 #> 42               0              0            0 #> 83               0              0            0 #> 124              0              0            0 #> 165              1              0            0 #> 206              0              1            0 #> 247              0              0            1 #>  #> $fixed$index #>   [1] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 #>  [38] 1 1 1 1 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 #>  [75] 2 2 2 2 2 2 2 2 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 #> [112] 3 3 3 3 3 3 3 3 3 3 3 3 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 #> [149] 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 #> [186] 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 #> [223] 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 7 7 7 7 7 7 7 7 7 7 7 7 7 #> [260] 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 #>  #>  #> $random #> $random$formula #> [1] \"~0 + fixed + age_group\" #>  #> $random$design #>   fixed age_group #> 1     0         1 #> 2     0         1 #> 3     0         1 #> 4     0         1 #> 5     0         1 #> 6     0         1 #> 7     0         1 #> attr(,\"assign\") #> [1] 1 2 #>  #> $random$index #> [1] 1 2 3 4 5 6 7 #>  #>  #> attr(,\"class\") #> [1] \"enw_formula\" \"list\"         # Model with a random effect for age group and a random walk enw_formula(~ 1 + (1 | age_group) + rw(week), data) #> $formula #> [1] \"~1 + (1 | age_group) + rw(week)\" #>  #> $parsed_formula #> $parsed_formula$fixed #> [1] \"1\" #>  #> $parsed_formula$random #> $parsed_formula$random[[1]] #> 1 | age_group #>  #>  #> $parsed_formula$rw #> [1] \"rw(week)\" #>  #>  #> $expanded_formula #> [1] \"~1 + cweek1 + cweek2 + cweek3 + cweek4 + cweek5 + cweek6 + age_group\" #>  #> $fixed #> $fixed$formula #> [1] \"~1 + cweek1 + cweek2 + cweek3 + cweek4 + cweek5 + cweek6 + age_group\" #>  #> $fixed$design #>     (Intercept) cweek1 cweek2 cweek3 cweek4 cweek5 cweek6 age_group00-04 #> 1             1      0      0      0      0      0      0              1 #> 6             1      1      0      0      0      0      0              1 #> 13            1      1      1      0      0      0      0              1 #> 20            1      1      1      1      0      0      0              1 #> 27            1      1      1      1      1      0      0              1 #> 34            1      1      1      1      1      1      0              1 #> 41            1      1      1      1      1      1      1              1 #> 42            1      0      0      0      0      0      0              0 #> 47            1      1      0      0      0      0      0              0 #> 54            1      1      1      0      0      0      0              0 #> 61            1      1      1      1      0      0      0              0 #> 68            1      1      1      1      1      0      0              0 #> 75            1      1      1      1      1      1      0              0 #> 82            1      1      1      1      1      1      1              0 #> 83            1      0      0      0      0      0      0              0 #> 88            1      1      0      0      0      0      0              0 #> 95            1      1      1      0      0      0      0              0 #> 102           1      1      1      1      0      0      0              0 #> 109           1      1      1      1      1      0      0              0 #> 116           1      1      1      1      1      1      0              0 #> 123           1      1      1      1      1      1      1              0 #> 124           1      0      0      0      0      0      0              0 #> 129           1      1      0      0      0      0      0              0 #> 136           1      1      1      0      0      0      0              0 #> 143           1      1      1      1      0      0      0              0 #> 150           1      1      1      1      1      0      0              0 #> 157           1      1      1      1      1      1      0              0 #> 164           1      1      1      1      1      1      1              0 #> 165           1      0      0      0      0      0      0              0 #> 170           1      1      0      0      0      0      0              0 #> 177           1      1      1      0      0      0      0              0 #> 184           1      1      1      1      0      0      0              0 #> 191           1      1      1      1      1      0      0              0 #> 198           1      1      1      1      1      1      0              0 #> 205           1      1      1      1      1      1      1              0 #> 206           1      0      0      0      0      0      0              0 #> 211           1      1      0      0      0      0      0              0 #> 218           1      1      1      0      0      0      0              0 #> 225           1      1      1      1      0      0      0              0 #> 232           1      1      1      1      1      0      0              0 #> 239           1      1      1      1      1      1      0              0 #> 246           1      1      1      1      1      1      1              0 #> 247           1      0      0      0      0      0      0              0 #> 252           1      1      0      0      0      0      0              0 #> 259           1      1      1      0      0      0      0              0 #> 266           1      1      1      1      0      0      0              0 #> 273           1      1      1      1      1      0      0              0 #> 280           1      1      1      1      1      1      0              0 #> 287           1      1      1      1      1      1      1              0 #>     age_group00+ age_group05-14 age_group15-34 age_group35-59 age_group60-79 #> 1              0              0              0              0              0 #> 6              0              0              0              0              0 #> 13             0              0              0              0              0 #> 20             0              0              0              0              0 #> 27             0              0              0              0              0 #> 34             0              0              0              0              0 #> 41             0              0              0              0              0 #> 42             1              0              0              0              0 #> 47             1              0              0              0              0 #> 54             1              0              0              0              0 #> 61             1              0              0              0              0 #> 68             1              0              0              0              0 #> 75             1              0              0              0              0 #> 82             1              0              0              0              0 #> 83             0              1              0              0              0 #> 88             0              1              0              0              0 #> 95             0              1              0              0              0 #> 102            0              1              0              0              0 #> 109            0              1              0              0              0 #> 116            0              1              0              0              0 #> 123            0              1              0              0              0 #> 124            0              0              1              0              0 #> 129            0              0              1              0              0 #> 136            0              0              1              0              0 #> 143            0              0              1              0              0 #> 150            0              0              1              0              0 #> 157            0              0              1              0              0 #> 164            0              0              1              0              0 #> 165            0              0              0              1              0 #> 170            0              0              0              1              0 #> 177            0              0              0              1              0 #> 184            0              0              0              1              0 #> 191            0              0              0              1              0 #> 198            0              0              0              1              0 #> 205            0              0              0              1              0 #> 206            0              0              0              0              1 #> 211            0              0              0              0              1 #> 218            0              0              0              0              1 #> 225            0              0              0              0              1 #> 232            0              0              0              0              1 #> 239            0              0              0              0              1 #> 246            0              0              0              0              1 #> 247            0              0              0              0              0 #> 252            0              0              0              0              0 #> 259            0              0              0              0              0 #> 266            0              0              0              0              0 #> 273            0              0              0              0              0 #> 280            0              0              0              0              0 #> 287            0              0              0              0              0 #>     age_group80+ #> 1              0 #> 6              0 #> 13             0 #> 20             0 #> 27             0 #> 34             0 #> 41             0 #> 42             0 #> 47             0 #> 54             0 #> 61             0 #> 68             0 #> 75             0 #> 82             0 #> 83             0 #> 88             0 #> 95             0 #> 102            0 #> 109            0 #> 116            0 #> 123            0 #> 124            0 #> 129            0 #> 136            0 #> 143            0 #> 150            0 #> 157            0 #> 164            0 #> 165            0 #> 170            0 #> 177            0 #> 184            0 #> 191            0 #> 198            0 #> 205            0 #> 206            0 #> 211            0 #> 218            0 #> 225            0 #> 232            0 #> 239            0 #> 246            0 #> 247            1 #> 252            1 #> 259            1 #> 266            1 #> 273            1 #> 280            1 #> 287            1 #>  #> $fixed$index #>   [1]  1  1  1  1  1  2  2  2  2  2  2  2  3  3  3  3  3  3  3  4  4  4  4  4  4 #>  [26]  4  5  5  5  5  5  5  5  6  6  6  6  6  6  6  7  8  8  8  8  8  9  9  9  9 #>  [51]  9  9  9 10 10 10 10 10 10 10 11 11 11 11 11 11 11 12 12 12 12 12 12 12 13 #>  [76] 13 13 13 13 13 13 14 15 15 15 15 15 16 16 16 16 16 16 16 17 17 17 17 17 17 #> [101] 17 18 18 18 18 18 18 18 19 19 19 19 19 19 19 20 20 20 20 20 20 20 21 22 22 #> [126] 22 22 22 23 23 23 23 23 23 23 24 24 24 24 24 24 24 25 25 25 25 25 25 25 26 #> [151] 26 26 26 26 26 26 27 27 27 27 27 27 27 28 29 29 29 29 29 30 30 30 30 30 30 #> [176] 30 31 31 31 31 31 31 31 32 32 32 32 32 32 32 33 33 33 33 33 33 33 34 34 34 #> [201] 34 34 34 34 35 36 36 36 36 36 37 37 37 37 37 37 37 38 38 38 38 38 38 38 39 #> [226] 39 39 39 39 39 39 40 40 40 40 40 40 40 41 41 41 41 41 41 41 42 43 43 43 43 #> [251] 43 44 44 44 44 44 44 44 45 45 45 45 45 45 45 46 46 46 46 46 46 46 47 47 47 #> [276] 47 47 47 47 48 48 48 48 48 48 48 49 #>  #>  #> $random #> $random$formula #> [1] \"~0 + fixed + age_group + week\" #>  #> $random$design #>    fixed age_group week #> 1      0         1    0 #> 2      0         1    0 #> 3      0         1    0 #> 4      0         1    0 #> 5      0         1    0 #> 6      0         1    0 #> 7      0         1    0 #> 8      0         0    1 #> 9      0         0    1 #> 10     0         0    1 #> 11     0         0    1 #> 12     0         0    1 #> 13     0         0    1 #> attr(,\"assign\") #> [1] 1 2 3 #>  #> $random$index #>  [1]  1  2  3  4  5  6  7  8  9 10 11 12 13 #>  #>  #> attr(,\"class\") #> [1] \"enw_formula\" \"list\""},{"path":"epiforecasts.io/epinowcast/dev/reference/enw_formula_as_data_list.html","id":null,"dir":"Reference","previous_headings":"","what":"Format formula data for use with stan — enw_formula_as_data_list","title":"Format formula data for use with stan — enw_formula_as_data_list","text":"Format formula data use stan","code":""},{"path":"epiforecasts.io/epinowcast/dev/reference/enw_formula_as_data_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format formula data for use with stan — enw_formula_as_data_list","text":"","code":"enw_formula_as_data_list(data, reference_effects, report_effects)"},{"path":"epiforecasts.io/epinowcast/dev/reference/enw_formula_as_data_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format formula data for use with stan — enw_formula_as_data_list","text":"data list stan observation data produced enw_obs_as_data_list(). reference_effects list fixed random design matrices defining date reference model. Defaults enw_manual_formula() intercept model. report_effects list fixed random design matrices defining date reports model. Defaults enw_manual_formula() intercept model.","code":""},{"path":"epiforecasts.io/epinowcast/dev/reference/enw_formula_as_data_list.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Format formula data for use with stan — enw_formula_as_data_list","text":"list required stan.","code":""},{"path":[]},{"path":"epiforecasts.io/epinowcast/dev/reference/enw_inits.html","id":null,"dir":"Reference","previous_headings":"","what":"Set up initial conditions for model — enw_inits","title":"Set up initial conditions for model — enw_inits","text":"Set initial conditions model","code":""},{"path":"epiforecasts.io/epinowcast/dev/reference/enw_inits.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set up initial conditions for model — enw_inits","text":"","code":"enw_inits(data)"},{"path":"epiforecasts.io/epinowcast/dev/reference/enw_inits.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set up initial conditions for model — enw_inits","text":"data list data produced enw_as_data_list() output data epinowcast().","code":""},{"path":"epiforecasts.io/epinowcast/dev/reference/enw_inits.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set up initial conditions for model — enw_inits","text":"function called returns list initial conditions package stan models.","code":""},{"path":[]},{"path":"epiforecasts.io/epinowcast/dev/reference/enw_inits.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set up initial conditions for model — enw_inits","text":"","code":"stan_data <- enw_example(\"nowcast\")$data enw_inits(stan_data) #> function ()  #> { #>     init <- list(logmean_int = rnorm(1, data$logmean_int_p[1],  #>         data$logmean_int_p[2]/10)) #>     if (data$dist > 1) { #>         init$logsd_int <- abs(rnorm(1, data$logsd_int_p[1], data$logsd_int_p[2]/10)) #>     } #>     else { #>         init$logsd_int <- numeric(0) #>     } #>     init <- c(init, list(leobs_init = array(purrr::map_dbl(data$latest_obs[1,  #>         ] + 1, ~rnorm(1, log(.), 1))), eobs_lsd = array(abs(rnorm(data$g,  #>         data$eobs_lsd_p[1], data$eobs_lsd_p[2]/10))), leobs_resids = array(rnorm((data$t -  #>         1) * data$g, 0, 0.01), dim = c(data$t - 1, data$g)),  #>         sqrt_phi = abs(rnorm(1, data$sqrt_phi_p[1], data$sqrt_phi_p[2]/10)))) #>     init$logmean <- rep(init$logmean_int, data$npmfs) #>     init$logsd <- rep(init$logsd_int, data$npmfs) #>     init$phi <- 1/(init$sqrt_phi^2) #>     if (data$neffs > 0) { #>         init$logmean_eff <- rnorm(data$neffs, 0, 0.01) #>         if (data$dist > 1) { #>             init$logsd_eff <- rnorm(data$neffs, 0, 0.01) #>         } #>     } #>     else { #>         init$logmean_eff <- numeric(0) #>         init$logsd_eff <- numeric(0) #>     } #>     if (data$neff_sds > 0) { #>         init$logmean_sd <- abs(rnorm(data$neff_sds, data$logmean_sd_p[1],  #>             data$logmean_sd_p[2]/10)) #>         init$logsd_sd <- abs(rnorm(data$neff_sds, data$logsd_sd_p[1],  #>             data$logsd_sd_p[2]/10)) #>     } #>     else { #>         init$logmean_sd <- numeric(0) #>         init$logsd_sd <- numeric(0) #>     } #>     if (data$nrd_effs > 0) { #>         init$rd_eff <- rnorm(data$nrd_effs, 0, 0.01) #>     } #>     else { #>         init$rd_eff <- numeric(0) #>     } #>     if (data$nrd_eff_sds > 0) { #>         init$rd_eff_sd <- abs(rnorm(data$nrd_eff_sds, data$rd_eff_sd_p[1],  #>             data$rd_eff_sd_p[2]/10)) #>     } #>     else { #>         init$rd_eff_sd <- numeric(0) #>     } #>     return(init) #> } #> <bytecode: 0x7f8f632f0e80> #> <environment: 0x7f8f632fb200>"},{"path":"epiforecasts.io/epinowcast/dev/reference/enw_latest_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter observations to the latest available reported — enw_latest_data","title":"Filter observations to the latest available reported — enw_latest_data","text":"Filter observations latest available reported data reference date. Note filtering maximum report date cases data may updated maximum number days.","code":""},{"path":"epiforecasts.io/epinowcast/dev/reference/enw_latest_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter observations to the latest available reported — enw_latest_data","text":"","code":"enw_latest_data(obs)"},{"path":"epiforecasts.io/epinowcast/dev/reference/enw_latest_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter observations to the latest available reported — enw_latest_data","text":"obs observation data frame containing report_date reference_date columns.","code":""},{"path":"epiforecasts.io/epinowcast/dev/reference/enw_latest_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter observations to the latest available reported — enw_latest_data","text":"data.frame observations filtered latest available data reference date.","code":""},{"path":[]},{"path":"epiforecasts.io/epinowcast/dev/reference/enw_latest_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Filter observations to the latest available reported — enw_latest_data","text":"","code":"# Filter for latest reported data enw_latest_data(germany_covid19_hosp) #>        reference_date location age_group confirm report_date #>     1:     2021-04-06       DE       00+     708  2021-06-26 #>     2:     2021-04-06       DE     00-04      11  2021-06-26 #>     3:     2021-04-06       DE     05-14       5  2021-06-26 #>     4:     2021-04-06       DE     15-34      75  2021-06-26 #>     5:     2021-04-06       DE     35-59     192  2021-06-26 #>    ---                                                       #> 23558:     2021-10-20    DE-TH     05-14       1  2021-10-20 #> 23559:     2021-10-20    DE-TH     15-34       2  2021-10-20 #> 23560:     2021-10-20    DE-TH     35-59       1  2021-10-20 #> 23561:     2021-10-20    DE-TH     60-79       5  2021-10-20 #> 23562:     2021-10-20    DE-TH       80+       5  2021-10-20"},{"path":"epiforecasts.io/epinowcast/dev/reference/enw_manual_formula.html","id":null,"dir":"Reference","previous_headings":"","what":"Define a model manually using fixed and random effects — enw_manual_formula","title":"Define a model manually using fixed and random effects — enw_manual_formula","text":"typical use cases enw_formula() provide sufficient flexibility allow models defined. However, may instances manual model specification required. function supports allowing user supply vectors fixed, random, customised random effects (first treated fixed effect terms). Prior 1.0.0 main interface specifying models still used internally handle parts model specification process.","code":""},{"path":"epiforecasts.io/epinowcast/dev/reference/enw_manual_formula.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Define a model manually using fixed and random effects — enw_manual_formula","text":"","code":"enw_manual_formula(   data,   fixed = c(),   random = c(),   custom_random = c(),   no_contrasts = FALSE )"},{"path":"epiforecasts.io/epinowcast/dev/reference/enw_manual_formula.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Define a model manually using fixed and random effects — enw_manual_formula","text":"data data.frame observations. must include variables used supplied formula. fixed character vector fixed effects. random character vector random effects. Random effects specified added fixed effects. custom_random vector random effects. Random effects added added vector fixed effects. can used random effects fixed effects partial name match. no_contrasts Defaults FALSE. TRUE means variable uses contrast. Alternatively character vector variables can supplied indicating variables  contrasts.","code":""},{"path":"epiforecasts.io/epinowcast/dev/reference/enw_manual_formula.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Define a model manually using fixed and random effects — enw_manual_formula","text":"list specifying fixed effects (formula, design matrix, design matrix index), random effects (formula design matrix).","code":""},{"path":[]},{"path":"epiforecasts.io/epinowcast/dev/reference/enw_manual_formula.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Define a model manually using fixed and random effects — enw_manual_formula","text":"","code":"data <- enw_example(\"prep\")$metareference[[1]] enw_manual_formula(data, fixed = \"week\", random = \"day_of_week\") #> $fixed #> $fixed$formula #> [1] \"~1 + week + day_of_week\" #>  #> $fixed$design #>    (Intercept) week day_of_weekFriday day_of_weekMonday day_of_weekSaturday #> 1            1    0                 0                 0                   0 #> 2            1    0                 0                 0                   0 #> 3            1    0                 0                 0                   0 #> 4            1    1                 1                 0                   0 #> 5            1    1                 0                 0                   1 #> 6            1    1                 0                 0                   0 #> 7            1    1                 0                 1                   0 #> 8            1    1                 0                 0                   0 #> 9            1    1                 0                 0                   0 #> 10           1    1                 0                 0                   0 #> 11           1    2                 1                 0                   0 #> 12           1    2                 0                 0                   1 #> 13           1    2                 0                 0                   0 #> 14           1    2                 0                 1                   0 #> 15           1    2                 0                 0                   0 #> 16           1    2                 0                 0                   0 #> 17           1    2                 0                 0                   0 #> 18           1    3                 1                 0                   0 #> 19           1    3                 0                 0                   1 #> 20           1    3                 0                 0                   0 #> 21           1    3                 0                 1                   0 #> 22           1    3                 0                 0                   0 #> 23           1    3                 0                 0                   0 #> 24           1    3                 0                 0                   0 #> 25           1    4                 1                 0                   0 #> 26           1    4                 0                 0                   1 #> 27           1    4                 0                 0                   0 #> 28           1    4                 0                 1                   0 #> 29           1    4                 0                 0                   0 #> 30           1    4                 0                 0                   0 #> 31           1    4                 0                 0                   0 #> 32           1    5                 1                 0                   0 #> 33           1    5                 0                 0                   1 #> 34           1    5                 0                 0                   0 #> 35           1    5                 0                 1                   0 #> 36           1    5                 0                 0                   0 #> 37           1    5                 0                 0                   0 #> 38           1    5                 0                 0                   0 #> 39           1    6                 1                 0                   0 #> 40           1    6                 0                 0                   1 #> 41           1    6                 0                 0                   0 #>    day_of_weekSunday day_of_weekThursday day_of_weekTuesday #> 1                  0                   0                  1 #> 2                  0                   0                  0 #> 3                  0                   1                  0 #> 4                  0                   0                  0 #> 5                  0                   0                  0 #> 6                  1                   0                  0 #> 7                  0                   0                  0 #> 8                  0                   0                  1 #> 9                  0                   0                  0 #> 10                 0                   1                  0 #> 11                 0                   0                  0 #> 12                 0                   0                  0 #> 13                 1                   0                  0 #> 14                 0                   0                  0 #> 15                 0                   0                  1 #> 16                 0                   0                  0 #> 17                 0                   1                  0 #> 18                 0                   0                  0 #> 19                 0                   0                  0 #> 20                 1                   0                  0 #> 21                 0                   0                  0 #> 22                 0                   0                  1 #> 23                 0                   0                  0 #> 24                 0                   1                  0 #> 25                 0                   0                  0 #> 26                 0                   0                  0 #> 27                 1                   0                  0 #> 28                 0                   0                  0 #> 29                 0                   0                  1 #> 30                 0                   0                  0 #> 31                 0                   1                  0 #> 32                 0                   0                  0 #> 33                 0                   0                  0 #> 34                 1                   0                  0 #> 35                 0                   0                  0 #> 36                 0                   0                  1 #> 37                 0                   0                  0 #> 38                 0                   1                  0 #> 39                 0                   0                  0 #> 40                 0                   0                  0 #> 41                 1                   0                  0 #>    day_of_weekWednesday #> 1                     0 #> 2                     1 #> 3                     0 #> 4                     0 #> 5                     0 #> 6                     0 #> 7                     0 #> 8                     0 #> 9                     1 #> 10                    0 #> 11                    0 #> 12                    0 #> 13                    0 #> 14                    0 #> 15                    0 #> 16                    1 #> 17                    0 #> 18                    0 #> 19                    0 #> 20                    0 #> 21                    0 #> 22                    0 #> 23                    1 #> 24                    0 #> 25                    0 #> 26                    0 #> 27                    0 #> 28                    0 #> 29                    0 #> 30                    1 #> 31                    0 #> 32                    0 #> 33                    0 #> 34                    0 #> 35                    0 #> 36                    0 #> 37                    1 #> 38                    0 #> 39                    0 #> 40                    0 #> 41                    0 #>  #> $fixed$index #>  [1]  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 #> [26] 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 #>  #>  #> $random #> $random$formula #> [1] \"~0 + fixed + day_of_week\" #>  #> $random$design #>   fixed day_of_week #> 1     1           0 #> 2     0           1 #> 3     0           1 #> 4     0           1 #> 5     0           1 #> 6     0           1 #> 7     0           1 #> 8     0           1 #> attr(,\"assign\") #> [1] 1 2 #>  #> $random$index #> [1] 1 2 3 4 5 6 7 8 #>  #>"},{"path":"epiforecasts.io/epinowcast/dev/reference/enw_metadata.html","id":null,"dir":"Reference","previous_headings":"","what":"FUNCTION_TITLE — enw_metadata","title":"FUNCTION_TITLE — enw_metadata","text":"FUNCTION_DESCRIPTION","code":""},{"path":"epiforecasts.io/epinowcast/dev/reference/enw_metadata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"FUNCTION_TITLE — enw_metadata","text":"","code":"enw_metadata(obs, target_date = \"reference_date\")"},{"path":"epiforecasts.io/epinowcast/dev/reference/enw_metadata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"FUNCTION_TITLE — enw_metadata","text":"obs PARAM_DESCRIPTION target_date PARAM_DESCRIPTION, Default: 'reference_date'","code":""},{"path":"epiforecasts.io/epinowcast/dev/reference/enw_metadata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"FUNCTION_TITLE — enw_metadata","text":"OUTPUT_DESCRIPTION","code":""},{"path":[]},{"path":"epiforecasts.io/epinowcast/dev/reference/enw_missing_reference.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract reports with missing reference dates — enw_missing_reference","title":"Extract reports with missing reference dates — enw_missing_reference","text":"Returns reports missing reference dates well calculating proportion reports given reference date missing.","code":""},{"path":"epiforecasts.io/epinowcast/dev/reference/enw_missing_reference.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract reports with missing reference dates — enw_missing_reference","text":"","code":"enw_missing_reference(obs)"},{"path":"epiforecasts.io/epinowcast/dev/reference/enw_missing_reference.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract reports with missing reference dates — enw_missing_reference","text":"obs data frame produced enw_new_reports(). Must contain following variables: report_date, reference_date, .group, confirm, new_confirm.","code":""},{"path":"epiforecasts.io/epinowcast/dev/reference/enw_missing_reference.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract reports with missing reference dates — enw_missing_reference","text":"data.table missing counts proportions report date group.","code":""},{"path":[]},{"path":"epiforecasts.io/epinowcast/dev/reference/enw_missing_reference.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract reports with missing reference dates — enw_missing_reference","text":"","code":"obs <- data.frame(   report_date = c(\"2021-10-01\", \"2021-10-03\"), reference_date = \"2021-10-01\",   confirm = 1 ) obs <- rbind(   obs,   data.frame(report_date = \"2021-10-04\", reference_date = NA, confirm = 4) ) obs <- enw_complete_dates(obs) obs <- enw_assign_group(obs) obs <- enw_new_reports(obs) enw_missing_reference(obs) #>    report_date .group confirm prop_missing #> 1:  2021-10-01      1       0            0 #> 2:  2021-10-02      1       0          NaN #> 3:  2021-10-03      1       0          NaN #> 4:  2021-10-04      1       4            1"},{"path":"epiforecasts.io/epinowcast/dev/reference/enw_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Load and compile the nowcasting model — enw_model","title":"Load and compile the nowcasting model — enw_model","text":"Load compile nowcasting model","code":""},{"path":"epiforecasts.io/epinowcast/dev/reference/enw_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load and compile the nowcasting model — enw_model","text":"","code":"enw_model(   model,   include,   compile = TRUE,   threads = FALSE,   profile = FALSE,   stanc_options = list(),   verbose = TRUE,   ... )"},{"path":"epiforecasts.io/epinowcast/dev/reference/enw_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load and compile the nowcasting model — enw_model","text":"model character string indicating path model. supplied package default model used. include character string specifying path stan files include model. missing package default used. compile Logical, defaults TRUE. model loaded compiled using cmdstanr::cmdstan_model(). threads Logical, defaults FALSE. model compile support multi-thread support chain. Note requires use threads_per_chain argument model fitting using enw_sample(), epinowcast(). profile Logical, defaults FALSE. model profiled? profiling see cmdstanr documentation. # nolint stanc_options list options pass stanc_options cmdstanr::cmdstan_model(). default nothing passed potentially users may wish pass optimisation flags example.See documentation cmdstanr::cmdstan_model() details. verbose Logical, defaults TRUE. verbose messages shown. ... Additional arguments passed cmdstanr::cmdstan_model().","code":""},{"path":"epiforecasts.io/epinowcast/dev/reference/enw_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load and compile the nowcasting model — enw_model","text":"cmdstanr model.","code":""},{"path":[]},{"path":"epiforecasts.io/epinowcast/dev/reference/enw_model.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load and compile the nowcasting model — enw_model","text":"","code":"if (FALSE) { # interactive() mod <- enw_model() }"},{"path":"epiforecasts.io/epinowcast/dev/reference/enw_new_reports.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate incidence of new reports from cumulative reports — enw_new_reports","title":"Calculate incidence of new reports from cumulative reports — enw_new_reports","text":"Calculate incidence new reports cumulative reports","code":""},{"path":"epiforecasts.io/epinowcast/dev/reference/enw_new_reports.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate incidence of new reports from cumulative reports — enw_new_reports","text":"","code":"enw_new_reports(obs, set_negatives_to_zero = TRUE)"},{"path":"epiforecasts.io/epinowcast/dev/reference/enw_new_reports.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate incidence of new reports from cumulative reports — enw_new_reports","text":"obs data frame containing least following variables: reference date (index date interest), report_date (report date observations), confirm (cumulative observations reference report date), .group (added enw_assign_group()). set_negatives_to_zero Logical, defaults TRUE. negative counts (calculated incidence observations) set zero. Currently downstream modelling support negative counts setting must TRUE intending use epinowcast().","code":""},{"path":"epiforecasts.io/epinowcast/dev/reference/enw_new_reports.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate incidence of new reports from cumulative reports — enw_new_reports","text":"input data frame new variable new_confirm. max_confirm present data frame proportion reported day (prop_reported) also added.","code":""},{"path":[]},{"path":"epiforecasts.io/epinowcast/dev/reference/enw_new_reports.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate incidence of new reports from cumulative reports — enw_new_reports","text":"","code":"# Default reconstruct incidence dt <- enw_assign_group(   germany_covid19_hosp[location == \"DE\"],   by = \"age_group\" ) enw_new_reports(dt) #>        .group age_group reference_date location confirm report_date new_confirm #>     1:      2     00-04     2021-04-06       DE       4  2021-04-06           4 #>     2:      2     00-04     2021-04-06       DE       6  2021-04-07           2 #>     3:      2     00-04     2021-04-06       DE       6  2021-04-08           0 #>     4:      2     00-04     2021-04-06       DE       6  2021-04-09           0 #>     5:      2     00-04     2021-04-06       DE       6  2021-04-10           0 #>    ---                                                                          #> 90401:      7       80+     2021-10-18       DE      42  2021-10-19          25 #> 90402:      7       80+     2021-10-18       DE      50  2021-10-20           8 #> 90403:      7       80+     2021-10-19       DE      70  2021-10-19          70 #> 90404:      7       80+     2021-10-19       DE     128  2021-10-20          58 #> 90405:      7       80+     2021-10-20       DE      71  2021-10-20          71 #>        delay #>     1:     0 #>     2:     1 #>     3:     2 #>     4:     3 #>     5:     4 #>    ---       #> 90401:     1 #> 90402:     2 #> 90403:     0 #> 90404:     1 #> 90405:     0  # Make use of maximum reported to calculate empirical daily reporting dt <- enw_add_max_reported(dt) enw_new_reports(dt) #>        .group reference_date max_confirm age_group location confirm report_date #>     1:      2     2021-04-06          11     00-04       DE       4  2021-04-06 #>     2:      2     2021-04-06          11     00-04       DE       6  2021-04-07 #>     3:      2     2021-04-06          11     00-04       DE       6  2021-04-08 #>     4:      2     2021-04-06          11     00-04       DE       6  2021-04-09 #>     5:      2     2021-04-06          11     00-04       DE       6  2021-04-10 #>    ---                                                                          #> 90401:      7     2021-10-18          50       80+       DE      42  2021-10-19 #> 90402:      7     2021-10-18          50       80+       DE      50  2021-10-20 #> 90403:      7     2021-10-19         128       80+       DE      70  2021-10-19 #> 90404:      7     2021-10-19         128       80+       DE     128  2021-10-20 #> 90405:      7     2021-10-20          71       80+       DE      71  2021-10-20 #>        cum_prop_reported new_confirm delay prop_reported #>     1:         0.3636364           4     0     0.3636364 #>     2:         0.5454545           2     1     0.1818182 #>     3:         0.5454545           0     2     0.0000000 #>     4:         0.5454545           0     3     0.0000000 #>     5:         0.5454545           0     4     0.0000000 #>    ---                                                   #> 90401:         0.8400000          25     1     0.5000000 #> 90402:         1.0000000           8     2     0.1600000 #> 90403:         0.5468750          70     0     0.5468750 #> 90404:         1.0000000          58     1     0.4531250 #> 90405:         1.0000000          71     0     1.0000000"},{"path":"epiforecasts.io/epinowcast/dev/reference/enw_nowcast_samples.html","id":null,"dir":"Reference","previous_headings":"","what":"FUNCTION_TITLE — enw_nowcast_samples","title":"FUNCTION_TITLE — enw_nowcast_samples","text":"FUNCTION_DESCRIPTION","code":""},{"path":"epiforecasts.io/epinowcast/dev/reference/enw_nowcast_samples.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"FUNCTION_TITLE — enw_nowcast_samples","text":"","code":"enw_nowcast_samples(fit, obs)"},{"path":"epiforecasts.io/epinowcast/dev/reference/enw_nowcast_samples.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"FUNCTION_TITLE — enw_nowcast_samples","text":"fit PARAM_DESCRIPTION obs PARAM_DESCRIPTION","code":""},{"path":"epiforecasts.io/epinowcast/dev/reference/enw_nowcast_samples.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"FUNCTION_TITLE — enw_nowcast_samples","text":"OUTPUT_DESCRIPTION","code":""},{"path":[]},{"path":"epiforecasts.io/epinowcast/dev/reference/enw_nowcast_summary.html","id":null,"dir":"Reference","previous_headings":"","what":"FUNCTION_TITLE — enw_nowcast_summary","title":"FUNCTION_TITLE — enw_nowcast_summary","text":"FUNCTION_DESCRIPTION","code":""},{"path":"epiforecasts.io/epinowcast/dev/reference/enw_nowcast_summary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"FUNCTION_TITLE — enw_nowcast_summary","text":"","code":"enw_nowcast_summary(fit, obs, probs = c(0.05, 0.2, 0.35, 0.5, 0.65, 0.8, 0.95))"},{"path":"epiforecasts.io/epinowcast/dev/reference/enw_nowcast_summary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"FUNCTION_TITLE — enw_nowcast_summary","text":"fit PARAM_DESCRIPTION obs PARAM_DESCRIPTION probs PARAM_DESCRIPTION, Default: c(0.05, 0.2, 0.35, 0.5, 0.65, 0.8, 0.95)","code":""},{"path":"epiforecasts.io/epinowcast/dev/reference/enw_nowcast_summary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"FUNCTION_TITLE — enw_nowcast_summary","text":"OUTPUT_DESCRIPTION","code":""},{"path":[]},{"path":"epiforecasts.io/epinowcast/dev/reference/enw_obs_as_data_list.html","id":null,"dir":"Reference","previous_headings":"","what":"Format observed data for use with stan — enw_obs_as_data_list","title":"Format observed data for use with stan — enw_obs_as_data_list","text":"Format observed data use stan","code":""},{"path":"epiforecasts.io/epinowcast/dev/reference/enw_obs_as_data_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format observed data for use with stan — enw_obs_as_data_list","text":"","code":"enw_obs_as_data_list(pobs)"},{"path":"epiforecasts.io/epinowcast/dev/reference/enw_obs_as_data_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format observed data for use with stan — enw_obs_as_data_list","text":"pobs Output enw_preprocess_data().","code":""},{"path":"epiforecasts.io/epinowcast/dev/reference/enw_obs_as_data_list.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Format observed data for use with stan — enw_obs_as_data_list","text":"list required stan.","code":""},{"path":[]},{"path":"epiforecasts.io/epinowcast/dev/reference/enw_opts_as_data_list.html","id":null,"dir":"Reference","previous_headings":"","what":"Format model options for use with stan — enw_opts_as_data_list","title":"Format model options for use with stan — enw_opts_as_data_list","text":"Format model options use stan","code":""},{"path":"epiforecasts.io/epinowcast/dev/reference/enw_opts_as_data_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format model options for use with stan — enw_opts_as_data_list","text":"","code":"enw_opts_as_data_list(   distribution = \"lognormal\",   nowcast = TRUE,   pp = FALSE,   likelihood = TRUE,   debug = FALSE,   output_loglik = FALSE )"},{"path":"epiforecasts.io/epinowcast/dev/reference/enw_opts_as_data_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format model options for use with stan — enw_opts_as_data_list","text":"distribution Character string indicating type distribution use reference date effects. default use lognormal options available include exponential gamma distributions. \"none\" specified parametric delay distribution used. nowcast Logical, defaults TRUE. nowcast made using posterior predictions unobserved future reported notifications. pp Logical, defaults FALSE. posterior predictions made observed data. Useful evaluating performance model. likelihood Logical, defaults TRUE. likelihood included model debug Logical, defaults FALSE. within model debug information returned. output_loglik Logical, defaults FALSE. log-likelihood output. Disabling speed fitting evaluating model fit required.","code":""},{"path":"epiforecasts.io/epinowcast/dev/reference/enw_opts_as_data_list.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Format model options for use with stan — enw_opts_as_data_list","text":"list required stan.","code":""},{"path":[]},{"path":"epiforecasts.io/epinowcast/dev/reference/enw_plot_nowcast_quantiles.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot nowcast quantiles — enw_plot_nowcast_quantiles","title":"Plot nowcast quantiles — enw_plot_nowcast_quantiles","text":"Plot nowcast quantiles","code":""},{"path":"epiforecasts.io/epinowcast/dev/reference/enw_plot_nowcast_quantiles.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot nowcast quantiles — enw_plot_nowcast_quantiles","text":"","code":"enw_plot_nowcast_quantiles(nowcast, latest_obs = NULL, log = FALSE, ...)"},{"path":"epiforecasts.io/epinowcast/dev/reference/enw_plot_nowcast_quantiles.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot nowcast quantiles — enw_plot_nowcast_quantiles","text":"nowcast data.frame summarised posterior nowcast estimates containing least confirm count column reference_date date variable. latest_obs data frame observed data containing least confirm count variable date variable main data.frame used plotting. log Logical, defaults FALSE. counts plot log scale. ... Additional arguments passed enw_plot_pp_quantiles().","code":""},{"path":"epiforecasts.io/epinowcast/dev/reference/enw_plot_nowcast_quantiles.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot nowcast quantiles — enw_plot_nowcast_quantiles","text":"ggplot2 plot.","code":""},{"path":[]},{"path":"epiforecasts.io/epinowcast/dev/reference/enw_plot_obs.html","id":null,"dir":"Reference","previous_headings":"","what":"Generic quantile plot — enw_plot_obs","title":"Generic quantile plot — enw_plot_obs","text":"Generic quantile plot","code":""},{"path":"epiforecasts.io/epinowcast/dev/reference/enw_plot_obs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generic quantile plot — enw_plot_obs","text":"","code":"enw_plot_obs(obs, latest_obs = NULL, log = TRUE, ...)"},{"path":"epiforecasts.io/epinowcast/dev/reference/enw_plot_obs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generic quantile plot — enw_plot_obs","text":"obs data.frame summarised posterior estimates containing least confirm count column date variable latest_obs data frame observed data containing least confirm count variable date variable main data.frame used plotting. log Logical, defaults FALSE. counts plot log scale. ... Additional arguments passed ggplot2::aes() must least specify x date variable.","code":""},{"path":"epiforecasts.io/epinowcast/dev/reference/enw_plot_obs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generic quantile plot — enw_plot_obs","text":"ggplot2 plot.","code":""},{"path":[]},{"path":"epiforecasts.io/epinowcast/dev/reference/enw_plot_pp_quantiles.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot posterior prediction quantiles — enw_plot_pp_quantiles","title":"Plot posterior prediction quantiles — enw_plot_pp_quantiles","text":"Plot posterior prediction quantiles","code":""},{"path":"epiforecasts.io/epinowcast/dev/reference/enw_plot_pp_quantiles.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot posterior prediction quantiles — enw_plot_pp_quantiles","text":"","code":"enw_plot_pp_quantiles(pp, log = FALSE, ...)"},{"path":"epiforecasts.io/epinowcast/dev/reference/enw_plot_pp_quantiles.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot posterior prediction quantiles — enw_plot_pp_quantiles","text":"pp data.frame summarised posterior predictions estimates containing least confirm count column report_date date variable. log Logical, defaults FALSE. counts plot log scale. ... Additional arguments passed enw_plot_pp_quantiles().","code":""},{"path":"epiforecasts.io/epinowcast/dev/reference/enw_plot_pp_quantiles.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot posterior prediction quantiles — enw_plot_pp_quantiles","text":"ggplot2 plot.","code":""},{"path":[]},{"path":"epiforecasts.io/epinowcast/dev/reference/enw_plot_quantiles.html","id":null,"dir":"Reference","previous_headings":"","what":"Generic quantile plot — enw_plot_quantiles","title":"Generic quantile plot — enw_plot_quantiles","text":"Generic quantile plot","code":""},{"path":"epiforecasts.io/epinowcast/dev/reference/enw_plot_quantiles.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generic quantile plot — enw_plot_quantiles","text":"","code":"enw_plot_quantiles(posterior, latest_obs = NULL, log = TRUE, ...)"},{"path":"epiforecasts.io/epinowcast/dev/reference/enw_plot_quantiles.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generic quantile plot — enw_plot_quantiles","text":"posterior data.frame summarised posterior estimates containing least confirm count column date variable, quantile estimates 5%, 20%, 80%, 95% quantiles mean median. latest_obs data frame observed data containing least confirm count variable date variable main data.frame used plotting. log Logical, defaults FALSE. counts plot log scale. ... Additional arguments passed ggplot2::aes() must least specify x date variable.","code":""},{"path":"epiforecasts.io/epinowcast/dev/reference/enw_plot_quantiles.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generic quantile plot — enw_plot_quantiles","text":"ggplot2 plot.","code":""},{"path":[]},{"path":"epiforecasts.io/epinowcast/dev/reference/enw_plot_theme.html","id":null,"dir":"Reference","previous_headings":"","what":"Package plot theme — enw_plot_theme","title":"Package plot theme — enw_plot_theme","text":"Package plot theme","code":""},{"path":"epiforecasts.io/epinowcast/dev/reference/enw_plot_theme.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Package plot theme — enw_plot_theme","text":"","code":"enw_plot_theme(plot)"},{"path":"epiforecasts.io/epinowcast/dev/reference/enw_plot_theme.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Package plot theme — enw_plot_theme","text":"plot ggplot2 plot object.","code":""},{"path":"epiforecasts.io/epinowcast/dev/reference/enw_plot_theme.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Package plot theme — enw_plot_theme","text":"ggplot2 plot object.","code":""},{"path":[]},{"path":"epiforecasts.io/epinowcast/dev/reference/enw_posterior.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarise the posterior — enw_posterior","title":"Summarise the posterior — enw_posterior","text":"generic wrapper around posterior::summarise_draws() opinionated defaults.","code":""},{"path":"epiforecasts.io/epinowcast/dev/reference/enw_posterior.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarise the posterior — enw_posterior","text":"","code":"enw_posterior(fit, variables = NULL, probs = c(0.05, 0.2, 0.8, 0.95), ...)"},{"path":"epiforecasts.io/epinowcast/dev/reference/enw_posterior.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarise the posterior — enw_posterior","text":"fit cmdstanr fit object. variables character vector variables return posterior summaries . default summaries parameters returned. probs vector numeric probabilities produce quantile summaries . default 5%, 20%, 80%, 95% quantiles also minimum set required plotting functions work. ... Additional arguments may passed used.","code":""},{"path":"epiforecasts.io/epinowcast/dev/reference/enw_posterior.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarise the posterior — enw_posterior","text":"dataframe summarising model posterior.","code":""},{"path":[]},{"path":"epiforecasts.io/epinowcast/dev/reference/enw_posterior_as_prior.html","id":null,"dir":"Reference","previous_headings":"","what":"FUNCTION_TITLE — enw_posterior_as_prior","title":"FUNCTION_TITLE — enw_posterior_as_prior","text":"FUNCTION_DESCRIPTION","code":""},{"path":"epiforecasts.io/epinowcast/dev/reference/enw_posterior_as_prior.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"FUNCTION_TITLE — enw_posterior_as_prior","text":"","code":"enw_posterior_as_prior(   nowcast,   priors = epinowcast::enw_priors(),   variables = c(),   scale = 5 )"},{"path":"epiforecasts.io/epinowcast/dev/reference/enw_posterior_as_prior.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"FUNCTION_TITLE — enw_posterior_as_prior","text":"nowcast DESCRIPTION priors DESCRIPTION. variables character vector variables posterior default priors. scale DESCRIPTION","code":""},{"path":"epiforecasts.io/epinowcast/dev/reference/enw_posterior_as_prior.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"FUNCTION_TITLE — enw_posterior_as_prior","text":"RETURN_DESCRIPTION","code":""},{"path":[]},{"path":"epiforecasts.io/epinowcast/dev/reference/enw_pp_summary.html","id":null,"dir":"Reference","previous_headings":"","what":"FUNCTION_TITLE — enw_pp_summary","title":"FUNCTION_TITLE — enw_pp_summary","text":"FUNCTION_DESCRIPTION","code":""},{"path":"epiforecasts.io/epinowcast/dev/reference/enw_pp_summary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"FUNCTION_TITLE — enw_pp_summary","text":"","code":"enw_pp_summary(fit, diff_obs, probs = c(0.05, 0.2, 0.35, 0.5, 0.65, 0.8, 0.95))"},{"path":"epiforecasts.io/epinowcast/dev/reference/enw_pp_summary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"FUNCTION_TITLE — enw_pp_summary","text":"fit PARAM_DESCRIPTION diff_obs PARAM_DESCRIPTION probs PARAM_DESCRIPTION, Default: c(0.05, 0.2, 0.35, 0.5, 0.65, 0.8, 0.95)","code":""},{"path":"epiforecasts.io/epinowcast/dev/reference/enw_pp_summary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"FUNCTION_TITLE — enw_pp_summary","text":"OUTPUT_DESCRIPTION","code":""},{"path":[]},{"path":"epiforecasts.io/epinowcast/dev/reference/enw_preprocess_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Preprocess observations — enw_preprocess_data","title":"Preprocess observations — enw_preprocess_data","text":"function preprocesses raw observations assumption reported cumulative counts reference report date used assign groups. also constructs data objects used visualisation modelling functions including observed empirical probability report given day, cumulative probability report, latest available observations, incidence observations, metadata date reference report (used construct models). function wraps preprocessing functions may instead used individually required. Note internally reports beyond user specified delay reassigned last permissible delay modelling purposes. Also note missing reference report dates suspected occur data need completed enw_complete_dates().","code":""},{"path":"epiforecasts.io/epinowcast/dev/reference/enw_preprocess_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Preprocess observations — enw_preprocess_data","text":"","code":"enw_preprocess_data(   obs,   by = c(),   max_delay = 20,   holidays = c(),   set_negatives_to_zero = TRUE )"},{"path":"epiforecasts.io/epinowcast/dev/reference/enw_preprocess_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Preprocess observations — enw_preprocess_data","text":"obs data frame containing least following variables: reference date (index date interest), report_date (report date observations), confirm (cumulative observations reference report date). character vector describing stratification observations. defaults grouping. used modelling multiple time series order identify downstream modelling max_delay Numeric defaults 20. maximum number days include delay distribution. Computation scales non-linearly setting consider maximum makes sense data carefully. holidays vector dates indicating holidays occur used enw_add_metaobs_features() treat holidays sundays within day_of_week variable creates internally. set_negatives_to_zero Logical, defaults TRUE. negative counts (calculated incidence observations) set zero. Currently downstream modelling support negative counts setting must TRUE intending use epinowcast().","code":""},{"path":"epiforecasts.io/epinowcast/dev/reference/enw_preprocess_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Preprocess observations — enw_preprocess_data","text":"data.table containing processed observations series nested data frames well variables containing metadata. : obs: (observations addition empirical reporting proportions restricted specified maximum delay). new_confirm: Incidence notifications reference report date. Empirical reporting distributions also added. latest: latest available observations. missing_reference: Observations missing reference dates. reporting_triangle: Incident observations report reference date standard reporting triangle matrix format. metareference: Metadata reference dates derived observations. metrareport: Metadata report dates. metadelay: Metadata reporting delays produced using enw_delay_metadata(). time: Numeric, number timepoints data. snapshots: Numeric, number available data snapshots use nowcasting. groups: Numeric, Number groups/strata supplied observations (set using ). max_delay: Numeric, maximum delay processed data max_date: maximum available report date.","code":""},{"path":[]},{"path":"epiforecasts.io/epinowcast/dev/reference/enw_preprocess_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Preprocess observations — enw_preprocess_data","text":"","code":"library(data.table)  # Filter example hospitalisation data to be natioanl and over all ages nat_germany_hosp <- germany_covid19_hosp[location == \"DE\"] nat_germany_hosp <- nat_germany_hosp[age_group %in% \"00+\"]  # Preprocess with default settings pobs <- enw_preprocess_data(nat_germany_hosp) pobs #>                     obs           new_confirm               latest #> 1: <data.table[3770x9]> <data.table[3770x11]> <data.table[198x10]> #>    missing_reference   reporting_triangle       metareference #> 1: <data.table[0x6]> <data.table[198x22]> <data.table[198x8]> #>              metareport          metadelay time snapshots by groups max_delay #> 1: <data.table[217x11]> <data.table[20x4]>  198       198         1        20 #>      max_date #> 1: 2021-10-20  # Preprocess all data pobs_all <- enw_preprocess_data(   germany_covid19_hosp,   by = c(\"location\", \"age_group\") ) pobs_all #>                       obs             new_confirm                 latest #> 1: <data.table[448630x9]> <data.table[448630x11]> <data.table[23562x10]> #>    missing_reference     reporting_triangle         metareference #> 1: <data.table[0x6]> <data.table[23562x22]> <data.table[23562x8]> #>                metareport          metadelay time snapshots                 by #> 1: <data.table[25823x11]> <data.table[20x4]>  198     23562 location,age_group #>    groups max_delay   max_date #> 1:    119        20 2021-10-20"},{"path":"epiforecasts.io/epinowcast/dev/reference/enw_priors.html","id":null,"dir":"Reference","previous_headings":"","what":"FUNCTION_TITLE — enw_priors","title":"FUNCTION_TITLE — enw_priors","text":"FUNCTION_DESCRIPTION","code":""},{"path":"epiforecasts.io/epinowcast/dev/reference/enw_priors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"FUNCTION_TITLE — enw_priors","text":"","code":"enw_priors()"},{"path":"epiforecasts.io/epinowcast/dev/reference/enw_priors.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"FUNCTION_TITLE — enw_priors","text":"RETURN_DESCRIPTION","code":""},{"path":[]},{"path":"epiforecasts.io/epinowcast/dev/reference/enw_priors.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"FUNCTION_TITLE — enw_priors","text":"","code":"enw_priors() #>       variable #> 1:    eobs_lsd #> 2: logmean_int #> 3:   logsd_int #> 4:  logmean_sd #> 5:    logsd_sd #> 6:   rd_eff_sd #> 7:    sqrt_phi #> 8:   alpha_int #> 9:    alpha_sd #>                                                                               description #> 1:                                     Standard deviation for expected final observations #> 2:                                            Log mean intercept for reference date delay #> 3:                                    Log standard deviation for the reference date delay #> 4:                                    Standard deviation of scaled pooled logmean effects #> 5:                                      Standard deviation of scaled pooled logsd effects #> 6:                                Standard deviation of scaled pooled report date effects #> 7:                                    One over the square of the reporting overdispersion #> 8:                         Logit start value for share of cases with known reference date #> 9: Standard deviation of random walk for share of cases with known\\n       reference date #>             distribution mean  sd #> 1: Zero truncated normal  0.0 1.0 #> 2:                Normal  1.0 1.0 #> 3: Zero truncated normal  0.5 1.0 #> 4: Zero truncated normal  0.0 1.0 #> 5: Zero truncated normal  0.0 1.0 #> 6: Zero truncated normal  0.0 1.0 #> 7: Zero truncated normal  0.0 1.0 #> 8:                Normal  0.0 1.0 #> 9: Zero truncated normal  0.0 0.1"},{"path":"epiforecasts.io/epinowcast/dev/reference/enw_priors_as_data_list.html","id":null,"dir":"Reference","previous_headings":"","what":"FUNCTION_TITLE — enw_priors_as_data_list","title":"FUNCTION_TITLE — enw_priors_as_data_list","text":"FUNCTION_DESCRIPTION","code":""},{"path":"epiforecasts.io/epinowcast/dev/reference/enw_priors_as_data_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"FUNCTION_TITLE — enw_priors_as_data_list","text":"","code":"enw_priors_as_data_list(priors)"},{"path":"epiforecasts.io/epinowcast/dev/reference/enw_priors_as_data_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"FUNCTION_TITLE — enw_priors_as_data_list","text":"priors DESCRIPTION.","code":""},{"path":"epiforecasts.io/epinowcast/dev/reference/enw_priors_as_data_list.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"FUNCTION_TITLE — enw_priors_as_data_list","text":"RETURN_DESCRIPTION","code":""},{"path":[]},{"path":"epiforecasts.io/epinowcast/dev/reference/enw_priors_as_data_list.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"FUNCTION_TITLE — enw_priors_as_data_list","text":"","code":"priors <- enw_priors() enw_priors_as_data_list(priors) #> $eobs_lsd_p #> [1] 0 1 #>  #> $logmean_int_p #> [1] 1 1 #>  #> $logsd_int_p #> [1] 0.5 1.0 #>  #> $logmean_sd_p #> [1] 0 1 #>  #> $logsd_sd_p #> [1] 0 1 #>  #> $rd_eff_sd_p #> [1] 0 1 #>  #> $sqrt_phi_p #> [1] 0 1 #>  #> $alpha_int_p #> [1] 0 1 #>  #> $alpha_sd_p #> [1] 0.0 0.1 #>"},{"path":"epiforecasts.io/epinowcast/dev/reference/enw_quantiles_to_long.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert summarised quantiles from wide to long format — enw_quantiles_to_long","title":"Convert summarised quantiles from wide to long format — enw_quantiles_to_long","text":"Convert summarised quantiles wide long format","code":""},{"path":"epiforecasts.io/epinowcast/dev/reference/enw_quantiles_to_long.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert summarised quantiles from wide to long format — enw_quantiles_to_long","text":"","code":"enw_quantiles_to_long(posterior)"},{"path":"epiforecasts.io/epinowcast/dev/reference/enw_quantiles_to_long.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert summarised quantiles from wide to long format — enw_quantiles_to_long","text":"posterior dataframe output enw_posterior().","code":""},{"path":"epiforecasts.io/epinowcast/dev/reference/enw_quantiles_to_long.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert summarised quantiles from wide to long format — enw_quantiles_to_long","text":"data frame quantiles long format.","code":""},{"path":[]},{"path":"epiforecasts.io/epinowcast/dev/reference/enw_reporting_triangle.html","id":null,"dir":"Reference","previous_headings":"","what":"Construct the reporting triangle — enw_reporting_triangle","title":"Construct the reporting triangle — enw_reporting_triangle","text":"Constructs reporting triangle row representing reference date columns observations report date","code":""},{"path":"epiforecasts.io/epinowcast/dev/reference/enw_reporting_triangle.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Construct the reporting triangle — enw_reporting_triangle","text":"","code":"enw_reporting_triangle(obs)"},{"path":"epiforecasts.io/epinowcast/dev/reference/enw_reporting_triangle.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Construct the reporting triangle — enw_reporting_triangle","text":"obs data frame produced enw_new_reports(). Must contain following variables: reference_date, .group, delay.","code":""},{"path":"epiforecasts.io/epinowcast/dev/reference/enw_reporting_triangle.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Construct the reporting triangle — enw_reporting_triangle","text":"data frame row reference date, columns observations reporting delay.","code":""},{"path":[]},{"path":"epiforecasts.io/epinowcast/dev/reference/enw_reporting_triangle.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Construct the reporting triangle — enw_reporting_triangle","text":"","code":"obs <- enw_example(\"preprocessed\")$new_confirm enw_reporting_triangle(obs) #>     .group reference_date  0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 #>  1:      1     2021-07-13 21 12  3  4  3  0  1  2  4  3  0  0  2  0  0  0  1  2 #>  2:      1     2021-07-14 22 12  4  5  0  1 10  2  5  3  0  1  0  3  1  0  1  0 #>  3:      1     2021-07-15 28 15  3  3  0  1  3  2  3  2  1  0  2  3  0  3  0  0 #>  4:      1     2021-07-16 19 13  0  0  0  4  2  2  2  1  1  1  0  1  0  0  1  0 #>  5:      1     2021-07-17 20  7  1  3 10  3  0  4  3  3  2  0  1  2  0  1  2  1 #>  6:      1     2021-07-18  9  6  6  0  4  5  4  0  1  4  0  0  1  1  1  2  0  0 #>  7:      1     2021-07-19  3 16  4  4  1  1  2  0  0  0  0  1  1  1  1  0  0  0 #>  8:      1     2021-07-20 36 19 10  4  2  3  0  3  2  3  0  2  1  1  2  2  0  0 #>  9:      1     2021-07-21 28 18  8  4  1  2  3  6  1  5  2  2  3  0  2  0  1  0 #> 10:      1     2021-07-22 34 19  2  1  5  2  4  3  7  3  1  0  4  3  3  1  2  0 #> 11:      1     2021-07-23 30 12  4  1 10  6  0  2  2  1  2  1  4  0  2  3  0  0 #> 12:      1     2021-07-24 31  8  4  9  8  2  5  2  1  1  2  4  1  3  1  0  1  2 #> 13:      1     2021-07-25  8  4 14  8  6  5  1  3  0  4  1  2  4  2  0  1  2  2 #> 14:      1     2021-07-26  9  6  2  3  0  0  0  0  1  2  4  1  0  0  0  0  0  0 #> 15:      1     2021-07-27 35 11  6  4  4  1  0  2  2  2  2  0  0  1  4  1  0  0 #> 16:      1     2021-07-28 51 28 25  3  5  2  3  5  5  7  1  0  0  4  5  5  1  1 #> 17:      1     2021-07-29 47 37  9  2  2  3  4  4  4  3  0  2  0 10  4  3  0  0 #> 18:      1     2021-07-30 36 20  2  4 11  8  8  3  5  2  0  2  4  4  0  2  2  0 #> 19:      1     2021-07-31 38 16  3 15 14  7  5  5  0  0  5  0  5  1  6  0  0  3 #> 20:      1     2021-08-01  7  5  5 11  7  5  1  3  1  6  3  3  4  1  1  7  2  3 #> 21:      1     2021-08-02 13 13  8  6  1  3  2  0  0  2  0  2  0  5  3  0  0  0 #> 22:      1     2021-08-03 51 43  6  4  4  3  1  6  4  5  5  4  0  4  5  0  2  2 #> 23:      1     2021-08-04 51 43 18  5  6  1  2  8  7  7  6  1  0  4  3  1  3  0 #> 24:      1     2021-08-05 45 21  6  2  2 11 17  5  7  4  1  0  5  3  0  2  2  0 #> 25:      1     2021-08-06 47 31  5  4 20  6  1  9  3  1  0  2  1  5  2  0  0  0 #> 26:      1     2021-08-07 40 15  6 23 14 13  8  9  0  1  3  3  2  0  1  1  0  0 #> 27:      1     2021-08-08 13 14 27 14  7  7  0  0  0  7  1  4  2  1  0  0  0  0 #> 28:      1     2021-08-09 14 23 11  3  1  1  0  0  0  1  0  2  2  0  0  0  0  0 #> 29:      1     2021-08-10 78 43 23 11  5  1  0  5  2  2  1  4  0  0  0  0  0  0 #> 30:      1     2021-08-11 80 53 17 15  7  3 14 12 13 13  6  0  0  0  0  0  0  0 #> 31:      1     2021-08-12 89 48 28  8  1 14 13 13 10 12  1  0  0  0  0  0  0  0 #> 32:      1     2021-08-13 86 44  9  3 27 13  7 11  4  0  0  0  0  0  0  0  0  0 #> 33:      1     2021-08-14 79 36  7 16 19 13  8  8  3  0  0  0  0  0  0  0  0  0 #> 34:      1     2021-08-15 22 24 35 18 10  4  7  5  0  0  0  0  0  0  0  0  0  0 #> 35:      1     2021-08-16 23 32 22 10  8  2  1  0  0  0  0  0  0  0  0  0  0  0 #> 36:      1     2021-08-17 96 85 30 18 10  3  0  0  0  0  0  0  0  0  0  0  0  0 #> 37:      1     2021-08-18 92 86 23 18  4  0  0  0  0  0  0  0  0  0  0  0  0  0 #> 38:      1     2021-08-19 84 87 27  4  0  0  0  0  0  0  0  0  0  0  0  0  0  0 #> 39:      1     2021-08-20 98 61 12  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0 #> 40:      1     2021-08-21 69 43  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0 #> 41:      1     2021-08-22 45  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0 #>     .group reference_date  0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 #>     18 19 #>  1:  1  0 #>  2:  0  2 #>  3:  0  0 #>  4:  0  0 #>  5:  0  2 #>  6:  0  6 #>  7:  1  0 #>  8:  1  3 #>  9:  0  5 #> 10:  0  5 #> 11:  4  2 #> 12:  2  6 #> 13:  2  5 #> 14:  0  0 #> 15:  0  3 #> 16:  0  5 #> 17:  0  1 #> 18:  0  1 #> 19:  1  2 #> 20:  2  0 #> 21:  0  1 #> 22:  0  0 #> 23:  0  0 #> 24:  0  0 #> 25:  0  0 #> 26:  0  0 #> 27:  0  0 #> 28:  0  0 #> 29:  0  0 #> 30:  0  0 #> 31:  0  0 #> 32:  0  0 #> 33:  0  0 #> 34:  0  0 #> 35:  0  0 #> 36:  0  0 #> 37:  0  0 #> 38:  0  0 #> 39:  0  0 #> 40:  0  0 #> 41:  0  0 #>     18 19"},{"path":"epiforecasts.io/epinowcast/dev/reference/enw_reporting_triangle_to_long.html","id":null,"dir":"Reference","previous_headings":"","what":"Recast the reporting triangle from wide to long format — enw_reporting_triangle_to_long","title":"Recast the reporting triangle from wide to long format — enw_reporting_triangle_to_long","text":"Recast reporting triangle wide long format","code":""},{"path":"epiforecasts.io/epinowcast/dev/reference/enw_reporting_triangle_to_long.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Recast the reporting triangle from wide to long format — enw_reporting_triangle_to_long","text":"","code":"enw_reporting_triangle_to_long(obs)"},{"path":"epiforecasts.io/epinowcast/dev/reference/enw_reporting_triangle_to_long.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Recast the reporting triangle from wide to long format — enw_reporting_triangle_to_long","text":"obs dataframe format produced enw_reporting_triangle().","code":""},{"path":"epiforecasts.io/epinowcast/dev/reference/enw_reporting_triangle_to_long.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Recast the reporting triangle from wide to long format — enw_reporting_triangle_to_long","text":"long format reporting triangle data frame additional variables new_confirm delay.","code":""},{"path":[]},{"path":"epiforecasts.io/epinowcast/dev/reference/enw_reporting_triangle_to_long.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Recast the reporting triangle from wide to long format — enw_reporting_triangle_to_long","text":"","code":"obs <- enw_example(\"preprocessed\")$new_confirm rt <- enw_reporting_triangle(obs) enw_reporting_triangle_to_long(rt) #>      reference_date .group delay new_confirm #>   1:     2021-07-13      1     0          21 #>   2:     2021-07-13      1     1          12 #>   3:     2021-07-13      1     2           3 #>   4:     2021-07-13      1     3           4 #>   5:     2021-07-13      1     4           3 #>  ---                                         #> 816:     2021-08-22      1    15           0 #> 817:     2021-08-22      1    16           0 #> 818:     2021-08-22      1    17           0 #> 819:     2021-08-22      1    18           0 #> 820:     2021-08-22      1    19           0"},{"path":"epiforecasts.io/epinowcast/dev/reference/enw_sample.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit a CmdStan model using NUTS — enw_sample","title":"Fit a CmdStan model using NUTS — enw_sample","text":"Fit CmdStan model using NUTS","code":""},{"path":"epiforecasts.io/epinowcast/dev/reference/enw_sample.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit a CmdStan model using NUTS — enw_sample","text":"","code":"enw_sample(data, model = epinowcast::enw_model(), diagnostics = TRUE, ...)"},{"path":"epiforecasts.io/epinowcast/dev/reference/enw_sample.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit a CmdStan model using NUTS — enw_sample","text":"data list data produced enw_as_data_list(). model cmdstanr model object loaded enw_model(). diagnostics Logical, defaults TRUE. fitting diagnostics returned data.frame. ... Additional parameters passed sample method cmdstanr.","code":""},{"path":"epiforecasts.io/epinowcast/dev/reference/enw_sample.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fit a CmdStan model using NUTS — enw_sample","text":"data.frame containing cmdstanr fit, input data, fitting arguments, optionally summary diagnostics.","code":""},{"path":[]},{"path":"epiforecasts.io/epinowcast/dev/reference/enw_score_nowcast.html","id":null,"dir":"Reference","previous_headings":"","what":"Evaluate nowcasts using proper scoring rules — enw_score_nowcast","title":"Evaluate nowcasts using proper scoring rules — enw_score_nowcast","text":"Acts wrapper scoringutils::score(). particular, handling filtering nowcast summary output linking output observed data. See documentation scoringutils package forecast scoring.","code":""},{"path":"epiforecasts.io/epinowcast/dev/reference/enw_score_nowcast.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Evaluate nowcasts using proper scoring rules — enw_score_nowcast","text":"","code":"enw_score_nowcast(   nowcast,   latest_obs,   log = FALSE,   check = FALSE,   round_to = 3,   ... )"},{"path":"epiforecasts.io/epinowcast/dev/reference/enw_score_nowcast.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Evaluate nowcasts using proper scoring rules — enw_score_nowcast","text":"nowcast posterior nowcast posterior prediction returned summary.epinowcast(), used output epinowcast(). latest_obs data frame latest available observations produced enw_latest_data() otherwise. log Logical, defaults FALSE. scores calculated log scale (0.01 shift) observations nowcasts. Scoring way can thought relative score vs usual absolute measure. may useful targets different scales forecaster interested good round performance versus good performance targets large values. check Logical, defaults FALSE. scoringutils::check_forecasts() used check input nowcasts. round_to Integer defaults 3. Number digits round scoring output . ... Additional arguments passed scoringutils::score().","code":""},{"path":"epiforecasts.io/epinowcast/dev/reference/enw_score_nowcast.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Evaluate nowcasts using proper scoring rules — enw_score_nowcast","text":"data.table returned scoringutils::score().","code":""},{"path":"epiforecasts.io/epinowcast/dev/reference/enw_score_nowcast.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Evaluate nowcasts using proper scoring rules — enw_score_nowcast","text":"","code":"if (FALSE) { # interactive() library(data.table) library(scoringutils)  # Summarise example nowcast nowcast <- enw_example(\"nowcast\") summarised_nowcast <- summary(nowcast)  # Load latest available observations obs <- enw_example(\"observations\")  # Keep the last 7 days of data obs <- obs[reference_date > (max(reference_date) - 7)]  # score on the absolute scale scores <- enw_score_nowcast(summarised_nowcast, obs) summarise_scores(scores, by = \"location\")  # score overall on a log scale log_scores <- enw_score_nowcast(summarised_nowcast, obs, log = TRUE) summarise_scores(log_scores, by = \"location\") }"},{"path":"epiforecasts.io/epinowcast/dev/reference/enw_summarise_samples.html","id":null,"dir":"Reference","previous_headings":"","what":"FUNCTION_TITLE — enw_summarise_samples","title":"FUNCTION_TITLE — enw_summarise_samples","text":"FUNCTION_DESCRIPTION","code":""},{"path":"epiforecasts.io/epinowcast/dev/reference/enw_summarise_samples.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"FUNCTION_TITLE — enw_summarise_samples","text":"","code":"enw_summarise_samples(   samples,   probs = c(0.05, 0.2, 0.35, 0.5, 0.65, 0.8, 0.95),   by = c(\"reference_date\", \".group\") )"},{"path":"epiforecasts.io/epinowcast/dev/reference/enw_summarise_samples.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"FUNCTION_TITLE — enw_summarise_samples","text":"samples DESCRIPTION. probs PARAM_DESCRIPTION, Default: c(0.05, 0.2, 0.35, 0.5, 0.65, 0.8, 0.95) DESCRIPTION","code":""},{"path":"epiforecasts.io/epinowcast/dev/reference/enw_summarise_samples.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"FUNCTION_TITLE — enw_summarise_samples","text":"RETURN_DESCRIPTION","code":""},{"path":[]},{"path":"epiforecasts.io/epinowcast/dev/reference/epinowcast-package.html","id":null,"dir":"Reference","previous_headings":"","what":"epinowcast: Flexible Hierarchical Nowcasting — epinowcast-package","title":"epinowcast: Flexible Hierarchical Nowcasting — epinowcast-package","text":"Tools enable flexible efficient hierarchical nowcasting right-truncated epidemiological time-series using semi-mechanistic Bayesian model support range reporting generative processes. Nowcasting, context, gaining situational awareness using currently available observations reporting patterns historical observations. can useful tracking spread infectious disease real-time: without nowcasting, changes trends can obfuscated partial reporting detection may delayed due use simpler methods like truncation. package designed epidemiological applications mind, applied set right-truncated time-series count data.","code":""},{"path":[]},{"path":"epiforecasts.io/epinowcast/dev/reference/epinowcast-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"epinowcast: Flexible Hierarchical Nowcasting — epinowcast-package","text":"Maintainer: Sam Abbott sam.abbott@lshtm.ac.uk (ORCID) Authors: Adrian Lison adrian.lison@bsse.ethz.ch (ORCID) Sebastian Funk sebastian.funk@lshtm.ac.uk contributors: Michael DeWitt .dewitt.jr@gmail.com (ORCID) [contributor]","code":""},{"path":"epiforecasts.io/epinowcast/dev/reference/epinowcast.html","id":null,"dir":"Reference","previous_headings":"","what":"Nowcast using partially observed data — epinowcast","title":"Nowcast using partially observed data — epinowcast","text":"Provides user friendly interface around package functionality produce nowcast observed preprocessed data, reference model, report model.","code":""},{"path":"epiforecasts.io/epinowcast/dev/reference/epinowcast.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Nowcast using partially observed data — epinowcast","text":"","code":"epinowcast(   pobs,   reference_effects = epinowcast::enw_formula(~1, pobs$metareference[[1]]),   report_effects = epinowcast::enw_formula(~1, pobs$metareport[[1]]),   priors = epinowcast::enw_priors(),   distribution = \"lognormal\",   model = epinowcast::enw_model(),   as_data_list = epinowcast::enw_as_data_list,   inits = epinowcast::enw_inits,   fit = epinowcast::enw_sample,   nowcast = TRUE,   pp = FALSE,   likelihood = TRUE,   debug = FALSE,   output_loglik = FALSE,   ... )"},{"path":"epiforecasts.io/epinowcast/dev/reference/epinowcast.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Nowcast using partially observed data — epinowcast","text":"pobs Output enw_preprocess_data(). reference_effects list fixed random design matrices defining date reference model. Defaults enw_manual_formula() intercept model. report_effects list fixed random design matrices defining date reports model. Defaults enw_manual_formula() intercept model. priors DESCRIPTION. distribution Character string indicating type distribution use reference date effects. default use lognormal options available include exponential gamma distributions. \"none\" specified parametric delay distribution used. model cmdstanr model object loaded enw_model(). as_data_list PARAM_DESCRIPTION inits PARAM DESCRIPTION fit PARAM DESCRIPTION nowcast Logical, defaults TRUE. nowcast made using posterior predictions unobserved future reported notifications. pp Logical, defaults FALSE. posterior predictions made observed data. Useful evaluating performance model. likelihood Logical, defaults TRUE. likelihood included model debug Logical, defaults FALSE. within model debug information returned. output_loglik Logical, defaults FALSE. log-likelihood output. Disabling speed fitting evaluating model fit required. ... Additional arguments passed enw_sample().","code":""},{"path":"epiforecasts.io/epinowcast/dev/reference/epinowcast.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Nowcast using partially observed data — epinowcast","text":"OUTPUT_DESCRIPTION","code":""},{"path":[]},{"path":"epiforecasts.io/epinowcast/dev/reference/expose_stan_fns.html","id":null,"dir":"Reference","previous_headings":"","what":"Expose stan functions in R — expose_stan_fns","title":"Expose stan functions in R — expose_stan_fns","text":"function builds top rstan::expose_stan_functions() order facilitate exposing package functions R internal use, testing, exploration. Crucially performs conversion package cmdstan stan code rstan compatible stan code. generally recommended users make use function apart exploring package functionality.","code":""},{"path":"epiforecasts.io/epinowcast/dev/reference/expose_stan_fns.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Expose stan functions in R — expose_stan_fns","text":"","code":"expose_stan_fns(files, target_dir, ...)"},{"path":"epiforecasts.io/epinowcast/dev/reference/expose_stan_fns.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Expose stan functions in R — expose_stan_fns","text":"files character vector file names target_dir character string giving directory files can found. ... Arguments pass rstan::expose_stan_functions()","code":""},{"path":"epiforecasts.io/epinowcast/dev/reference/expose_stan_fns.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Expose stan functions in R — expose_stan_fns","text":"NULL (indivisibly)","code":""},{"path":[]},{"path":"epiforecasts.io/epinowcast/dev/reference/germany_covid19_hosp.html","id":null,"dir":"Reference","previous_headings":"","what":"Hospitalisations in Germany by date of report and reference — germany_covid19_hosp","title":"Hospitalisations in Germany by date of report and reference — germany_covid19_hosp","text":"Hospitalisations Germany date report reference","code":""},{"path":"epiforecasts.io/epinowcast/dev/reference/germany_covid19_hosp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Hospitalisations in Germany by date of report and reference — germany_covid19_hosp","text":"","code":"germany_covid19_hosp"},{"path":"epiforecasts.io/epinowcast/dev/reference/germany_covid19_hosp.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Hospitalisations in Germany by date of report and reference — germany_covid19_hosp","text":"object class data.table (inherits data.frame) 1536885 rows 5 columns.","code":""},{"path":"epiforecasts.io/epinowcast/dev/reference/germany_covid19_hosp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Hospitalisations in Germany by date of report and reference — germany_covid19_hosp","text":"data.table","code":""},{"path":[]},{"path":"epiforecasts.io/epinowcast/dev/reference/is.Date.html","id":null,"dir":"Reference","previous_headings":"","what":"FUNCTION_TITLE — is.Date","title":"FUNCTION_TITLE — is.Date","text":"FUNCTION_DESCRIPTION","code":""},{"path":"epiforecasts.io/epinowcast/dev/reference/is.Date.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"FUNCTION_TITLE — is.Date","text":"","code":"is.Date(x)"},{"path":"epiforecasts.io/epinowcast/dev/reference/is.Date.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"FUNCTION_TITLE — is.Date","text":"x PARAM_DESCRIPTION","code":""},{"path":"epiforecasts.io/epinowcast/dev/reference/is.Date.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"FUNCTION_TITLE — is.Date","text":"OUTPUT_DESCRIPTION","code":""},{"path":[]},{"path":"epiforecasts.io/epinowcast/dev/reference/parse_formula.html","id":null,"dir":"Reference","previous_headings":"","what":"Parse a formula into components — parse_formula","title":"Parse a formula into components — parse_formula","text":"function uses series internal functions break input formula component parts can handled separately. Currently supported components fixed effects, lme4 style random effects, random walks using rw() helper function.","code":""},{"path":"epiforecasts.io/epinowcast/dev/reference/parse_formula.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parse a formula into components — parse_formula","text":"","code":"parse_formula(formula)"},{"path":"epiforecasts.io/epinowcast/dev/reference/parse_formula.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parse a formula into components — parse_formula","text":"formula model formula may use standard fixed effects, random effects using lme4 syntax (see re()), random walks defined using rw() helper function.","code":""},{"path":"epiforecasts.io/epinowcast/dev/reference/parse_formula.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Parse a formula into components — parse_formula","text":"list formula components. currently include: fixed: character vector fixed effect terms random: list lme4 style random effects rw: character vector rw() random walk terms.","code":""},{"path":"epiforecasts.io/epinowcast/dev/reference/parse_formula.html","id":"reference","dir":"Reference","previous_headings":"","what":"Reference","title":"Parse a formula into components — parse_formula","text":"random walk functions used internally function adapted code written J Scott (MIT license) part epidemia package (https://github.com/ImperialCollegeLondon/epidemia/).","code":""},{"path":[]},{"path":"epiforecasts.io/epinowcast/dev/reference/parse_formula.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Parse a formula into components — parse_formula","text":"","code":"epinowcast:::parse_formula(~ 1 + age_group + location) #> $fixed #> [1] \"1\"         \"age_group\" \"location\"  #>  #> $random #> NULL #>  #> $rw #> character(0) #>   epinowcast:::parse_formula(~ 1 + age_group + (1 | location)) #> $fixed #> [1] \"1\"         \"age_group\" #>  #> $random #> $random[[1]] #> 1 | location #>  #>  #> $rw #> character(0) #>   epinowcast:::parse_formula(~ 1 + (age_group | location)) #> $fixed #> [1] \"1\" #>  #> $random #> $random[[1]] #> age_group | location #>  #>  #> $rw #> character(0) #>   epinowcast:::parse_formula(~ 1 + (1 | location) + rw(week, location)) #> $fixed #> [1] \"1\" #>  #> $random #> $random[[1]] #> 1 | location #>  #>  #> $rw #> [1] \"rw(week, location)\" #>"},{"path":"epiforecasts.io/epinowcast/dev/reference/plot.epinowcast.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot method for epinowcast — plot.epinowcast","title":"Plot method for epinowcast — plot.epinowcast","text":"plot method class \"epinowcast\".","code":""},{"path":"epiforecasts.io/epinowcast/dev/reference/plot.epinowcast.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot method for epinowcast — plot.epinowcast","text":"","code":"# S3 method for epinowcast plot(x, latest_obs = NULL, type = \"nowcast\", log = FALSE, ...)"},{"path":"epiforecasts.io/epinowcast/dev/reference/plot.epinowcast.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot method for epinowcast — plot.epinowcast","text":"x data.table output produced epinowcast(). latest_obs data.frame observed data may passed lower level methods. type character string indicating type plot required. Currently supported options \"nowcast\" plots nowcast dataset along latest available observed data (using enw_plot_nowcast_quantiles()), \"posterior_prediction\" plots observations reported time simulated observations  model (using enw_plot_pp_quantiles()). log Logical, defaults FALSE. counts plot log scale. ... Pass additional arguments lower level plot functions.","code":""},{"path":"epiforecasts.io/epinowcast/dev/reference/plot.epinowcast.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot method for epinowcast — plot.epinowcast","text":"ggplot2 object","code":""},{"path":[]},{"path":"epiforecasts.io/epinowcast/dev/reference/re.html","id":null,"dir":"Reference","previous_headings":"","what":"Defines random effect terms using the lme4 syntax — re","title":"Defines random effect terms using the lme4 syntax — re","text":"Defines random effect terms using lme4 syntax","code":""},{"path":"epiforecasts.io/epinowcast/dev/reference/re.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Defines random effect terms using the lme4 syntax — re","text":"","code":"re(formula)"},{"path":"epiforecasts.io/epinowcast/dev/reference/re.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Defines random effect terms using the lme4 syntax — re","text":"formula random effect returned lme4::findbars() random effect defined using lme4 syntax formula. Currently simplified random effects (.e LHS | RHS) supported.","code":""},{"path":"epiforecasts.io/epinowcast/dev/reference/re.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Defines random effect terms using the lme4 syntax — re","text":"list defining fixed random effects specified random effect","code":""},{"path":[]},{"path":"epiforecasts.io/epinowcast/dev/reference/re.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Defines random effect terms using the lme4 syntax — re","text":"","code":"form <- epinowcast:::parse_formula(~ 1 + (1 | age_group)) re(form$random[[1]]) #> $fixed #> [1] \"1\" #>  #> $random #> [1] \"age_group\" #>  #> attr(,\"class\") #> [1] \"enw_re_term\"  form <- epinowcast:::parse_formula(~ 1 + (location | age_group)) re(form$random[[1]]) #> $fixed #> [1] \"location\" #>  #> $random #> [1] \"age_group\" #>  #> attr(,\"class\") #> [1] \"enw_re_term\""},{"path":"epiforecasts.io/epinowcast/dev/reference/remove_profiling.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove profiling statements from a character vector representing stan code — remove_profiling","title":"Remove profiling statements from a character vector representing stan code — remove_profiling","text":"Remove profiling statements character vector representing stan code","code":""},{"path":"epiforecasts.io/epinowcast/dev/reference/remove_profiling.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove profiling statements from a character vector representing stan code — remove_profiling","text":"","code":"remove_profiling(s)"},{"path":"epiforecasts.io/epinowcast/dev/reference/remove_profiling.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove profiling statements from a character vector representing stan code — remove_profiling","text":"s Character vector representing stan code","code":""},{"path":"epiforecasts.io/epinowcast/dev/reference/remove_profiling.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove profiling statements from a character vector representing stan code — remove_profiling","text":"character vector stan code without profiling statements","code":""},{"path":[]},{"path":"epiforecasts.io/epinowcast/dev/reference/remove_rw_terms.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove random walk terms from a formula object — remove_rw_terms","title":"Remove random walk terms from a formula object — remove_rw_terms","text":"function removes random walk terms denoted using rw() formula can processed .","code":""},{"path":"epiforecasts.io/epinowcast/dev/reference/remove_rw_terms.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove random walk terms from a formula object — remove_rw_terms","text":"","code":"remove_rw_terms(formula)"},{"path":"epiforecasts.io/epinowcast/dev/reference/remove_rw_terms.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove random walk terms from a formula object — remove_rw_terms","text":"formula model formula may use standard fixed effects, random effects using lme4 syntax (see re()), random walks defined using rw() helper function.","code":""},{"path":"epiforecasts.io/epinowcast/dev/reference/remove_rw_terms.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove random walk terms from a formula object — remove_rw_terms","text":"RETURN_DESCRIPTION","code":""},{"path":"epiforecasts.io/epinowcast/dev/reference/remove_rw_terms.html","id":"reference","dir":"Reference","previous_headings":"","what":"Reference","title":"Remove random walk terms from a formula object — remove_rw_terms","text":"function adapted code written J Scott (MIT license) part epidemia package (https://github.com/ImperialCollegeLondon/epidemia/).","code":""},{"path":[]},{"path":"epiforecasts.io/epinowcast/dev/reference/remove_rw_terms.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Remove random walk terms from a formula object — remove_rw_terms","text":"","code":"epinowcast:::remove_rw_terms(~ 1 + age_group + location) #> ~1 + age_group + location #> <environment: 0x7f8f9039d518>  epinowcast:::remove_rw_terms(~ 1 + age_group + location + rw(week, location)) #> ~1 + age_group + location #> <environment: 0x7f8f9032dc18>"},{"path":"epiforecasts.io/epinowcast/dev/reference/rw.html","id":null,"dir":"Reference","previous_headings":"","what":"Adds random walks with Gaussian steps to the model. — rw","title":"Adds random walks with Gaussian steps to the model. — rw","text":"call rw() can used 'formula' argument model construction functions epinowcast package enw_formula(). evaluate arguments instead simply passes information use model construction.","code":""},{"path":"epiforecasts.io/epinowcast/dev/reference/rw.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Adds random walks with Gaussian steps to the model. — rw","text":"","code":"rw(time, by, type = \"independent\")"},{"path":"epiforecasts.io/epinowcast/dev/reference/rw.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Adds random walks with Gaussian steps to the model. — rw","text":"time Defines random walk time period. Defines grouping parameter used random walk. specified grouping used. Currently limited single variable. type Character string, defaults \"independent\". standard deviation grouped random walks estimated. Currently can set independent dependent across groups.","code":""},{"path":"epiforecasts.io/epinowcast/dev/reference/rw.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Adds random walks with Gaussian steps to the model. — rw","text":"list defining time frame, group, type class \"enw_rw_term\" can interpreted construct_rw().","code":""},{"path":[]},{"path":"epiforecasts.io/epinowcast/dev/reference/rw.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Adds random walks with Gaussian steps to the model. — rw","text":"","code":"rw(time) #> $time #> [1] \"time\" #>  #> $by #> NULL #>  #> $type #> [1] \"independent\" #>  #> attr(,\"class\") #> [1] \"enw_rw_term\"  rw(time, location) #> $time #> [1] \"time\" #>  #> $by #> [1] \"location\" #>  #> $type #> [1] \"independent\" #>  #> attr(,\"class\") #> [1] \"enw_rw_term\"  rw(time, location, type = \"dependent\") #> $time #> [1] \"time\" #>  #> $by #> [1] \"location\" #>  #> $type #> [1] \"dependent\" #>  #> attr(,\"class\") #> [1] \"enw_rw_term\""},{"path":"epiforecasts.io/epinowcast/dev/reference/rw_terms.html","id":null,"dir":"Reference","previous_headings":"","what":"Finds random walk terms in a formula object — rw_terms","title":"Finds random walk terms in a formula object — rw_terms","text":"function extracts random walk terms denoted using rw() formula can processed .","code":""},{"path":"epiforecasts.io/epinowcast/dev/reference/rw_terms.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Finds random walk terms in a formula object — rw_terms","text":"","code":"rw_terms(formula)"},{"path":"epiforecasts.io/epinowcast/dev/reference/rw_terms.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Finds random walk terms in a formula object — rw_terms","text":"formula model formula may use standard fixed effects, random effects using lme4 syntax (see re()), random walks defined using rw() helper function.","code":""},{"path":"epiforecasts.io/epinowcast/dev/reference/rw_terms.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Finds random walk terms in a formula object — rw_terms","text":"character vector containing random walk terms identified supplied formula.","code":""},{"path":"epiforecasts.io/epinowcast/dev/reference/rw_terms.html","id":"reference","dir":"Reference","previous_headings":"","what":"Reference","title":"Finds random walk terms in a formula object — rw_terms","text":"function adapted code written J Scott (MIT license) part epidemia package (https://github.com/ImperialCollegeLondon/epidemia/).","code":""},{"path":[]},{"path":"epiforecasts.io/epinowcast/dev/reference/rw_terms.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Finds random walk terms in a formula object — rw_terms","text":"","code":"epinowcast:::rw_terms(~ 1 + age_group + location) #> character(0)  epinowcast:::rw_terms(~ 1 + age_group + location + rw(week, location)) #> [1] \"rw(week, location)\""},{"path":"epiforecasts.io/epinowcast/dev/reference/split_formula_to_terms.html","id":null,"dir":"Reference","previous_headings":"","what":"Split formula into individual terms — split_formula_to_terms","title":"Split formula into individual terms — split_formula_to_terms","text":"Split formula individual terms","code":""},{"path":"epiforecasts.io/epinowcast/dev/reference/split_formula_to_terms.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Split formula into individual terms — split_formula_to_terms","text":"","code":"split_formula_to_terms(formula)"},{"path":"epiforecasts.io/epinowcast/dev/reference/split_formula_to_terms.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Split formula into individual terms — split_formula_to_terms","text":"formula model formula may use standard fixed effects, random effects using lme4 syntax (see re()), random walks defined using rw() helper function.","code":""},{"path":"epiforecasts.io/epinowcast/dev/reference/split_formula_to_terms.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Split formula into individual terms — split_formula_to_terms","text":"character vector formula terms","code":""},{"path":[]},{"path":"epiforecasts.io/epinowcast/dev/reference/split_formula_to_terms.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Split formula into individual terms — split_formula_to_terms","text":"","code":"epinowcast:::split_formula_to_terms(~ 1 + age_group + location) #> [1] \"1\"         \"age_group\" \"location\""},{"path":"epiforecasts.io/epinowcast/dev/reference/stan_fns_as_string.html","id":null,"dir":"Reference","previous_headings":"","what":"Read in a stan function file as a character string — stan_fns_as_string","title":"Read in a stan function file as a character string — stan_fns_as_string","text":"Read stan function file character string","code":""},{"path":"epiforecasts.io/epinowcast/dev/reference/stan_fns_as_string.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read in a stan function file as a character string — stan_fns_as_string","text":"","code":"stan_fns_as_string(files, target_dir)"},{"path":"epiforecasts.io/epinowcast/dev/reference/stan_fns_as_string.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read in a stan function file as a character string — stan_fns_as_string","text":"files character vector file names target_dir character string giving directory files can found.","code":""},{"path":"epiforecasts.io/epinowcast/dev/reference/stan_fns_as_string.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read in a stan function file as a character string — stan_fns_as_string","text":"character string stan functions.","code":""},{"path":[]},{"path":"epiforecasts.io/epinowcast/dev/reference/summary.epinowcast.html","id":null,"dir":"Reference","previous_headings":"","what":"Summary method for epinowcast — summary.epinowcast","title":"Summary method for epinowcast — summary.epinowcast","text":"summary method class \"epinowcast\".","code":""},{"path":"epiforecasts.io/epinowcast/dev/reference/summary.epinowcast.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summary method for epinowcast — summary.epinowcast","text":"","code":"# S3 method for epinowcast summary(object, type = \"nowcast\", ...)"},{"path":"epiforecasts.io/epinowcast/dev/reference/summary.epinowcast.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summary method for epinowcast — summary.epinowcast","text":"object data.table output epinowcast(). type character string indicating type summary return. Currently supported options \"nowcast\" summaries nowcast posterior using enw_nowcast_summary(), \"nowcast_samples\" returns posterior samples recent nowcast, \"fit\" returns summarised cmdstanr fit using enw_posterior(), \"posterior_prediction\" returns summarised posterior predictions observations used fitting (using enw_pp_summary()). ... Pass additional arguments summary functions.","code":""},{"path":"epiforecasts.io/epinowcast/dev/reference/summary.epinowcast.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summary method for epinowcast — summary.epinowcast","text":"summary data.frame","code":""},{"path":[]},{"path":"epiforecasts.io/epinowcast/dev/reference/write_stan_files_no_profile.html","id":null,"dir":"Reference","previous_headings":"","what":"Write copies of the .stan files of a Stan model and its #include files\nwith all profiling statements removed. — write_stan_files_no_profile","title":"Write copies of the .stan files of a Stan model and its #include files\nwith all profiling statements removed. — write_stan_files_no_profile","text":"Write copies .stan files Stan model #include files profiling statements removed.","code":""},{"path":"epiforecasts.io/epinowcast/dev/reference/write_stan_files_no_profile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write copies of the .stan files of a Stan model and its #include files\nwith all profiling statements removed. — write_stan_files_no_profile","text":"","code":"write_stan_files_no_profile(   stan_file,   include_paths = NULL,   target_dir = tempdir() )"},{"path":"epiforecasts.io/epinowcast/dev/reference/write_stan_files_no_profile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write copies of the .stan files of a Stan model and its #include files\nwith all profiling statements removed. — write_stan_files_no_profile","text":"stan_file path .stan file containing Stan program. include_paths Paths directories Stan look files specified #include directives Stan program. target_dir path directory manipulated .stan files without profiling statements stored. avoid overriding original .stan files, different directory original model include_paths.","code":""},{"path":"epiforecasts.io/epinowcast/dev/reference/write_stan_files_no_profile.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Write copies of the .stan files of a Stan model and its #include files\nwith all profiling statements removed. — write_stan_files_no_profile","text":"list containing path .stan file without profiling statements include_paths included .stan files without profiling statements","code":""},{"path":[]},{"path":"epiforecasts.io/epinowcast/dev/news/index.html","id":"epinowcast-010","dir":"Changelog","previous_headings":"","what":"epinowcast 0.1.0","title":"epinowcast 0.1.0","text":"major release contains multiple breaking changes. needing old interface please install 0.0.7 GitHub. major focus release improving user experience increase modularity, development flexible full featured formula interface, hopefully future proofing far possible. ease, stratified changes interface, package, documentation, model changes.","code":""},{"path":"epiforecasts.io/epinowcast/dev/news/index.html","id":"interface-0-1-0","dir":"Changelog","previous_headings":"","what":"Interface","title":"epinowcast 0.1.0","text":"fully featured flexible formula interface added allows specification fixed effects, lme4 random effects, random walks. See #27 @seabbs.","code":""},{"path":"epiforecasts.io/epinowcast/dev/news/index.html","id":"package-0-1-0","dir":"Changelog","previous_headings":"","what":"Package","title":"epinowcast 0.1.0","text":"Renamed package updated description give clarity problem space focusses . See #110 @seabbs. new helper function enw_delay_metadata() added. produces metadata delay distribution vector may helpful future modelling. prepares way #4 data frame combined reference metadata order build non-parametric hazard reference delay based models. addition adding function, also added output enw_preprocess_data() order make metadata readily available end-users. See #80 @seabbs. Two new helper functions enw_filter_reference_dates() enw_filter_report_dates() added. replace enw_retrospective_data() allow users similarly construct retrospective data. Splitting functions components also allows additional use cases previously possible. Note definition assumed report date given reference date must equal greater (.e report happen event reported occurs). See #82 @sbfnk @seabbs. internal grouping variables refactored reduce chance clashes columns data frames supplied user. also error thrown case variable clash, making preprocessing safer. See #102 @adrian-lison @seabbs, solves #99. Support preprocessing observations missing reference dates added along new data object returned enw_preprocess_data() highlights information user (alternatively can accessed users using enw_missing_reference()). addition, missing observations setup passed stan order allow use modelling. feature preparation adding full support missing observations (see #43). See #106 @adrian-lison @seabbs. discretised reporting probability function extended handle delays beyond maximum delay three different ways: ignore, add maximum, normalize. nowcasting model now uses “add maximum” instead “normalize”. See #113 @adrian-lison. Fixed issue (#105) cmdstan 2.30.0 passing optimisation flags stanc_options default causing compilation error passing flags default. See #117 @sbfnk @seabbs.","code":""},{"path":"epiforecasts.io/epinowcast/dev/news/index.html","id":"model-0-1-0","dir":"Changelog","previous_headings":"","what":"Model","title":"epinowcast 0.1.0","text":"Added support parametric exponential delay distributions (note comparable intercept-non-parametric hazard model) potentially parametric delay (though currently throw error due lack appropriate non-parametric hazard). See #84 @seabbs. Updated expectation random walk model use efficient cumulative_sum implementation suggested @adrian-lison #98]. See #103 @seabbs. Aligned implementation overdispersion prior prior choice recommendations stan wiki. See #111 @adrian-lison.","code":""},{"path":"epiforecasts.io/epinowcast/dev/news/index.html","id":"documentation-0-1-0","dir":"Changelog","previous_headings":"","what":"Documentation","title":"epinowcast 0.1.0","text":"model description updated reflect currently implemented model improve readability. use use reference report date nomenclature also standardised across package. See #71 @sbfnk @seabbs.","code":""},{"path":"epiforecasts.io/epinowcast/dev/news/index.html","id":"internals-0-1-0","dir":"Changelog","previous_headings":"","what":"Internals","title":"epinowcast 0.1.0","text":"Array declarations stan model updated. maintain compatibility [expose_stan_fns()] (depends rstan), additional functionality added parse stan code function. See #74, #85, #93 @sbfnk @seabbs. Remove spurious warnings due missing initial values optional parameters. See #76 @sbfnk @seabbs.","code":""},{"path":"epiforecasts.io/epinowcast/dev/news/index.html","id":"epinowcast-007","dir":"Changelog","previous_headings":"","what":"epinowcast 0.0.7","title":"epinowcast 0.0.7","text":"Adds additional quality life data processing maximum number (max_confirm) notifications available every row (cumulative incidence notifications) cumulative daily empirical proportion reported calculated user pre-processing (see #62 @seabbs). default approach handling reported notifications beyond maximum delay changed. 0.0.6 previous versions notifications beyond maximum delay silently dropped. 0.0.7 now optional behaviour (set using max_delay_strat [enw_preprocess_data()]) default instead add notifications last included delay present. produce accurate long-term nowcasts data available means reported notifications maximum delay need interpreted mind. See #62by @seabbs. Adds basic testing documentation preprocessing functions. See #62by @seabbs. Stabilises calculation expected observations increasing proportion calculation performed log scale. results reduced computation time majority coming switching using neg_binomial_2_log family functions (natural scale counterparts). See #65by @seabbs","code":""},{"path":"epiforecasts.io/epinowcast/dev/news/index.html","id":"epinowcast-006","dir":"Changelog","previous_headings":"","what":"epinowcast 0.0.6","title":"epinowcast 0.0.6","text":"Simplifies optimises internal functions used estimate parametric daily reporting probability. now exposed user via distribution parameter Lognormal Gamma families tested work. Note parameterisations use standard parameterisations given stan manual (see #42 @adrian-lison @seabbs) Add profiling switch model compilation, allowing toggle profiling (https://mc-stan.org/cmdstanr/articles/profiling.html) /model. Also supports .stan files found include_paths (see #41 #54 @adrian-lison). Fully vectorise likelihood flattening observations pre-specify expected observations vector calculating log-likelihood (see #40 @seabbs). Adds vectorisation zero truncated normal distributions (see #38 @seabbs) hazard_to_prob optimised using vectorisation (see [#53] @adrian-lison @seabbs). prob_to_hazard optimised required cumulative probabilities calculated (see [#53] @adrian-lison @seabbs). Updated use inv_sqrt stan function (see #60 @seabbs). Added support scoringutils 1.0.0 (see #61 @seabbs). Added basic example helper function, enw_example(), power examples tests based work done forecast.vocs (see #61 @seabbs).","code":""},{"path":"epiforecasts.io/epinowcast/dev/news/index.html","id":"epinowcast-005","dir":"Changelog","previous_headings":"","what":"epinowcast 0.0.5","title":"epinowcast 0.0.5","text":"Convert retrospective data date fields class IDate utilising enw_retrospective_data solve esoteric error. Added full argument name include_paths avoid console chatter Adds stanc_options argument enw_model() specifies new default list(\"01\") enables simple pre-compilation optimisations. See optimisation details. Remove inv_logit logit may instead use base R plogit qlogit.","code":""},{"path":"epiforecasts.io/epinowcast/dev/news/index.html","id":"epinowcast-004","dir":"Changelog","previous_headings":"","what":"epinowcast 0.0.4","title":"epinowcast 0.0.4","text":"Add support extracting summarising posterior nowcast samples Package spell check Update read quick start use 40 days delay vs 30 Add section read quick start showing example handling nowcast samples. Add support passing custom models included files enw_model(). Fix bug enw_summarise_samples() returned duplicate samples. Add support passing holidays variable adjusting converting holiday day custom day week (default Sunday set user). Added support scoring natural log scale. represents absolute relative scoring respectively.","code":""},{"path":"epiforecasts.io/epinowcast/dev/news/index.html","id":"epinowcast-003","dir":"Changelog","previous_headings":"","what":"epinowcast 0.0.3","title":"epinowcast 0.0.3","text":"Add support passing priors Add case study vignette Add model definition implementation details. Add support sample scoring (using scoringutils).","code":""},{"path":"epiforecasts.io/epinowcast/dev/news/index.html","id":"epinowcast-002","dir":"Changelog","previous_headings":"","what":"epinowcast 0.0.2","title":"epinowcast 0.0.2","text":"Initial version package broadly working functionality first draft vignettes.","code":""},{"path":"epiforecasts.io/epinowcast/dev/news/index.html","id":"epinowcast-001","dir":"Changelog","previous_headings":"","what":"epinowcast 0.0.1","title":"epinowcast 0.0.1","text":"Initial package version development code","code":""}]
